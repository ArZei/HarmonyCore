;;*****************************************************************************
;;
;; Title:       OrderItemsOverlayTests.dbl
;;
;; Description: Unit tests for the operations defined in OrderItemsOverlaysController.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Microsoft.AspNetCore.JsonPatch
import Microsoft.VisualStudio.TestTools.UnitTesting
import Newtonsoft.Json
import System.Collections.Generic
import System.Net.Http
import Services
import Services.Test.Models

namespace Services.Test.UnitTests

    {TestClass}
    public partial class OrderItemsOverlayTests

        ;;------------------------------------------------------------
        ;;Get all OrderItemsOverlays

        {TestMethod}
        {TestCategory("OrderItemsOverlay Tests - Read All")}
        public method GetOrderItemsOverlays, void
        proc
            disposable data client = UnitTestEnvironment.Server.CreateClient()
            disposable data response = client.GetAsync("/odata/OrderItemsOverlays").Result
            data result = response.Content.ReadAsStringAsync().Result
            response.EnsureSuccessStatusCode()
            data orderItemsOverlays, @ODataOrderItemsOverlays, JsonConvert.DeserializeObject<ODataOrderItemsOverlays>(result)
        endmethod

        ;;------------------------------------------------------------
        ;;Get all OrderItemsOverlays and expand relation REL_OrderItemKey

        {TestMethod}
        {TestCategory("OrderItemsOverlay Tests - Read All")}
        public method GetOrderItemsOverlays_Expand_REL_OrderItemKey, void
        proc
            data uri = "/odata/OrderItemsOverlays?$expand=REL_OrderItemKey"
            disposable data client = UnitTestEnvironment.Server.CreateClient()
            disposable data response = client.GetAsync(uri).Result
            data result = response.Content.ReadAsStringAsync().Result
            response.EnsureSuccessStatusCode()
        endmethod

        ;;------------------------------------------------------------
        ;;Get all OrderItemsOverlays and expand relation REL_ItemOrdered

        {TestMethod}
        {TestCategory("OrderItemsOverlay Tests - Read All")}
        public method GetOrderItemsOverlays_Expand_REL_ItemOrdered, void
        proc
            data uri = "/odata/OrderItemsOverlays?$expand=REL_ItemOrdered"
            disposable data client = UnitTestEnvironment.Server.CreateClient()
            disposable data response = client.GetAsync(uri).Result
            data result = response.Content.ReadAsStringAsync().Result
            response.EnsureSuccessStatusCode()
        endmethod

        ;;------------------------------------------------------------
        ;;Get all OrderItemsOverlays and expand all relations

        {TestMethod}
        {TestCategory("OrderItemsOverlay Tests - Read All")}
        public method GetOrderItemsOverlays_Expand_All, void
        proc
            data uri = "/odata/OrderItemsOverlays?$expand=REL_OrderItemKey,REL_ItemOrdered"
            disposable data client = UnitTestEnvironment.Server.CreateClient()
            disposable data response = client.GetAsync(uri).Result
            data result = response.Content.ReadAsStringAsync().Result
            response.EnsureSuccessStatusCode()
        endmethod
        
        ;;------------------------------------------------------------
        ;;Get a single OrderItemsOverlay by primary key

        {TestMethod}
        {TestCategory("OrderItemsOverlay Tests - Read by Primary Key")}
        public method GetOrderItemsOverlay, void
        proc
            data client = UnitTestEnvironment.Server.CreateClient()
            data request = String.Format("/odata/OrderItemsOverlays(OrderItemKey={1})","",TestConstants.GetOrderItemsOverlay_OrderItemKey)
            data response = client.GetAsync(request).Result
            data result = response.Content.ReadAsStringAsync().Result
            response.EnsureSuccessStatusCode()
            data orderItemsOverlay, @ODataOrderItemsOverlay, JsonConvert.DeserializeObject<ODataOrderItemsOverlay>(result)
        endmethod

        ;;------------------------------------------------------------
        ;;Get a single OrderItemsOverlay by primary key and expand relation REL_OrderItemKey

        {TestMethod}
        {TestCategory("OrderItemsOverlay Tests - Read by Primary Key")}
        public method GetOrderItemsOverlay_Expand_REL_OrderItemKey, void
        proc
            data client = UnitTestEnvironment.Server.CreateClient()
            data request = String.Format("/odata/OrderItemsOverlays(OrderItemKey={1})?$expand=REL_OrderItemKey","",TestConstants.GetOrderItemsOverlay_Expand_REL_OrderItemKey_OrderItemKey)
            data response = client.GetAsync(request).Result
            data result = response.Content.ReadAsStringAsync().Result
            response.EnsureSuccessStatusCode()
            data orderItemsOverlay, @ODataOrderItemsOverlay, JsonConvert.DeserializeObject<ODataOrderItemsOverlay>(result)
        endmethod

        ;;------------------------------------------------------------
        ;;Get a single OrderItemsOverlay by primary key and expand relation REL_ItemOrdered

        {TestMethod}
        {TestCategory("OrderItemsOverlay Tests - Read by Primary Key")}
        public method GetOrderItemsOverlay_Expand_REL_ItemOrdered, void
        proc
            data client = UnitTestEnvironment.Server.CreateClient()
            data request = String.Format("/odata/OrderItemsOverlays(OrderItemKey={1})?$expand=REL_ItemOrdered","",TestConstants.GetOrderItemsOverlay_Expand_REL_ItemOrdered_OrderItemKey)
            data response = client.GetAsync(request).Result
            data result = response.Content.ReadAsStringAsync().Result
            response.EnsureSuccessStatusCode()
            data orderItemsOverlay, @ODataOrderItemsOverlay, JsonConvert.DeserializeObject<ODataOrderItemsOverlay>(result)
        endmethod

        ;;------------------------------------------------------------
        ;;Get a single OrderItemsOverlay by primary key and expand all relations

        {TestMethod}
        {TestCategory("OrderItemsOverlay Tests - Read by Primary Key")}
        public method GetOrderItemsOverlay_Expand_All, void
        proc
            data client = UnitTestEnvironment.Server.CreateClient()
            data request = String.Format("/odata/OrderItemsOverlays(OrderItemKey={1})?$expand=REL_OrderItemKey,REL_ItemOrdered","",TestConstants.GetOrderItemsOverlay_Expand_All_OrderItemKey)
            data response = client.GetAsync(request).Result
            data result = response.Content.ReadAsStringAsync().Result
            response.EnsureSuccessStatusCode()
            data orderItemsOverlay, @ODataOrderItemsOverlay, JsonConvert.DeserializeObject<ODataOrderItemsOverlay>(result)
        endmethod

        ;;------------------------------------------------------------
        ;;Get a single OrderItemsOverlay by alternate key 1 (ItemOrdered)

        {TestMethod}
        {TestCategory("OrderItemsOverlay Tests - Read by Alternate Key")}
        public method GetOrderItemsOverlay_ByAltKey_ItemOrdered, void
        proc
            data client = UnitTestEnvironment.Server.CreateClient()
            data request = String.Format("/odata/OrderItemsOverlays(ItemOrdered={1})", "", TestConstants.GetOrderItemsOverlay_ByAltKey_ItemOrdered_ItemOrdered)
            data response = client.GetAsync(request).Result
            data result = response.Content.ReadAsStringAsync().Result
            response.EnsureSuccessStatusCode()
            data orderItemsOverlays, @ODataOrderItemsOverlays,JsonConvert.DeserializeObject<ODataOrderItemsOverlays>(result)
        endmethod

        ;;------------------------------------------------------------
        ;;Get a single OrderItemsOverlay by alternate key 2 (DateShipped)

        {TestMethod}
        {TestCategory("OrderItemsOverlay Tests - Read by Alternate Key")}
        public method GetOrderItemsOverlay_ByAltKey_DateShipped, void
        proc
            data client = UnitTestEnvironment.Server.CreateClient()
            data request = String.Format("/odata/OrderItemsOverlays(DateShipped={1})", "", TestConstants.GetOrderItemsOverlay_ByAltKey_DateShipped_DateShipped.ToString("yyyy-MM-dd"))
            data response = client.GetAsync(request).Result
            data result = response.Content.ReadAsStringAsync().Result
            response.EnsureSuccessStatusCode()
            data orderItemsOverlays, @ODataOrderItemsOverlays,JsonConvert.DeserializeObject<ODataOrderItemsOverlays>(result)
        endmethod

        ;;------------------------------------------------------------
        ;;Get a single OrderItemsOverlay by alternate key 3 (InvoiceNumber)

        {TestMethod}
        {TestCategory("OrderItemsOverlay Tests - Read by Alternate Key")}
        public method GetOrderItemsOverlay_ByAltKey_InvoiceNumber, void
        proc
            data client = UnitTestEnvironment.Server.CreateClient()
            data request = String.Format("/odata/OrderItemsOverlays(InvoiceNumber={1})", "", TestConstants.GetOrderItemsOverlay_ByAltKey_InvoiceNumber_InvoiceNumber)
            data response = client.GetAsync(request).Result
            data result = response.Content.ReadAsStringAsync().Result
            response.EnsureSuccessStatusCode()
            data orderItemsOverlays, @ODataOrderItemsOverlays,JsonConvert.DeserializeObject<ODataOrderItemsOverlays>(result)
        endmethod

        ;;------------------------------------------------------------
        ;;Create new OrderItemsOverlay (client specified key)

        {TestMethod}
        {TestCategory("OrderItemsOverlay Tests - Create, Update & Delete")}
        public method UpdateOrderItemsOverlay, void
        proc
            disposable data client = UnitTestEnvironment.Server.CreateClient()

            ;;Get one orderItemsOverlay from the file
            data getRequest = String.Format("/odata/OrderItemsOverlays(OrderItemKey={1})","",TestConstants.GetOrderItemsOverlay_OrderItemKey)
            data getResponse = client.GetAsync(getRequest).Result
            data getResult = getResponse.Content.ReadAsStringAsync().Result

            ;;Check that we got a successful response from the web service
            getResponse.EnsureSuccessStatusCode()

            ;;Deserialize the JSON into a OrderItemsOverlay object
            data doOrderItemsOverlay, @OrderItemsOverlay, JsonConvert.DeserializeObject<OrderItemsOverlay>(getResult)

            doOrderItemsOverlay.OrderItemKey = TestConstants.UpdateOrderItemsOverlay_OrderItemKey

            ;TODO: Also need to ensure any nodups alternate keys get unique values

            ;;Create new item
            disposable data requestBody = new StringContent(JsonConvert.SerializeObject(doOrderItemsOverlay),System.Text.Encoding.UTF8, "application/json")
            data request = String.Format("/odata/OrderItemsOverlays(OrderItemKey={1})","",TestConstants.UpdateOrderItemsOverlay_OrderItemKey)
            disposable data response = client.PutAsync(request, requestBody).Result

            ;;Check that we got a successful response from the web service
            response.EnsureSuccessStatusCode()

            ;;Get the inserted record
            getResponse = client.GetAsync(request).Result
            getResult = getResponse.Content.ReadAsStringAsync().Result

            ;;Check that we got a successful response from the web service
            getResponse.EnsureSuccessStatusCode()

            ;;Deserialize the JSON into a OrderItemsOverlay object
            doOrderItemsOverlay = JsonConvert.DeserializeObject<OrderItemsOverlay>(getResult)

            ;;Change the first non key field to test full update
            doOrderItemsOverlay.OrderNumber = 8

            ;;Update full item
            requestBody = new StringContent(JsonConvert.SerializeObject(doOrderItemsOverlay),System.Text.Encoding.UTF8, "application/json")
            request = String.Format("/odata/OrderItemsOverlays(OrderItemKey={1})","",TestConstants.UpdateOrderItemsOverlay_OrderItemKey)
            response = client.PutAsync(request, requestBody).Result

            ;;Check that we got a successful response from the web service
            response.EnsureSuccessStatusCode()

            ;;Get the inserted record
            getResponse = client.GetAsync(request).Result
            getResult = getResponse.Content.ReadAsStringAsync().Result

            ;;Check that we got a successful response from the web service
            getResponse.EnsureSuccessStatusCode()

            ;;Deserialize the JSON into a OrderItemsOverlay object
            doOrderItemsOverlay = JsonConvert.DeserializeObject<OrderItemsOverlay>(getResult)

            Assert.AreEqual(doOrderItemsOverlay.OrderNumber, 8)

            ;;Update one property in the orderItemsOverlay
            data patchDoc = new JsonPatchDocument()
            patchDoc.Replace("OrderNumber", "9")

            ;;Serialize the patch to JSON
            data serializedPatch = JsonConvert.SerializeObject(patchDoc)

            ;;Apply the patch
            disposable data patchRequestBody = new StringContent(serializedPatch,System.Text.Encoding.UTF8, "application/json-patch+json")
            disposable data patchResponse = client.PatchAsync(request, patchRequestBody).Result

            ;;Check that we got a successful response from the web service
            patchResponse.EnsureSuccessStatusCode()

            ;;Get the updated orderItemsOverlay record
            getResponse = client.GetAsync(request).Result
            getResult = getResponse.Content.ReadAsStringAsync().Result

            ;;Check that we got a successful response from the web service
            getResponse.EnsureSuccessStatusCode()

            ;;Deserialize the JSON into a OrderItemsOverlay object
            doOrderItemsOverlay = JsonConvert.DeserializeObject<OrderItemsOverlay>(getResult)

            ;;Verify that the property was changed
            Assert.AreEqual(doOrderItemsOverlay.OrderNumber, 9)

            ;;Delete It
            disposable data deleteResponse = client.DeleteAsync(request).Result

            ;;Check that we got a successful response from the web service
            getResponse.EnsureSuccessStatusCode()

            ;;Attempt to get the deleted record
            getResponse = client.GetAsync(request).Result

            ;;Check we got a fail state from the web service
            Assert.AreEqual(getResponse.IsSuccessStatusCode, false)

        endmethod

    endclass

endnamespace
