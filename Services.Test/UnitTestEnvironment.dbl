;;*****************************************************************************
;;
;; Title:       UnitTestEnvironment.dbl
;;
;; Description: Configures an environment in which unit tests can operate
;;              with a known initial data state.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Microsoft.AspNetCore
import Microsoft.AspNetCore.Hosting
import Microsoft.AspNetCore.TestHost
import Microsoft.VisualStudio.TestTools.UnitTesting
import System.IO
import Services
import Services.Models

namespace Services.Test

    {TestClass}
    public class UnitTestEnvironment

        public static Server, @TestServer

        {AssemblyInitialize}
        public static method AssemblyInitialize, void
            required in context, @TestContext
        proc
            ;;Allows select to join when the keys in the file are not the same type as the keys in the code
            data status, int
            xcall setlog("SYNSEL_NUMALPHA_KEYS", 1, status) 

            ;;Configure the test environment (set logicals, create files in a known state, etc.)
            TestEnvironment.Configure()

            ;;Define the content root and web root folders (so we can pick up the Swagger file for API documentation)
            data wwwroot = Path.Combine(AppContext.BaseDirectory, "wwwroot")

            if(string.IsNullOrEmpty(wwwroot) && Directory.Exists(wwwroot)) then
            begin
                ;;Create a TestServer to host the Web API services
                Server = new TestServer(new WebHostBuilder().UseStartup<Startup>())
            end
            else
            begin
                ;;Create a TestServer to host the Web API services
                Server = new TestServer(new WebHostBuilder().UseContentRoot(wwwroot).UseWebRoot(wwwroot).UseStartup<Startup>())
            end

            ;;Fake out HTTPS
            Server.BaseAddress = new Uri("https://localhost")

        endmethod

        {AssemblyCleanup}
        public static method AssemblyCleanup, void
        proc
            ;;Clean up the test host
            Server.Dispose()
            Server = ^null

            ;;Delete the data files
            TestEnvironment.Cleanup()

        endmethod

    endclass

endnamespace
