;;*****************************************************************************
;;
;; Title:       DbContext.dbl
;;
;; Description: OData DbContext class
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Harmony.Core
import Harmony.Core.Context
import Harmony.Core.EF.Extensions
import Microsoft.EntityFrameworkCore
import System.Linq.Expressions
import TraditionalBridge.Models

namespace TraditionalBridge.Models

    ;;; <summary>
    ;;;
    ;;; </summary>
    public class DbContext extends Microsoft.EntityFrameworkCore.DbContext

        ;;; <summary>
        ;;; Construct a new DbContext.
        ;;; </summary>
        public method DbContext
            options, @DbContextOptions<DbContext>
            endparams
            parent(options)
        proc

        endmethod

        ;;; <summary>
        ;;; Exposes Booleanstr data.
        ;;; </summary>
        public readwrite property Booleanstrs, @DbSet<Booleanstr>

        ;;; <summary>
        ;;; Exposes Datetimeary data.
        ;;; </summary>
        public readwrite property Datetimearys, @DbSet<Datetimeary>

        ;;; <summary>
        ;;; Exposes Datetimestr data.
        ;;; </summary>
        public readwrite property Datetimestrs, @DbSet<Datetimestr>

        ;;; <summary>
        ;;; Exposes Dnetdatetime data.
        ;;; </summary>
        public readwrite property Dnetdatetimes, @DbSet<Dnetdatetime>

        ;;; <summary>
        ;;; Exposes Strtest1 data.
        ;;; </summary>
        public readwrite property Strtest1s, @DbSet<Strtest1>

        ;;; <summary>
        ;;; Exposes Timekey data.
        ;;; </summary>
        public readwrite property Timekeys, @DbSet<Timekey>

        ;;; <summary>
        ;;;
        ;;; </summary>
        protected override method OnModelCreating, void
            parm, @ModelBuilder
        proc
            parm.Ignore(^typeof(AlphaDesc))
            parm.Ignore(^typeof(DataObjectMetadataBase))

.region "Composite key definitions"

            ;;Entities with a single primary key segment have the key declared to EF via a
            ;;{Key} attribute on the appropriate property in the data model, but only one {key}
            ;;attribute can be used in a class, so keys with multiple segments are defined
            ;;using the "Fluent API" here.


.endregion

.region "Tag filtering"

            ;;This will currently only work for single field .operator. value tags.

.endregion


            parent.OnModelCreating(parm)

        endmethod

    endclass

endnamespace