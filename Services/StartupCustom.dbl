;;*****************************************************************************
;;
;; Title:       StartupCustom.dbl
;;
;; Description: Custom startup class methods
;;
;;*****************************************************************************
;; THIS CODE WAS HAND CRAFTED
;;*****************************************************************************

import Harmony.Core.Context
import Harmony.Core.FileIO
import Harmony.Core.Utility
import Harmony.OData
import Harmony.AspNetCore.Context
import Microsoft.AspNetCore.Builder
import Microsoft.AspNetCore.Hosting
import Microsoft.AspNetCore.Http
import Microsoft.AspNet.OData
import Microsoft.AspNet.OData.Extensions
import Microsoft.AspNet.OData.Builder
import Microsoft.AspNet.OData.Routing
import Microsoft.EntityFrameworkCore
import Microsoft.Extensions.DependencyInjection
import Microsoft.Extensions.DependencyInjection.Extensions
import Microsoft.OData
import Microsoft.OData.UriParser
import Swashbuckle.AspNetCore.Swagger
import Microsoft.AspNetCore.StaticFiles
import Microsoft.AspNetCore.Mvc.Abstractions
import Services.Models
import Harmony.Core.Interface
import Harmony.Core
import Harmony.OData
import Harmony.AspNetCore.Context
import Services.ExposedMethods
import System.IO

namespace Services

    public partial class Startup

        partial method ConfigureServicesCustom, void
            services, @IServiceCollection 
        proc
            services.AddScoped<IPrimaryKeyFactory,PrimaryKeyGenerator>()
            services.TryAddEnumerable(ServiceDescriptor.Singleton<IActionInvokerProvider, HarmonySprocActionInvokerProvider>())
            services.AddSingleton<IContextFactory<Services.ExposedMethods.IGlobalsMethods>>(new AssemblyLoadContextPool<Services.ExposedMethods.IGlobalsMethods, Services.ExposedMethods.GlobalsMethods>(2))
			services.AddScoped<Microsoft.EntityFrameworkCore.DbContext>(MakeGenericDbContext)

			Environment.SetEnvironmentVariable("HARMONY_TEST_MACHINE", "vmsit")
			Environment.SetEnvironmentVariable("HARMONY_TEST_USER", "jeff1")
			Environment.SetEnvironmentVariable("HARMONY_TEST_PASSWORD", "jeff1")
			data contextPool, @RemoteExternalContextPool<ExternalCallContext>, new RemoteExternalContextPool<ExternalCallContext>(Environment.GetEnvironmentVariable("HARMONY_TEST_MACHINE"), Environment.GetEnvironmentVariable("HARMONY_TEST_USER"), new Renci.SshNet.PasswordAuthenticationMethod(Environment.GetEnvironmentVariable("HARMONY_TEST_USER"), Environment.GetEnvironmentVariable("HARMONY_TEST_PASSWORD")), "RUN PROGRAM.EXE" , 4) 
            ;data currentDirectory = Path.GetDirectoryName(^typeof(Startup).Assembly.Location)
            ;data contextPool = new ExternalContextPool<ExternalCallContext>(Environment.GetEnvironmentVariable("SYNERGYDE32") + "dbl\bin\dbs.exe", 'TraditionalBridge.Test.dbr', Path.GetFullPath(Path.Combine(currentDirectory, "..\..\..\..\Debug\x86")), ^null, 4) 
            services.AddSingleton<IContextFactory<ExternalCallContext>>(contextPool)
            services.AddContextPool<ExternalCallContext>()
        endmethod

        private method MakeGenericDbContext, @Microsoft.EntityFrameworkCore.DbContext
            sp, @IServiceProvider
        proc
            mreturn sp.GetService<Services.DbContext>()
        endmethod

        partial method ConfigureCustom, void
            required in app, @IApplicationBuilder
            required in env, @IHostingEnvironment
		proc
			;app.UseEagerContext<ExternalCallContext>(contextPool)
        endmethod

    endclass

endnamespace
