;;*****************************************************************************
;;
;; Title:       Item.dbl
;;
;; Type:        Class
;;
;; Description: OData model class representing data defined by the repository
;;              structure ITEMS and from the data file ICSTUT:ITEMS.ism.
;;
;;*****************************************************************************
;; WARNING
;;
;; This file was code generated. Avoid editing this file, as any changes that
;; you make will be lost of the file is re-generated.
;;
;;*****************************************************************************
;;
;; Copyright (c) 2012, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import Newtonsoft.Json
import System.Collections.Generic

namespace SampleServices.Test.Models

    public partial class Item

        ;;; <summary>
        ;;; Item number
        ;;; </summary>
        public readwrite property ItemNumber, int

        ;;; <summary>
        ;;; Vendor number
        ;;; </summary>
        public readwrite property VendorNumber, int

        ;;; <summary>
        ;;; Size in gallons
        ;;; </summary>
        public readwrite property Size, int

        ;;; <summary>
        ;;; Common name
        ;;; </summary>
        public readwrite property CommonName, string

        ;;; <summary>
        ;;; Latin name
        ;;; </summary>
        public readwrite property LatinName, string

        ;;; <summary>
        ;;; Hardiness zone code
        ;;; </summary>
        public readwrite property ZoneCode, int

        ;;; <summary>
        ;;; Type code
        ;;; </summary>
        public readwrite property Type, int

        ;;; <summary>
        ;;; Flowering?
        ;;; </summary>
        public readwrite property Flowering, string

        ;;; <summary>
        ;;; Flower color
        ;;; </summary>
        public readwrite property FlowerColor, string

        ;;; <summary>
        ;;; Shape
        ;;; </summary>
        public readwrite property Shape, string

        ;;; <summary>
        ;;; Maximum height (in inches)
        ;;; </summary>
        public readwrite property MaxHeight, int

        ;;; <summary>
        ;;; Maximum width (in inches)
        ;;; </summary>
        public readwrite property MaxWidth, int

        ;;; <summary>
        ;;; Water requirements
        ;;; </summary>
        public readwrite property WaterRequirement, string

        ;;; <summary>
        ;;; Sun requirements
        ;;; </summary>
        public readwrite property SunRequirement, string

        ;;; <summary>
        ;;; Bin/aisle
        ;;; </summary>
        public readwrite property BinLocation, string

        ;;; <summary>
        ;;; Qty on hand
        ;;; </summary>
        public readwrite property QtyOnHand, int

        ;;; <summary>
        ;;; Qty allocated
        ;;; </summary>
        public readwrite property QtyAllocated, int

        ;;; <summary>
        ;;; Qty on order
        ;;; </summary>
        public readwrite property QtyOnOrder, int

        ;;; <summary>
        ;;; Reorder point
        ;;; </summary>
        public readwrite property ReorderLevel, int

        ;;; <summary>
        ;;; Unit price
        ;;; </summary>
        public readwrite property UnitPrice, decimal

        ;;; <summary>
        ;;; Item cost
        ;;; </summary>
        public readwrite property CostPrice, decimal

    endclass

    public class ODataItem
        
        {JsonProperty("odata.metadata")}
        public readwrite property Metadata, string
        {JsonProperty("value")}
        public readwrite property Value, @Item

    endclass

    public class ODataItems
        
        {JsonProperty("odata.metadata")}
        public readwrite property Metadata, string
        {JsonProperty("value")}
        public readwrite property Value, @List<Item>

    endclass

endnamespace
