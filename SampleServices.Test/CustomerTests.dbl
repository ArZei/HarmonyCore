;;*****************************************************************************
;;
;; Title:       CustomerTests.dbl
;;
;; Type:        Class
;;
;; Description: Unit tests for the operastions defined in CustomersController.
;;
;;*****************************************************************************
;; WARNING
;;
;; This file was code generated. Avoid editing this file, as any changes that
;; you make will be lost of the file is re-generated.
;;
;;*****************************************************************************
;;
;; Copyright (c) 2018, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import Microsoft.VisualStudio.TestTools.UnitTesting
import Newtonsoft.Json
import System.Collections.Generic
import System.Net.Http
import SampleServices
import SampleServices.Test.Models

namespace SampleServices.Test

	{TestClass}
	public partial class CustomerTests

		{TestMethod}
		{TestCategory("Customer Tests - Single")}
		public method GetCustomer, void
		proc
			data client = UnitTestEnvironment.Server.CreateClient()
			data request = String.Format("/odata/Customers({0})", TestContext.CustomerID)
			data response = client.GetAsync(request).Result
			data result = response.Content.ReadAsStringAsync().Result
			response.EnsureSuccessStatusCode()
			data customer, @ODataCustomer, JsonConvert.DeserializeObject<ODataCustomer>(result)
		endmethod

		{TestMethod}
		{TestCategory("Customer Tests - Single")}
		public method GetCustomer_Expand_All, void
		proc
			data client = UnitTestEnvironment.Server.CreateClient()
			data request = String.Format("/odata/Customers({0})?$expand=REL_Orders,REL_Item", TestContext.CustomerID)
			data response = client.GetAsync(request).Result
			data result = response.Content.ReadAsStringAsync().Result
			response.EnsureSuccessStatusCode()
			data customer, @ODataCustomer, JsonConvert.DeserializeObject<ODataCustomer>(result)
		endmethod

		{TestMethod}
		{TestCategory("Customer Tests - All")}
		public method GetCustomers, void
		proc
			disposable data client = UnitTestEnvironment.Server.CreateClient()
			disposable data response = client.GetAsync("/odata/Customers").Result
			data result = response.Content.ReadAsStringAsync().Result
			response.EnsureSuccessStatusCode()
			data customers, @ODataCustomers, JsonConvert.DeserializeObject<ODataCustomers>(result)
		endmethod
	
		{TestMethod}
		{TestCategory("Customer Tests - All")}
		public method GetCustomers_Expand_REL_Orders, void
		proc
			data uri = "/odata/Customers?$expand=REL_Orders"
			disposable data client = UnitTestEnvironment.Server.CreateClient()
			disposable data response = client.GetAsync(uri).Result
			data result = response.Content.ReadAsStringAsync().Result
			response.EnsureSuccessStatusCode()
		endmethod

		{TestMethod}
		{TestCategory("Customer Tests - All")}
		public method GetCustomers_Expand_REL_Item, void
		proc
			data uri = "/odata/Customers?$expand=REL_Item"
			disposable data client = UnitTestEnvironment.Server.CreateClient()
			disposable data response = client.GetAsync(uri).Result
			data result = response.Content.ReadAsStringAsync().Result
			response.EnsureSuccessStatusCode()
		endmethod

		{TestMethod}
		{TestCategory("Customer Tests - All")}
		
		public method GetCustomers_Expand_All, void
		proc
			data uri = "/odata/Customers?$expand=REL_Orders,REL_Item"
			disposable data client = UnitTestEnvironment.Server.CreateClient()
			disposable data response = client.GetAsync(uri).Result
			data result = response.Content.ReadAsStringAsync().Result
			response.EnsureSuccessStatusCode()
		endmethod
		
		public method GetByKeyTagCustomer, void
		proc
			data client = UnitTestEnvironment.Server.CreateClient()
			data request = String.Format("/odata/Customers(CustRtype={1},CustKey={2})", "", TestContext.CustomerCustRtype,TestContext.CustomerCustKey)
			data response = client.GetAsync(request).Result
			data result = response.Content.ReadAsStringAsync().Result
			response.EnsureSuccessStatusCode()
			data customer, @ODataCustomer, JsonConvert.DeserializeObject<ODataCustomer>(result)
		endmethod

;		{TestMethod}
;		{TestCategory("Customer Tests - All")}
;		public method CreateCustomer, void
;		proc
;			disposable data client = UnitTestEnvironment.Server.CreateClient()
;			disposable data requestBody = new StringContent("")
;			disposable data response = client.PostAsync("/odata/Customers", requestBody).Result
;			data result = response.Content.ReadAsStringAsync().Result
;			response.EnsureSuccessStatusCode()
;		endmethod

;		{TestMethod}
;		{TestCategory("Customer Tests - All")}
;		public method UpdateCustomer, void
;		proc
;			disposable data client = UnitTestEnvironment.Server.CreateClient()
;			disposable data requestBody = new StringContent("")
;			disposable data response = client.PutAsync("/odata/Customers(1)", requestBody).Result
;			response.EnsureSuccessStatusCode()
;		endmethod

	endclass

endnamespace
