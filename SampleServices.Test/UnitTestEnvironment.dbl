;;*****************************************************************************
;;
;; Title:       UnitTestEnvironment.dbl
;;
;; Type:        Class
;;
;; Description: Configures an environment in which unit tests can operate
;;              with a known initial data state.
;;
;;*****************************************************************************
;; WARNING
;;
;; This file was code generated. Avoid editing this file, as any changes that
;; you make will be lost of the file is re-generated.
;;
;;*****************************************************************************
;;
;; Copyright (c) 2018, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import Microsoft.AspNetCore
import Microsoft.AspNetCore.Hosting
import Microsoft.AspNetCore.TestHost
import Microsoft.VisualStudio.TestTools.UnitTesting
import System.Collections.Generic
import System.IO
import System.Text
import SampleServices

main UnitTestEnvironment
proc
	;;Configure the environment
	UnitTestEnvironment.AssemblyInitialize(^null)

	;Leave this here for Jeff 
	;data tester = new OrderTests()  
	;tester.GetOrders_Expand_REL_TagCustomer() 
	;tester.GetOrders_Expand_REL_TagVendor()
	;tester.GetOrders_Expand_All()
	;tester.GetCustomer()      

	;;Start self-hosting (Kestrel)
	WebHost.CreateDefaultBuilder(new string[0]).UseStartup<Startup>().Build().Run()

	;;Cleanup the environment
	UnitTestEnvironment.AssemblyCleanup()

endmain

namespace SampleServices.Test

	{TestClass}
	public class UnitTestEnvironment

		public static Server, @TestServer 

		{AssemblyInitialize}
		public static method AssemblyInitialize, void
			required in context, @Microsoft.VisualStudio.TestTools.UnitTesting.TestContext
		proc
			;;Configure the test environment (set logicals, create files in a known state, etc.)
			TestEnvironment.Configure()

			;;Define the content root and web root folders (so we can pick up the Swagger file for API documentation)
			data wwwroot = Environment.GetEnvironmentVariable("WWWROOT")

			if(string.IsNullOrEmpty(wwwroot)) then
			begin
				;;Create a TestServer to host the Web API services
				Server = new TestServer(new WebHostBuilder().UseStartup<Startup>())
			end
			else
			begin
				;;Create a TestServer to host the Web API services
				Server = new TestServer(new WebHostBuilder().UseContentRoot(wwwroot).UseWebRoot(wwwroot).UseStartup<Startup>())
			end

		endmethod

		{AssemblyCleanup}
		public static method AssemblyCleanup, void
		proc
			;;Clean up the test host
			Server.Dispose()
			Server = ^null

			;;Delete the data files
			TestEnvironment.Cleanup()

		endmethod

	endclass

endnamespace
