;;*****************************************************************************
;;
;; Title:       syntstService.dbl
;;
;; Description: Service to expose methods that are part of the former
;;              xfServerPlus / xfNetLink "syntst" interface.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Harmony.Core
import Harmony.Core.Context
import Harmony.Core.Interface
import System.Threading.Tasks
import System
import System.Collections.Generic
import System.Text
import Newtonsoft.Json.Linq
import System.Linq

import HarmonyCore.Test.Bridge.Client

namespace HarmonyCore.Test.Bridge.Client

    public partial class syntstService extends DynamicCallProvider

        ;;; <summary>
        ;;; Constructor
        ;;; </summary>
        public method syntstService
            connection, @IDynamicCallConnection
            endparams
            parent(connection)
        proc
            
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method array21, @Task<array21_Response>
            required in args, @array21_Request
        proc
            ;;Prepare the response object
            data response = new array21_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("array21"
            &   ,args.p1
            &   ,args.p2
            &   ,args.p3
            &   ,args.p4
            &   ,args.p5
            &   ,args.p6
            &   ,args.p7
            &   ,args.p8
            &   ,args.p9
            &   ,args.p10
            &   ,args.p11
            &   ,args.p12
            &   ,args.p13
            &   ,args.p14
            &   ,args.p15
            &   ,args.p16
            &   ,args.p17
            &   ,args.p18
            &   ,args.p19
            &   ,args.p20
            &   ,args.p21
            &   ,args.p22
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.p21 = ((@IEnumerable<string>)resultList[21 - 1]).ToArray()

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method artest1, @Task<artest1_Response>
            required in args, @artest1_Request
        proc
            ;;Prepare the response object
            data response = new artest1_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("artest1"
            &   ,ArgumentHelper.MayBeOptional(args.param1)
            &   ,ArgumentHelper.MayBeOptional(args.param2)
            &   ,ArgumentHelper.MayBeOptional(args.param3)
            &   ,ArgumentHelper.MayBeOptional(args.param4)
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.param1 = ^as(resultList[1 - 1],String)
            response.param2 = ^as(resultList[2 - 1],String)
            response.param3 = ^as(resultList[3 - 1],String)
            response.param4 = ^as(resultList[4 - 1],String)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_four, @Task<function_four_Response>
            required in args, @function_four_Request
        proc
            ;;Prepare the response object
            data response = new function_four_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_four"
            &   ,ArgumentHelper.MayBeOptional(args.p1)
            &   ,ArgumentHelper.MayBeOptional(args.p2)
            &   ,ArgumentHelper.MayBeOptional(args.p3)
            &   ,ArgumentHelper.MayBeOptional(args.p4)
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.p1 = ^as(resultList[1 - 1],String)
            response.p2 = ^as(resultList[2 - 1],String)
            response.p3 = ^as(resultList[3 - 1],String)
            response.p4 = ^as(resultList[4 - 1],String)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_eleven, @Task<function_eleven_Response>
            required in args, @function_eleven_Request
        proc
            ;;Prepare the response object
            data response = new function_eleven_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_eleven"
            &   ,ArgumentHelper.MayBeOptional(args.param1)
            &   ,ArgumentHelper.MayBeOptional(args.param2)
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set the return value in the return data
            response.ReturnValue = returnToken.ToObject<long>()

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.param1 = ^as(resultList[1 - 1],String)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_twelve, @Task<function_twelve_Response>
            required in args, @function_twelve_Request
        proc
            ;;Prepare the response object
            data response = new function_twelve_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_twelve"
            &   ,ArgumentHelper.MayBeOptional(args.p1)
            &   ,ArgumentHelper.MayBeOptional(args.p2)
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set the return value in the return data
            response.ReturnValue = returnToken.ToObject<int>()

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.p2 = ^as(resultList[2 - 1],String)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_sixteen, @Task<function_sixteen_Response>
            required in args, @function_sixteen_Request
        proc
            ;;Prepare the response object
            data response = new function_sixteen_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_sixteen"
            &   ,ArgumentHelper.MayBeOptional(args.p1)
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.p1 = ^as(resultList[1 - 1],String)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_nineteen, @Task<function_nineteen_Response>
            required in args, @function_nineteen_Request
        proc
            ;;Prepare the response object
            data response = new function_nineteen_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_nineteen"
            &   ,ArgumentHelper.MayBeOptional(args.p1)
            &   ,ArgumentHelper.MayBeOptional(args.p2)
            &   ,ArgumentHelper.MayBeOptional(args.p3)
            &   ,ArgumentHelper.MayBeOptional(args.p4)
            &   ,ArgumentHelper.MayBeOptional(args.p5)
            &   ,ArgumentHelper.MayBeOptional(args.p6)
            &   ,ArgumentHelper.MayBeOptional(args.p7)
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.p1 = ^as(resultList[1 - 1],Nullable<long>)
            response.p2 = ^as(resultList[2 - 1],Nullable<long>)
            response.p3 = ^as(resultList[3 - 1],Nullable<int>)
            response.p4 = ^as(resultList[4 - 1],Nullable<long>)
            response.p5 = ^as(resultList[5 - 1],Nullable<int>)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_twenty, @Task<function_twenty_Response>
            required in args, @function_twenty_Request
        proc
            ;;Prepare the response object
            data response = new function_twenty_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_twenty"
            &   ,ArgumentHelper.MayBeOptional(args.p1)
            &   ,ArgumentHelper.MayBeOptional(args.p2)
            &   ,ArgumentHelper.MayBeOptional(args.p3)
            &   ,ArgumentHelper.MayBeOptional(args.p4)
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.p1 = ^as(resultList[1 - 1],String)
            response.p2 = ^as(resultList[2 - 1],String)
            response.p3 = ^as(resultList[3 - 1],String)
            response.p4 = ^as(resultList[4 - 1],String)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_twentysix, @Task<function_twentysix_Response>
            required in args, @function_twentysix_Request
        proc
            ;;Prepare the response object
            data response = new function_twentysix_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_twentysix"
            &   ,ArgumentHelper.MayBeOptional(args.param1)
            &   ,ArgumentHelper.MayBeOptional(args.param2)
            &   ,ArgumentHelper.MayBeOptional(args.param3)
            &   ,ArgumentHelper.MayBeOptional(args.param4)
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set the return value in the return data
            response.ReturnValue = returnToken.ToObject<int>()

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.param1 = ^as(resultList[1 - 1],String)
            response.param2 = ^as(resultList[2 - 1],String)
            response.param3 = ^as(resultList[3 - 1],String)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_sixtytwo, @Task<function_sixtytwo_Response>
            required in args, @function_sixtytwo_Request
        proc
            ;;Prepare the response object
            data response = new function_sixtytwo_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_sixtytwo"
            &   ,ArgumentHelper.MayBeOptional(args.p1)
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.p1 = ^as(resultList[1 - 1],Nullable<int>)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_sixtythree, @Task
            required in args, @function_sixtythree_Request
        proc
            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_sixtythree"
            &   ,ArgumentHelper.MayBeOptional(args.param1)
            &   ,ArgumentHelper.MayBeOptional(args.param2)
            &   ,ArgumentHelper.MayBeOptional(args.param3)
            &   )
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_sixtyfour, @Task
            required in args, @function_sixtyfour_Request
        proc
            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_sixtyfour"
            &   ,ArgumentHelper.MayBeOptional(args.param1)
            &   ,ArgumentHelper.MayBeOptional(args.param2)
            &   ,ArgumentHelper.MayBeOptional(args.param3)
            &   ,ArgumentHelper.MayBeOptional(args.param4)
            &   ,ArgumentHelper.MayBeOptional(args.param5)
            &   ,ArgumentHelper.MayBeOptional(args.param6)
            &   ,ArgumentHelper.MayBeOptional(args.param7)
            &   ,ArgumentHelper.MayBeOptional(args.param8)
            &   ,ArgumentHelper.MayBeOptional(args.param9)
            &   ,ArgumentHelper.MayBeOptional(args.param10)
            &   ,ArgumentHelper.MayBeOptional(args.param11)
            &   ,ArgumentHelper.MayBeOptional(args.param12)
            &   ,ArgumentHelper.MayBeOptional(args.param13)
            &   ,ArgumentHelper.MayBeOptional(args.param14)
            &   ,ArgumentHelper.MayBeOptional(args.param15)
            &   )
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_sixtyfive, @Task
            required in args, @function_sixtyfive_Request
        proc
            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_sixtyfive"
            &   ,ArgumentHelper.MayBeOptional(args.param1)
            &   ,ArgumentHelper.MayBeOptional(args.param2)
            &   ,ArgumentHelper.MayBeOptional(args.param3)
            &   ,ArgumentHelper.MayBeOptional(args.param4)
            &   ,ArgumentHelper.MayBeOptional(args.param5)
            &   ,ArgumentHelper.MayBeOptional(args.param6)
            &   ,ArgumentHelper.MayBeOptional(args.param7)
            &   ,ArgumentHelper.MayBeOptional(args.param8)
            &   ,ArgumentHelper.MayBeOptional(args.param9)
            &   ,ArgumentHelper.MayBeOptional(args.param10)
            &   ,ArgumentHelper.MayBeOptional(args.param11)
            &   ,ArgumentHelper.MayBeOptional(args.param12)
            &   ,ArgumentHelper.MayBeOptional(args.param13)
            &   ,ArgumentHelper.MayBeOptional(args.param14)
            &   ,ArgumentHelper.MayBeOptional(args.param15)
            &   )
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_sixtysix, @Task
            required in args, @function_sixtysix_Request
        proc
            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_sixtysix"
            &   ,ArgumentHelper.MayBeOptional(args.param1)
            &   ,ArgumentHelper.MayBeOptional(args.param2)
            &   ,ArgumentHelper.MayBeOptional(args.param3)
            &   ,ArgumentHelper.MayBeOptional(args.param4)
            &   ,ArgumentHelper.MayBeOptional(args.param5)
            &   ,ArgumentHelper.MayBeOptional(args.param6)
            &   ,ArgumentHelper.MayBeOptional(args.param7)
            &   ,ArgumentHelper.MayBeOptional(args.param8)
            &   ,ArgumentHelper.MayBeOptional(args.param9)
            &   ,ArgumentHelper.MayBeOptional(args.param10)
            &   ,ArgumentHelper.MayBeOptional(args.param11)
            &   ,ArgumentHelper.MayBeOptional(args.param12)
            &   ,ArgumentHelper.MayBeOptional(args.param13)
            &   ,ArgumentHelper.MayBeOptional(args.param14)
            &   ,ArgumentHelper.MayBeOptional(args.param15)
            &   ,ArgumentHelper.MayBeOptional(args.param16)
            &   )
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_sixtyseven, @Task<function_sixtyseven_Response>
            required in args, @function_sixtyseven_Request
        proc
            ;;Prepare the response object
            data response = new function_sixtyseven_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_sixtyseven"
            &   ,ArgumentHelper.MayBeOptional(args.param1)
            &   ,ArgumentHelper.MayBeOptional(args.param2)
            &   ,ArgumentHelper.MayBeOptional(args.param3)
            &   ,ArgumentHelper.MayBeOptional(args.param4)
            &   ,ArgumentHelper.MayBeOptional(args.param5)
            &   ,ArgumentHelper.MayBeOptional(args.param6)
            &   ,ArgumentHelper.MayBeOptional(args.param7)
            &   ,ArgumentHelper.MayBeOptional(args.param8)
            &   ,ArgumentHelper.MayBeOptional(args.param9)
            &   ,ArgumentHelper.MayBeOptional(args.param10)
            &   ,ArgumentHelper.MayBeOptional(args.param11)
            &   ,ArgumentHelper.MayBeOptional(args.param12)
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.param1 = ^as(resultList[1 - 1],String)
            response.param2 = ^as(resultList[2 - 1],String)
            response.param3 = ^as(resultList[3 - 1],String)
            response.param4 = ^as(resultList[4 - 1],String)
            response.param5 = ^as(resultList[5 - 1],Nullable<int>)
            response.param6 = ^as(resultList[6 - 1],Nullable<int>)
            response.param7 = ^as(resultList[7 - 1],Nullable<int>)
            response.param8 = ^as(resultList[8 - 1],Nullable<int>)
            response.param9 = ^as(resultList[9 - 1],Nullable<int>)
            response.param10 = ^as(resultList[10 - 1],Nullable<int>)
            response.param11 = ^as(resultList[11 - 1],Nullable<long>)
            response.param12 = ^as(resultList[12 - 1],Nullable<int>)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_sixtyeight, @Task<function_sixtyeight_Response>
            required in args, @function_sixtyeight_Request
        proc
            ;;Prepare the response object
            data response = new function_sixtyeight_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_sixtyeight"
            &   ,ArgumentHelper.MayBeOptional(args.param1)
            &   ,ArgumentHelper.MayBeOptional(args.param2)
            &   ,ArgumentHelper.MayBeOptional(args.param3)
            &   ,ArgumentHelper.MayBeOptional(args.param4)
            &   ,ArgumentHelper.MayBeOptional(args.param5)
            &   ,ArgumentHelper.MayBeOptional(args.param6)
            &   ,ArgumentHelper.MayBeOptional(args.param7)
            &   ,ArgumentHelper.MayBeOptional(args.param8)
            &   ,ArgumentHelper.MayBeOptional(args.param9)
            &   ,ArgumentHelper.MayBeOptional(args.param10)
            &   ,ArgumentHelper.MayBeOptional(args.param11)
            &   ,ArgumentHelper.MayBeOptional(args.param12)
            &   ,ArgumentHelper.MayBeOptional(args.param13)
            &   ,ArgumentHelper.MayBeOptional(args.param14)
            &   ,ArgumentHelper.MayBeOptional(args.param15)
            &   ,ArgumentHelper.MayBeOptional(args.param16)
            &   ,ArgumentHelper.MayBeOptional(args.param17)
            &   ,ArgumentHelper.MayBeOptional(args.param18)
            &   ,ArgumentHelper.MayBeOptional(args.param19)
            &   ,ArgumentHelper.MayBeOptional(args.param20)
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.param1 = ^as(resultList[1 - 1],Nullable<int>)
            response.param2 = ^as(resultList[2 - 1],Nullable<byte>)
            response.param3 = ^as(resultList[3 - 1],Nullable<short>)
            response.param4 = ^as(resultList[4 - 1],Nullable<int>)
            response.param5 = ^as(resultList[5 - 1],Nullable<int>)
            response.param6 = ^as(resultList[6 - 1],Nullable<int>)
            response.param7 = ^as(resultList[7 - 1],Nullable<byte>)
            response.param8 = ^as(resultList[8 - 1],Nullable<short>)
            response.param9 = ^as(resultList[9 - 1],Nullable<int>)
            response.param10 = ^as(resultList[10 - 1],Nullable<int>)
            response.param11 = ^as(resultList[11 - 1],Nullable<byte>)
            response.param12 = ^as(resultList[12 - 1],Nullable<byte>)
            response.param13 = ^as(resultList[13 - 1],Nullable<short>)
            response.param14 = ^as(resultList[14 - 1],Nullable<int>)
            response.param15 = ^as(resultList[15 - 1],Nullable<int>)
            response.param16 = ^as(resultList[16 - 1],Nullable<byte>)
            response.param17 = ^as(resultList[17 - 1],Nullable<byte>)
            response.param18 = ^as(resultList[18 - 1],Nullable<short>)
            response.param19 = ^as(resultList[19 - 1],Nullable<int>)
            response.param20 = ^as(resultList[20 - 1],Nullable<int>)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_sixtynine, @Task
            required in args, @function_sixtynine_Request
        proc
            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_sixtynine"
            &   ,ArgumentHelper.MayBeOptional(args.param1)
            &   ,ArgumentHelper.MayBeOptional(args.param2)
            &   ,ArgumentHelper.MayBeOptional(args.param3)
            &   ,ArgumentHelper.MayBeOptional(args.param4)
            &   ,ArgumentHelper.MayBeOptional(args.param5)
            &   ,ArgumentHelper.MayBeOptional(args.param6)
            &   ,ArgumentHelper.MayBeOptional(args.param7)
            &   ,ArgumentHelper.MayBeOptional(args.param8)
            &   ,ArgumentHelper.MayBeOptional(args.param9)
            &   ,ArgumentHelper.MayBeOptional(args.param10)
            &   ,ArgumentHelper.MayBeOptional(args.param11)
            &   ,ArgumentHelper.MayBeOptional(args.param12)
            &   ,ArgumentHelper.MayBeOptional(args.param13)
            &   ,ArgumentHelper.MayBeOptional(args.param14)
            &   )
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_seventy, @Task
            required in args, @function_seventy_Request
        proc
            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_seventy"
            &   ,ArgumentHelper.MayBeOptional(args.param1)
            &   ,ArgumentHelper.MayBeOptional(args.param2)
            &   ,ArgumentHelper.MayBeOptional(args.param3)
            &   ,ArgumentHelper.MayBeOptional(args.param4)
            &   ,ArgumentHelper.MayBeOptional(args.param5)
            &   ,ArgumentHelper.MayBeOptional(args.param6)
            &   ,ArgumentHelper.MayBeOptional(args.param7)
            &   ,ArgumentHelper.MayBeOptional(args.param8)
            &   ,ArgumentHelper.MayBeOptional(args.param9)
            &   ,ArgumentHelper.MayBeOptional(args.param10)
            &   ,ArgumentHelper.MayBeOptional(args.param11)
            &   ,ArgumentHelper.MayBeOptional(args.param12)
            &   )
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_seventyfour, @Task<function_seventyfour_Response>
            required in args, @function_seventyfour_Request
        proc
            ;;Prepare the response object
            data response = new function_seventyfour_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_seventyfour"
            &   ,ArgumentHelper.MayBeOptional(args.param1)
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.param1 = ^as(resultList[1 - 1],String)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_seventyfive, @Task<function_seventyfive_Response>
            required in args, @function_seventyfive_Request
        proc
            ;;Prepare the response object
            data response = new function_seventyfive_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_seventyfive"
            &   ,ArgumentHelper.MayBeOptional(args.param1)
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set the return value in the return data
            response.ReturnValue = returnToken.ToObject<int>()

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_seventysix, @Task<function_seventysix_Response>
            required in args, @function_seventysix_Request
        proc
            ;;Prepare the response object
            data response = new function_seventysix_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_seventysix"
            &   ,ArgumentHelper.MayBeOptional(args.param1)
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set the return value in the return data
            response.ReturnValue = returnToken.ToObject<int>()

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_eighty, @Task
            required in args, @function_eighty_Request
        proc
            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_eighty"
            &   ,ArgumentHelper.MayBeOptional(args.param1)
            &   ,ArgumentHelper.MayBeOptional(args.param2)
            &   ,ArgumentHelper.MayBeOptional(args.param3)
            &   ,ArgumentHelper.MayBeOptional(args.param4)
            &   ,ArgumentHelper.MayBeOptional(args.param5)
            &   ,ArgumentHelper.MayBeOptional(args.param6)
            &   ,ArgumentHelper.MayBeOptional(args.param7)
            &   ,ArgumentHelper.MayBeOptional(args.param8)
            &   ,ArgumentHelper.MayBeOptional(args.param9)
            &   ,ArgumentHelper.MayBeOptional(args.param10)
            &   ,ArgumentHelper.MayBeOptional(args.param11)
            &   ,ArgumentHelper.MayBeOptional(args.param12)
            &   ,ArgumentHelper.MayBeOptional(args.param13)
            &   ,ArgumentHelper.MayBeOptional(args.param14)
            &   ,ArgumentHelper.MayBeOptional(args.param15)
            &   ,ArgumentHelper.MayBeOptional(args.param16)
            &   )
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_eightyfive, @Task<function_eightyfive_Response>
            required in args, @function_eightyfive_Request
        proc
            ;;Prepare the response object
            data response = new function_eightyfive_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_eightyfive"
            &   ,ArgumentHelper.MayBeOptional(args.param1)
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set the return value in the return data
            response.ReturnValue = returnToken.ToObject<int>()

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_ninetyone, @Task
            required in args, @function_ninetyone_Request
        proc
            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_ninetyone"
            &   ,ArgumentHelper.MayBeOptional(args.p1)
            &   )
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_ninetytwo, @Task<function_ninetytwo_Response>
            required in args, @function_ninetytwo_Request
        proc
            ;;Prepare the response object
            data response = new function_ninetytwo_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_ninetytwo"
            &   ,ArgumentHelper.MayBeOptional(args.p1)
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.p1 = ^as(resultList[1 - 1],Nullable<int>)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_ninetythree, @Task<function_ninetythree_Response>
            required in args, @function_ninetythree_Request
        proc
            ;;Prepare the response object
            data response = new function_ninetythree_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_ninetythree"
            &   ,ArgumentHelper.MayBeOptional(args.p1)
            &   ,ArgumentHelper.MayBeOptional(args.p2)
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set the return value in the return data
            response.ReturnValue = returnToken.ToObject<decimal>()

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.p1 = ^as(resultList[1 - 1],Nullable<int>)
            response.p2 = ^as(resultList[2 - 1],Nullable<decimal>)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_onehundredandone, @Task
            required in args, @function_onehundredandone_Request
        proc
            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_onehundredandone"
            &   ,ArgumentHelper.MayBeOptional(args.param1)
            &   ,ArgumentHelper.MayBeOptional(args.p2)
            &   ,ArgumentHelper.MayBeOptional(args.param3)
            &   ,ArgumentHelper.MayBeOptional(args.param4)
            &   ,ArgumentHelper.MayBeOptional(args.param5)
            &   ,ArgumentHelper.MayBeOptional(args.param6)
            &   ,ArgumentHelper.MayBeOptional(args.param7)
            &   ,ArgumentHelper.MayBeOptional(args.x)
            &   ,ArgumentHelper.MayBeOptional(args.param9)
            &   ,ArgumentHelper.MayBeOptional(args.param10)
            &   ,ArgumentHelper.MayBeOptional(args.param11)
            &   ,ArgumentHelper.MayBeOptional(args.param12)
            &   )
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_onehundredandfour, @Task
            required in args, @function_onehundredandfour_Request
        proc
            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_onehundredandfour"
            &   ,ArgumentHelper.MayBeOptional(args.param1)
            &   ,ArgumentHelper.MayBeOptional(args.param2)
            &   ,ArgumentHelper.MayBeOptional(args.param3)
            &   ,ArgumentHelper.MayBeOptional(args.param4)
            &   ,ArgumentHelper.MayBeOptional(args.param5)
            &   ,ArgumentHelper.MayBeOptional(args.param6)
            &   ,ArgumentHelper.MayBeOptional(args.param7)
            &   ,ArgumentHelper.MayBeOptional(args.param8)
            &   ,ArgumentHelper.MayBeOptional(args.param9)
            &   ,ArgumentHelper.MayBeOptional(args.param10)
            &   ,ArgumentHelper.MayBeOptional(args.param11)
            &   ,ArgumentHelper.MayBeOptional(args.param12)
            &   )
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_onehundredandfive, @Task<function_onehundredandfive_Response>
            required in args, @function_onehundredandfive_Request
        proc
            ;;Prepare the response object
            data response = new function_onehundredandfive_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_onehundredandfive"
            &   ,ArgumentHelper.MayBeOptional(args.param1)
            &   ,ArgumentHelper.MayBeOptional(args.param2)
            &   ,ArgumentHelper.MayBeOptional(args.param3)
            &   ,ArgumentHelper.MayBeOptional(args.param4)
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set the return value in the return data
            response.ReturnValue = returnToken.ToObject<long>()

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.param1 = ^as(resultList[1 - 1],String)
            response.param2 = ^as(resultList[2 - 1],String)
            response.param3 = ^as(resultList[3 - 1],String)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method function_onehundredandseven, @Task<function_onehundredandseven_Response>
            required in args, @function_onehundredandseven_Request
        proc
            ;;Prepare the response object
            data response = new function_onehundredandseven_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("function_onehundredandseven"
            &   ,ArgumentHelper.MayBeOptional(args.param1)
            &   ,ArgumentHelper.MayBeOptional(args.param2)
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set the return value in the return data
            response.ReturnValue = returnToken.ToObject<String>()

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.param1 = ^as(resultList[1 - 1],String)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method elb_not_found, @Task
        proc
            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("elb_not_found"
            &   )
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method fatal, @Task
        proc
            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("fatal"
            &   )
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method hello, @Task<hello_Response>
            required in args, @hello_Request
        proc
            ;;Prepare the response object
            data response = new hello_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("hello"
            &   ,args.name
            &   ,args.message
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.message = (String)resultList[2 - 1]

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method methoddiff, @Task<methoddiff_Response>
        proc
            ;;Prepare the response object
            data response = new methoddiff_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("methoddiff"
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set the return value in the return data
            response.ReturnValue = returnToken.ToObject<int>()

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method missingFromElb, @Task
        proc
            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("missingFromElb"
            &   )
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method msc_arytst_dec, @Task<msc_arytst_dec_Response>
            required in args, @msc_arytst_dec_Request
        proc
            ;;Prepare the response object
            data response = new msc_arytst_dec_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("msc_arytst_dec"
            &   ,args.p1
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.p1 = ((@IEnumerable<int>)resultList[1 - 1]).ToArray()

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method msc_arytst_imp, @Task<msc_arytst_imp_Response>
            required in args, @msc_arytst_imp_Request
        proc
            ;;Prepare the response object
            data response = new msc_arytst_imp_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("msc_arytst_imp"
            &   ,args.p1
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.p1 = ((@IEnumerable<decimal>)resultList[1 - 1]).ToArray()

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method msc_arytst_int, @Task<msc_arytst_int_Response>
            required in args, @msc_arytst_int_Request
        proc
            ;;Prepare the response object
            data response = new msc_arytst_int_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("msc_arytst_int"
            &   ,args.p1
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.p1 = ((@IEnumerable<int>)resultList[1 - 1]).ToArray()

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method msc_arytst_str, @Task<msc_arytst_str_Response>
            required in args, @msc_arytst_str_Request
        proc
            ;;Prepare the response object
            data response = new msc_arytst_str_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("msc_arytst_str"
            &   ,args.p1
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.p1 = (String)resultList[1 - 1]

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method not_in_elb, @Task
            required in args, @not_in_elb_Request
        proc
            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("not_in_elb"
            &   ,args.parm1
            &   )
        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method null2122, @Task<null2122_Response>
            required in args, @null2122_Request
        proc
            ;;Prepare the response object
            data response = new null2122_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("null2122"
            &   ,args.p1
            &   ,args.p2
            &   ,args.p3
            &   ,args.p4
            &   ,args.p5
            &   ,args.p6
            &   ,args.p7
            &   ,args.p8
            &   ,args.p9
            &   ,args.p10
            &   ,args.p11
            &   ,args.p12
            &   ,args.p13
            &   ,args.p14
            &   ,args.p15
            &   ,args.p16
            &   ,args.p17
            &   ,args.p18
            &   ,args.p19
            &   ,args.p20
            &   ,args.p21
            &   ,args.p22
            &   ,args.p23
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.p1 = (String)resultList[1 - 1]
            response.p2 = (String)resultList[2 - 1]
            response.p3 = (String)resultList[3 - 1]
            response.p4 = (String)resultList[4 - 1]
            response.p5 = (String)resultList[5 - 1]
            response.p6 = (String)resultList[6 - 1]
            response.p7 = (String)resultList[7 - 1]
            response.p8 = (String)resultList[8 - 1]
            response.p9 = (String)resultList[9 - 1]
            response.p10 = (String)resultList[10 - 1]
            response.p11 = (String)resultList[11 - 1]
            response.p12 = (String)resultList[12 - 1]
            response.p13 = (String)resultList[13 - 1]
            response.p14 = (String)resultList[14 - 1]
            response.p15 = (String)resultList[15 - 1]
            response.p16 = (String)resultList[16 - 1]
            response.p17 = (String)resultList[17 - 1]
            response.p18 = (String)resultList[18 - 1]
            response.p19 = (String)resultList[19 - 1]
            response.p20 = (String)resultList[20 - 1]
            response.p21 = (String)resultList[21 - 1]
            response.p22 = (String)resultList[22 - 1]
            response.p23 = (String)resultList[23 - 1]

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method optional22, @Task<optional22_Response>
            required in args, @optional22_Request
        proc
            ;;Prepare the response object
            data response = new optional22_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("optional22"
            &   ,args.p1
            &   ,args.p2
            &   ,args.p3
            &   ,args.p4
            &   ,args.p5
            &   ,args.p6
            &   ,args.p7
            &   ,args.p8
            &   ,args.p9
            &   ,args.p10
            &   ,args.p11
            &   ,args.p12
            &   ,args.p13
            &   ,args.p14
            &   ,args.p15
            &   ,args.p16
            &   ,args.p17
            &   ,args.p18
            &   ,args.p19
            &   ,args.p20
            &   ,args.p21
            &   ,ArgumentHelper.MayBeOptional(args.p22)
            &   ,args.p23
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.p1 = (String)resultList[1 - 1]
            response.p2 = (String)resultList[2 - 1]
            response.p3 = (String)resultList[3 - 1]
            response.p4 = (String)resultList[4 - 1]
            response.p5 = (String)resultList[5 - 1]
            response.p6 = (String)resultList[6 - 1]
            response.p7 = (String)resultList[7 - 1]
            response.p8 = (String)resultList[8 - 1]
            response.p9 = (String)resultList[9 - 1]
            response.p10 = (String)resultList[10 - 1]
            response.p11 = (String)resultList[11 - 1]
            response.p12 = (String)resultList[12 - 1]
            response.p13 = (String)resultList[13 - 1]
            response.p14 = (String)resultList[14 - 1]
            response.p15 = (String)resultList[15 - 1]
            response.p16 = (String)resultList[16 - 1]
            response.p17 = (String)resultList[17 - 1]
            response.p18 = (String)resultList[18 - 1]
            response.p19 = (String)resultList[19 - 1]
            response.p20 = (String)resultList[20 - 1]
            response.p21 = (String)resultList[21 - 1]
            response.p22 = ^as(resultList[22 - 1],String)
            response.p23 = (String)resultList[23 - 1]

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method outi4, @Task<outi4_Response>
        proc
            ;;Prepare the response object
            data response = new outi4_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("outi4"
            &   ,ArgumentHelper.MayBeOptional(response.p1)
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set the return value in the return data
            response.ReturnValue = returnToken.ToObject<int>()

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.p1 = ^as(resultList[1 - 1],Nullable<int>)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; return a large ^val
        ;;; </summary>
        public async method outi8, @Task<outi8_Response>
        proc
            ;;Prepare the response object
            data response = new outi8_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("outi8"
            &   ,response.outi8
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set the return value in the return data
            response.ReturnValue = returnToken.ToObject<int>()

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.outi8 = (long)resultList[1 - 1]

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method parm40, @Task<parm40_Response>
            required in args, @parm40_Request
        proc
            ;;Prepare the response object
            data response = new parm40_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("parm40"
            &   ,args.p1
            &   ,args.p2
            &   ,args.p3
            &   ,args.p4
            &   ,args.p5
            &   ,args.p6
            &   ,args.p7
            &   ,args.p8
            &   ,args.p9
            &   ,args.p10
            &   ,args.p11
            &   ,args.p12
            &   ,args.p13
            &   ,args.p14
            &   ,args.p15
            &   ,args.p16
            &   ,args.p17
            &   ,args.p18
            &   ,args.p19
            &   ,args.p20
            &   ,args.p21
            &   ,args.p22
            &   ,args.p23
            &   ,args.p24
            &   ,args.p25
            &   ,args.p26
            &   ,args.p27
            &   ,args.p28
            &   ,args.p29
            &   ,args.p30
            &   ,args.p31
            &   ,args.p32
            &   ,args.p33
            &   ,args.p34
            &   ,args.p35
            &   ,args.p36
            &   ,args.p37
            &   ,args.p38
            &   ,args.p39
            &   ,args.p40
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.p1 = (String)resultList[1 - 1]
            response.p3 = (String)resultList[3 - 1]
            response.p5 = (String)resultList[5 - 1]
            response.p7 = (String)resultList[7 - 1]
            response.p9 = (String)resultList[9 - 1]
            response.p11 = (long)resultList[11 - 1]
            response.p13 = (long)resultList[13 - 1]
            response.p15 = (long)resultList[15 - 1]
            response.p17 = (long)resultList[17 - 1]
            response.p19 = (long)resultList[19 - 1]
            response.p21 = (decimal)resultList[21 - 1]
            response.p23 = (decimal)resultList[23 - 1]
            response.p25 = (decimal)resultList[25 - 1]
            response.p27 = (decimal)resultList[27 - 1]
            response.p29 = (decimal)resultList[29 - 1]
            response.p31 = (byte)resultList[31 - 1]
            response.p33 = (byte)resultList[33 - 1]
            response.p35 = (short)resultList[35 - 1]
            response.p37 = (int)resultList[37 - 1]
            response.p39 = (int)resultList[39 - 1]

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method passstring, @Task<passstring_Response>
            required in args, @passstring_Request
        proc
            ;;Prepare the response object
            data response = new passstring_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("passstring"
            &   ,args.p1
            &   ,response.p2
            &   ,args.p3
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.p2 = (String)resultList[2 - 1]
            response.p3 = (String)resultList[3 - 1]

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method retAlpha5, @Task<retAlpha5_Response>
        proc
            ;;Prepare the response object
            data response = new retAlpha5_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("retAlpha5"
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set the return value in the return data
            response.ReturnValue = returnToken.ToObject<String>()

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method retDec3, @Task<retDec3_Response>
        proc
            ;;Prepare the response object
            data response = new retDec3_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("retDec3"
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set the return value in the return data
            response.ReturnValue = returnToken.ToObject<int>()

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method retI4, @Task<retI4_Response>
        proc
            ;;Prepare the response object
            data response = new retI4_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("retI4"
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set the return value in the return data
            response.ReturnValue = returnToken.ToObject<int>()

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method retIdec31, @Task<retIdec31_Response>
        proc
            ;;Prepare the response object
            data response = new retIdec31_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("retIdec31"
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set the return value in the return data
            response.ReturnValue = returnToken.ToObject<decimal>()

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method retVal, @Task<retVal_Response>
        proc
            ;;Prepare the response object
            data response = new retVal_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("retVal"
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set the return value in the return data
            response.ReturnValue = returnToken.ToObject<int>()

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; Alpha return type of 40000
        ;;; </summary>
        public async method rtnAlpha40k, @Task<rtnAlpha40k_Response>
        proc
            ;;Prepare the response object
            data response = new rtnAlpha40k_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("rtnAlpha40k"
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set the return value in the return data
            response.ReturnValue = returnToken.ToObject<String>()

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method stoptest, @Task<stoptest_Response>
        proc
            ;;Prepare the response object
            data response = new stoptest_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("stoptest"
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set the return value in the return data
            response.ReturnValue = returnToken.ToObject<int>()

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method uninitParams, @Task<uninitParams_Response>
        proc
            ;;Prepare the response object
            data response = new uninitParams_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("uninitParams"
            &   ,ArgumentHelper.MayBeOptional(response.p1)
            &   ,ArgumentHelper.MayBeOptional(response.p2)
            &   ,ArgumentHelper.MayBeOptional(response.p3)
            &   ,ArgumentHelper.MayBeOptional(response.p4)
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.p1 = ^as(resultList[1 - 1],String)
            response.p2 = ^as(resultList[2 - 1],Nullable<int>)
            response.p3 = ^as(resultList[3 - 1],Nullable<decimal>)
            response.p4 = ^as(resultList[4 - 1],Nullable<int>)

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method getGreeting, @Task<getGreeting_Response>
        proc
            ;;Prepare the response object
            data response = new getGreeting_Response()

            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("getGreeting"
            &   ,response.message
            &   )

            ;;Get the returned information
            data returnToken = (@JToken)(resultTuple.Item1)

            ;;Set returned values for OUT or INOUT parameters
            data resultList, @List<Object>, resultTuple.Item2.ToList()
            response.message = (String)resultList[1 - 1]

            ;;Return the response
            mreturn response

        endmethod

        ;;; <summary>
        ;;; No description found in method catalog
        ;;; </summary>
        public async method setGreeting, @Task
            required in args, @setGreeting_Request
        proc
            ;;Make the JSON-RPC call the traditional Synergy routine
            data resultTuple = await CallMethod("setGreeting"
            &   ,args.message
            &   )
        endmethod

    endclass

endnamespace
