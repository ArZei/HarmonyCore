;;****************************************************************************
;; WARNING: This code was generated by CodeGen. Any changes that you
;;          make to this code will be overwritten if the code is regenerated!
;;
;; Template author: Richard C. Morris, Synergex Professional Services Group
;;
;; Template Name:   Symphony Framework : DATAOBJECT.tpl
;;
;;***************************************************************************
import System
import System.Collections.Generic
import System.Text
import Harmony.Core.Converters

namespace Harmony.Core.Test

	.include 'orders' repository  , structure = 'STROrders', end

    public partial class Orders extends Harmony.Core.DataObjectBase
        ;;make the record available and a copy
        private mSynergyData, STROrders 
		private mOriginalSynergyData, STROrders 
		
		private static sMetadata, @OrdersMetadata
		static method Orders
		proc
			sMetadata = new OrdersMetadata()
			Harmony.Core.DataObjectMetadataBase.MetadataLookup.TryAdd(^typeof(Orders), sMetadata)
		endmethod
		
        ;;; <summary>
        ;;;  Constructor, initialise the base fields
        ;;; </summary>
        public method Orders
            endparams
            parent()
        proc
			init mSynergyData, mOriginalSynergyData
        endmethod

		;;; <summary>
		;;;  Alternate Constructor, accepts the structured data
		;;; </summary>
		public method Orders
			in req inData			,STROrders
			endparams
			parent()
		proc
			mSynergyData = mOriginalSynergyData = inData
		endmethod

		public override method InternalSynergyRecord, void
			targetMethod, @Harmony.Core.AlphaAction
		proc
			targetMethod(mSynergyData, mGlobalRFA)
		endmethod
		
        ;;Expose fields as properties for data binding
        ;;Or_number
		public property Or_number, int
			method get
			proc
				mreturn (int)mSynergyData.Or_number
				
            endmethod
			method set
			proc
				mSynergyData.Or_number = value
			endmethod
		endproperty
        ;;Or_vendor
		public property Or_vendor, int
			method get
			proc
				mreturn (int)mSynergyData.Or_vendor
				
            endmethod
			method set
			proc
				mSynergyData.Or_vendor = value
			endmethod
		endproperty
        ;;Or_item
		public property Or_item, int
			method get
			proc
				mreturn (int)mSynergyData.Or_item
				
            endmethod
			method set
			proc
				mSynergyData.Or_item = value
			endmethod
		endproperty
        ;;Or_customer
		public property Or_customer, int
			method get
			proc
				mreturn (int)mSynergyData.Or_customer
				
            endmethod
			method set
			proc
				mSynergyData.Or_customer = value
			endmethod
		endproperty
        ;;Or_qty
		public property Or_qty, int
			method get
			proc
				mreturn (int)mSynergyData.Or_qty
				
            endmethod
			method set
			proc
				mSynergyData.Or_qty = value
			endmethod
		endproperty
        ;;Or_price
		public property Or_price, decimal
			method get
			proc
				mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.Or_price, ^null, "DECIMALPLACES#2", ^null)
				
            endmethod
			method set
			proc
				mSynergyData.Or_price = value
			endmethod
		endproperty
        ;;Or_terms
		public property Or_terms, string
			method get
			proc
				mreturn (string)SynergyAlphaConverter.Convert(mSynergyData.Or_terms, ^null, ^null, ^null)
				
            endmethod
			method set
			proc
				mSynergyData.Or_terms = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
			endmethod
		endproperty
        ;;Or_odate
		public property Or_odate, DateTime
			method get
			proc
				mreturn (DateTime)DateTime.Parse((string)mSynergyData.Or_odate)
				
            endmethod
			method set
			proc
			endmethod
		endproperty
        ;;Or_sdate
		public property Or_sdate, DateTime
			method get
			proc
				mreturn (DateTime)DateTime.Parse((string)mSynergyData.Or_sdate)
				
            endmethod
			method set
			proc
			endmethod
		endproperty
        ;;Or_edate
		public property Or_edate, DateTime
			method get
			proc
				mreturn (DateTime)DateTime.Parse((string)mSynergyData.Or_edate)
				
            endmethod
			method set
			proc
			endmethod
		endproperty
        ;;Or_invoice
		public property Or_invoice, int
			method get
			proc
				mreturn (int)mSynergyData.Or_invoice
				
            endmethod
			method set
			proc
				mSynergyData.Or_invoice = value
			endmethod
		endproperty

        ;;; <summary>
        ;;; Expose the complete synergy record
        ;;; </summary>
		public override property SynergyRecord, a
            method get
            proc
                mreturn mSynergyData
            endmethod
        endproperty
		
		;;; <summary>
        ;;; Expose the complete original synergy record
        ;;; </summary>
		public override property OriginalSynergyRecord, a
            method get
            proc
                mreturn mOriginalSynergyData
            endmethod
        endproperty

		;;; <summary>
		;;; Allow the host to validate all fields. Each field will fire the validation method.
		;;; </summary>
		public override method InitialValidateData, void
			endparams
		proc
		endmethod
		
		public override property Metadata, @DataObjectMetadataBase
			method get
			proc
				mreturn sMetadata
			endmethod
		endproperty
	endclass
	
	public partial class OrdersMetadata extends Harmony.Core.DataObjectMetadataBase
		
		public method OrdersMetadata
		proc
			RPSStructureName = "ORDERS"
			RPSStructureSize = ^size(STROrders)
			;;fill in all of the field defs and other type level info here
			AddFieldInfo("Or_number", "DECIMAL", 6, 1, 0, false)
			AddFieldInfo("Or_vendor", "DECIMAL", 6, 7, 0, false)
			AddFieldInfo("Or_item", "DECIMAL", 6, 13, 0, false)
			AddFieldInfo("Or_customer", "DECIMAL", 6, 19, 0, false)
			AddFieldInfo("Or_qty", "DECIMAL", 6, 25, 0, false)
			AddFieldInfo("Or_price", "IMPLIED", 7, 31, 02, false)
			AddFieldInfo("Or_terms", "ALPHA", 2, 38, 0, false)
			AddFieldInfo("Or_odate", "DATE", 6, 40, 0, false)
			AddFieldInfo("Or_sdate", "DATE", 6, 46, 0, false)
			AddFieldInfo("Or_edate", "DATE", 6, 52, 0, false)
			AddFieldInfo("Or_invoice", "DECIMAL", 7, 58, 0, false)
			
		endmethod
	
		public override method MakeNew, @DataObjectBase
			dataArea, a
			grfa, a
		proc
			mreturn new Orders((STROrders)dataArea) { GlobalRFA = grfa }
		endmethod
	endclass
endnamespace

