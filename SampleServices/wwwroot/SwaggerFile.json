{
  "swagger" : "2.0",
  "info" : {
    "description" : "This environment presents an example of using Harmony Core to expose a collection of RESTful Web Service endpoints that alklow you to interact with a small sample dataset.",
    "version" : "1.0.0",
    "title" : "Harmony Core Sample API",
    "termsOfService" : "/license.html"
  },
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/odata/Customers" : {
      "get" : {
        "description" : "Get all Customers",
        "tags": [
          "Customer Operations"
        ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Customer"
              }
            }
          }
        }
      }
    },
    "/odata/Customers(CustKey={aCustKey})" : {
      "get" : {
        "description" : "Get a Customer by primary key.",
        "operationId": "Get a Customer by primary key.",
        "tags": [
          "Customer Operations"
        ],
        "parameters" : [ 
          {
            "name": "aCustKey",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "integer",
          }
        ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/Customer"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a Customer by primary key.",
        "operationId": "Delete a Customer by primary key.",
        "tags": [
          "Customer Operations"
        ],
        "parameters" : [ 
          {
            "name": "aCustKey",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "integer",
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "Create or update a Customer by primary key.",
        "operationId": "Create or update a Customer by primary key.",
        "tags": [
          "Customer Operations"
        ],
        "parameters" : [ 
          {
            "name": "aCustKey",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aCustomer",
            "in": "body",
            "description": "Data for customer to create or update.",
            "required": true,
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/Customer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "description": "Patch a Customer by primary key.",
        "operationId": "Patch a Customer by primary key.",
        "tags": [
          "Customer Operations"
        ],
        "parameters" : [ 
          {
            "name": "aCustKey",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aCustomer",
            "in": "body",
            "description": "Data for customer to create or update.",
            "required": true,
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/Customer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      }
    },
    "/odata/Customers(CustRtype={aCustRtype},CustKey={aCustKey})" : {
      "get" : {
        "description" : "Get a Customer by alternate key TAG_CUSTOMER.",
        "operationId": "Get a Customer by alternate key TAG_CUSTOMER.",
        "tags": [
          "Customer Operations"
        ],
        "parameters" : [ 
          {
            "name": "aCustRtype",
            "in": "path",
            "description": "Record Tag Field",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aCustKey",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "integer",
          }
        ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/Customer"
            }
          }
        }
      }
  }
,
    "/odata/Orders" : {
      "get" : {
        "description" : "Get all Orders",
        "tags": [
          "Order Operations"
        ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Order"
              }
            }
          }
        }
      }
    },
    "/odata/Orders(OrNumber={aOrNumber})" : {
      "get" : {
        "description" : "Get a Order by primary key.",
        "operationId": "Get a Order by primary key.",
        "tags": [
          "Order Operations"
        ],
        "parameters" : [ 
          {
            "name": "aOrNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          }
        ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/Order"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a Order by primary key.",
        "operationId": "Delete a Order by primary key.",
        "tags": [
          "Order Operations"
        ],
        "parameters" : [ 
          {
            "name": "aOrNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "Create or update a Order by primary key.",
        "operationId": "Create or update a Order by primary key.",
        "tags": [
          "Order Operations"
        ],
        "parameters" : [ 
          {
            "name": "aOrNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aOrder",
            "in": "body",
            "description": "Data for order to create or update.",
            "required": true,
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "description": "Patch a Order by primary key.",
        "operationId": "Patch a Order by primary key.",
        "tags": [
          "Order Operations"
        ],
        "parameters" : [ 
          {
            "name": "aOrNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aOrder",
            "in": "body",
            "description": "Data for order to create or update.",
            "required": true,
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      }
    },
    "/odata/Orders(OrCustomer={aOrCustomer})" : {
      "get" : {
        "description" : "Get a Order by alternate key OR_CUSTOMER.",
        "operationId": "Get a Order by alternate key OR_CUSTOMER.",
        "tags": [
          "Order Operations"
        ],
        "parameters" : [ 
          {
            "name": "aOrCustomer",
            "in": "path",
            "description": "Customer ID",
            "required": true,
            "type": "integer",
          }
        ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/Order"
            }
          }
        }
      }
  },
    "/odata/Orders(OrOrdered={aOrOrdered})" : {
      "get" : {
        "description" : "Get a Order by alternate key OR_ORDERED.",
        "operationId": "Get a Order by alternate key OR_ORDERED.",
        "tags": [
          "Order Operations"
        ],
        "parameters" : [ 
          {
            "name": "aOrOrdered",
            "in": "path",
            "description": "Date ordered",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/Order"
            }
          }
        }
      }
  },
    "/odata/Orders(OrCompleted={aOrCompleted})" : {
      "get" : {
        "description" : "Get a Order by alternate key OR_COMPLETED.",
        "operationId": "Get a Order by alternate key OR_COMPLETED.",
        "tags": [
          "Order Operations"
        ],
        "parameters" : [ 
          {
            "name": "aOrCompleted",
            "in": "path",
            "description": "Date order completed",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/Order"
            }
          }
        }
      }
  }
,
    "/odata/OrderItems" : {
      "get" : {
        "description" : "Get all OrderItems",
        "tags": [
          "OrderItem Operations"
        ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OrderItem"
              }
            }
          }
        }
      }
    },
    "/odata/OrderItems(OiNumber={aOiNumber},OiLineItem={aOiLineItem})" : {
      "get" : {
        "description" : "Get a OrderItem by primary key.",
        "operationId": "Get a OrderItem by primary key.",
        "tags": [
          "OrderItem Operations"
        ],
        "parameters" : [ 
          {
            "name": "aOiNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aOiLineItem",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "integer",
          }
        ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/OrderItem"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a OrderItem by primary key.",
        "operationId": "Delete a OrderItem by primary key.",
        "tags": [
          "OrderItem Operations"
        ],
        "parameters" : [ 
          {
            "name": "aOiNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aOiLineItem",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "integer",
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "Create or update a OrderItem by primary key.",
        "operationId": "Create or update a OrderItem by primary key.",
        "tags": [
          "OrderItem Operations"
        ],
        "parameters" : [ 
          {
            "name": "aOiNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aOiLineItem",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aOrderItem",
            "in": "body",
            "description": "Data for orderItem to create or update.",
            "required": true,
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/OrderItem"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "description": "Patch a OrderItem by primary key.",
        "operationId": "Patch a OrderItem by primary key.",
        "tags": [
          "OrderItem Operations"
        ],
        "parameters" : [ 
          {
            "name": "aOiNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aOiLineItem",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aOrderItem",
            "in": "body",
            "description": "Data for orderItem to create or update.",
            "required": true,
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/OrderItem"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      }
    },
    "/odata/OrderItems(OiItemOrdered={aOiItemOrdered})" : {
      "get" : {
        "description" : "Get a OrderItem by alternate key OI_ITEM_ORDERED.",
        "operationId": "Get a OrderItem by alternate key OI_ITEM_ORDERED.",
        "tags": [
          "OrderItem Operations"
        ],
        "parameters" : [ 
          {
            "name": "aOiItemOrdered",
            "in": "path",
            "description": "Item ordered",
            "required": true,
            "type": "integer",
          }
        ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/OrderItem"
            }
          }
        }
      }
  },
    "/odata/OrderItems(OiShipped={aOiShipped})" : {
      "get" : {
        "description" : "Get a OrderItem by alternate key OI_SHIPPED.",
        "operationId": "Get a OrderItem by alternate key OI_SHIPPED.",
        "tags": [
          "OrderItem Operations"
        ],
        "parameters" : [ 
          {
            "name": "aOiShipped",
            "in": "path",
            "description": "Date shipped",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/OrderItem"
            }
          }
        }
      }
  },
    "/odata/OrderItems(OiInvoice={aOiInvoice})" : {
      "get" : {
        "description" : "Get a OrderItem by alternate key OI_INVOICE.",
        "operationId": "Get a OrderItem by alternate key OI_INVOICE.",
        "tags": [
          "OrderItem Operations"
        ],
        "parameters" : [ 
          {
            "name": "aOiInvoice",
            "in": "path",
            "description": "Invoice number",
            "required": true,
            "type": "integer",
          }
        ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/OrderItem"
            }
          }
        }
      }
  }
,
    "/odata/Plants" : {
      "get" : {
        "description" : "Get all Plants",
        "tags": [
          "Plant Operations"
        ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Plant"
              }
            }
          }
        }
      }
    },
    "/odata/Plants(InItemid={aInItemid})" : {
      "get" : {
        "description" : "Get a Plant by primary key.",
        "operationId": "Get a Plant by primary key.",
        "tags": [
          "Plant Operations"
        ],
        "parameters" : [ 
          {
            "name": "aInItemid",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "integer",
          }
        ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/Plant"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a Plant by primary key.",
        "operationId": "Delete a Plant by primary key.",
        "tags": [
          "Plant Operations"
        ],
        "parameters" : [ 
          {
            "name": "aInItemid",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "integer",
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "Create or update a Plant by primary key.",
        "operationId": "Create or update a Plant by primary key.",
        "tags": [
          "Plant Operations"
        ],
        "parameters" : [ 
          {
            "name": "aInItemid",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aPlant",
            "in": "body",
            "description": "Data for plant to create or update.",
            "required": true,
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/Plant"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "description": "Patch a Plant by primary key.",
        "operationId": "Patch a Plant by primary key.",
        "tags": [
          "Plant Operations"
        ],
        "parameters" : [ 
          {
            "name": "aInItemid",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aPlant",
            "in": "body",
            "description": "Data for plant to create or update.",
            "required": true,
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/Plant"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      }
    },
    "/odata/Plants(InSource={aInSource})" : {
      "get" : {
        "description" : "Get a Plant by alternate key VENDOR.",
        "operationId": "Get a Plant by alternate key VENDOR.",
        "tags": [
          "Plant Operations"
        ],
        "parameters" : [ 
          {
            "name": "aInSource",
            "in": "path",
            "description": "Vending Source Code",
            "required": true,
            "type": "integer",
          }
        ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/Plant"
            }
          }
        }
      }
  },
    "/odata/Plants(InColor='{aInColor}')" : {
      "get" : {
        "description" : "Get a Plant by alternate key COLOR.",
        "operationId": "Get a Plant by alternate key COLOR.",
        "tags": [
          "Plant Operations"
        ],
        "parameters" : [ 
          {
            "name": "aInColor",
            "in": "path",
            "description": "Flower color",
            "required": true,
            "type": "string",
          }
        ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/Plant"
            }
          }
        }
      }
  },
    "/odata/Plants(InSize={aInSize})" : {
      "get" : {
        "description" : "Get a Plant by alternate key SIZE.",
        "operationId": "Get a Plant by alternate key SIZE.",
        "tags": [
          "Plant Operations"
        ],
        "parameters" : [ 
          {
            "name": "aInSize",
            "in": "path",
            "description": "Size in gallons",
            "required": true,
            "type": "integer",
          }
        ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/Plant"
            }
          }
        }
      }
  },
    "/odata/Plants(InName='{aInName}')" : {
      "get" : {
        "description" : "Get a Plant by alternate key NAME.",
        "operationId": "Get a Plant by alternate key NAME.",
        "tags": [
          "Plant Operations"
        ],
        "parameters" : [ 
          {
            "name": "aInName",
            "in": "path",
            "description": "Common name",
            "required": true,
            "type": "string",
          }
        ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/Plant"
            }
          }
        }
      }
  }
,
    "/odata/Vendors" : {
      "get" : {
        "description" : "Get all Vendors",
        "tags": [
          "Vendor Operations"
        ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Vendor"
              }
            }
          }
        }
      }
    },
    "/odata/Vendors(VendKey={aVendKey})" : {
      "get" : {
        "description" : "Get a Vendor by primary key.",
        "operationId": "Get a Vendor by primary key.",
        "tags": [
          "Vendor Operations"
        ],
        "parameters" : [ 
          {
            "name": "aVendKey",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "type": "integer",
          }
        ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/Vendor"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a Vendor by primary key.",
        "operationId": "Delete a Vendor by primary key.",
        "tags": [
          "Vendor Operations"
        ],
        "parameters" : [ 
          {
            "name": "aVendKey",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "type": "integer",
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "Create or update a Vendor by primary key.",
        "operationId": "Create or update a Vendor by primary key.",
        "tags": [
          "Vendor Operations"
        ],
        "parameters" : [ 
          {
            "name": "aVendKey",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aVendor",
            "in": "body",
            "description": "Data for vendor to create or update.",
            "required": true,
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/Vendor"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "description": "Patch a Vendor by primary key.",
        "operationId": "Patch a Vendor by primary key.",
        "tags": [
          "Vendor Operations"
        ],
        "parameters" : [ 
          {
            "name": "aVendKey",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aVendor",
            "in": "body",
            "description": "Data for vendor to create or update.",
            "required": true,
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/Vendor"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      }
    },
    "/odata/Vendors(VendRtype={aVendRtype},VendKey={aVendKey})" : {
      "get" : {
        "description" : "Get a Vendor by alternate key TAG_VENDOR.",
        "operationId": "Get a Vendor by alternate key TAG_VENDOR.",
        "tags": [
          "Vendor Operations"
        ],
        "parameters" : [ 
          {
            "name": "aVendRtype",
            "in": "path",
            "description": "Record Type",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aVendKey",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "type": "integer",
          }
        ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "$ref" : "#/definitions/Vendor"
            }
          }
        }
      }
  }

  },
  "definitions" : {
    "Customer" : {
      "required" : [ "CustKey" ],
      "properties" : {
        "CustKey": {
          "type": "integer",
          "example" : 123,
          "description": "Customer id"
        },
        "CustRtype": {
          "type": "integer",
          "example" : 123,
          "description": "Record Tag Field"
        },
        "CustName": {
          "type": "string",
          "example" : "ABC",
          "description": "Customer Name"
        },
        "CustStreet": {
          "type": "string",
          "example" : "ABC",
          "description": "Street Address"
        },
        "CustCity": {
          "type": "string",
          "example" : "ABC",
          "description": "City"
        },
        "CustState": {
          "type": "string",
          "example" : "ABC",
          "description": "State"
        },
        "CustZip": {
          "type": "integer",
          "example" : 123,
          "description": "Zip code"
        },
        "CustContact": {
          "type": "string",
          "example" : "ABC",
          "description": "Contact"
        },
        "CustPhone": {
          "type": "integer",
          "example" : 123,
          "description": "Phone number"
        },
        "CustFax": {
          "type": "integer",
          "example" : 123,
          "description": "FAX number"
        },
        "CustGift": {
          "type": "integer",
          "example" : 123,
          "description": "Customer Premium Gift"
        },
        "CustTcode": {
          "type": "string",
          "example" : "ABC",
          "description": "Terms code"
        },
        "CustTaxno": {
          "type": "integer",
          "example" : 123,
          "description": "Customer Tax Number"
        },
        "CustLimit": {
          "type": "number",
          "format": "float",
          "example" : 1.23,
          "description": "Credit limit"
        }
      },
      "example" : {
        "CustKey" : 123,
        "CustRtype" : 123,
        "CustName" : "ABC",
        "CustStreet" : "ABC",
        "CustCity" : "ABC",
        "CustState" : "ABC",
        "CustZip" : 123,
        "CustContact" : "ABC",
        "CustPhone" : 123,
        "CustFax" : 123,
        "CustGift" : 123,
        "CustTcode" : "ABC",
        "CustTaxno" : 123,
        "CustLimit" : 1.23
      }
    },
    "Order" : {
      "required" : [ "OrNumber" ],
      "properties" : {
        "OrNumber": {
          "type": "integer",
          "example" : 123,
          "description": "Order number"
        },
        "OrCustomer": {
          "type": "integer",
          "example" : 123,
          "description": "Customer ID"
        },
        "OrPlacedBy": {
          "type": "string",
          "example" : "ABC",
          "description": "Order placed by"
        },
        "OrCustomerRef": {
          "type": "string",
          "example" : "ABC",
          "description": "Customer order reference"
        },
        "OrTerms": {
          "type": "string",
          "example" : "ABC",
          "description": "Payment terms code"
        },
        "OrOrdered": {
          "type": "string",
          "format": "date-time",
          "example" : 123,
          "description": "Date ordered"
        },
        "OrCompleted": {
          "type": "string",
          "format": "date-time",
          "example" : 123,
          "description": "Date order completed"
        },
        "Noname001": {
          "type": "string",
          "example" : "ABC",
          "description": "Spare space"
        }
      },
      "example" : {
        "OrNumber" : 123,
        "OrCustomer" : 123,
        "OrPlacedBy" : "ABC",
        "OrCustomerRef" : "ABC",
        "OrTerms" : "ABC",
        "OrOrdered" : 123,
        "OrCompleted" : 123,
        "Noname001" : "ABC"
      }
    },
    "OrderItem" : {
      "required" : [ "OiNumber", "OiLineItem" ],
      "properties" : {
        "OiNumber": {
          "type": "integer",
          "example" : 123,
          "description": "Order number"
        },
        "OiLineItem": {
          "type": "integer",
          "example" : 123,
          "description": "Line item number"
        },
        "OiItemOrdered": {
          "type": "integer",
          "example" : 123,
          "description": "Item ordered"
        },
        "OiQty": {
          "type": "integer",
          "example" : 123,
          "description": "Quantity ordered"
        },
        "OiUnitPrice": {
          "type": "number",
          "format": "float",
          "example" : 1.23,
          "description": "Unit price"
        },
        "OiShipped": {
          "type": "string",
          "format": "date-time",
          "example" : 123,
          "description": "Date shipped"
        },
        "OiInvoice": {
          "type": "integer",
          "example" : 123,
          "description": "Invoice number"
        }
      },
      "example" : {
        "OiNumber" : 123,
        "OiLineItem" : 123,
        "OiItemOrdered" : 123,
        "OiQty" : 123,
        "OiUnitPrice" : 1.23,
        "OiShipped" : 123,
        "OiInvoice" : 123
      }
    },
    "Plant" : {
      "required" : [ "InItemid" ],
      "properties" : {
        "InItemid": {
          "type": "integer",
          "example" : 123,
          "description": "Item ID"
        },
        "InSource": {
          "type": "integer",
          "example" : 123,
          "description": "Vending Source Code"
        },
        "InSize": {
          "type": "integer",
          "example" : 123,
          "description": "Size in gallons"
        },
        "InName": {
          "type": "string",
          "example" : "ABC",
          "description": "Common name"
        },
        "InLatin": {
          "type": "string",
          "example" : "ABC",
          "description": "Latin name"
        },
        "InZone": {
          "type": "integer",
          "example" : 123,
          "description": "Zone"
        },
        "InType": {
          "type": "integer",
          "example" : 123,
          "description": "Type code"
        },
        "InFlower": {
          "type": "string",
          "example" : "ABC",
          "description": "Flowering?"
        },
        "InColor": {
          "type": "string",
          "example" : "ABC",
          "description": "Flower color"
        },
        "InShape": {
          "type": "string",
          "example" : "ABC",
          "description": "Plant shape"
        },
        "InMaxhigh": {
          "type": "integer",
          "example" : 123,
          "description": "Maximum height (in inches)"
        },
        "InMaxwide": {
          "type": "integer",
          "example" : 123,
          "description": "Maximum width (in inches)"
        },
        "InWater": {
          "type": "string",
          "example" : "ABC",
          "description": "Water requirements"
        },
        "InSun": {
          "type": "string",
          "example" : "ABC",
          "description": "Sun requirements"
        },
        "InLocation": {
          "type": "string",
          "example" : "ABC",
          "description": "Bin/aisle"
        },
        "InOnhand": {
          "type": "integer",
          "example" : 123,
          "description": "Qty on hand"
        },
        "InAllocated": {
          "type": "integer",
          "example" : 123,
          "description": "Qty allocated"
        },
        "InOnorder": {
          "type": "integer",
          "example" : 123,
          "description": "Qty on order"
        },
        "InMinimum": {
          "type": "integer",
          "example" : 123,
          "description": "Reorder point"
        },
        "InPrice": {
          "type": "number",
          "format": "float",
          "example" : 1.23,
          "description": "Unit Price"
        },
        "InCost": {
          "type": "number",
          "format": "float",
          "example" : 1.23,
          "description": "Item Cost"
        }
      },
      "example" : {
        "InItemid" : 123,
        "InSource" : 123,
        "InSize" : 123,
        "InName" : "ABC",
        "InLatin" : "ABC",
        "InZone" : 123,
        "InType" : 123,
        "InFlower" : "ABC",
        "InColor" : "ABC",
        "InShape" : "ABC",
        "InMaxhigh" : 123,
        "InMaxwide" : 123,
        "InWater" : "ABC",
        "InSun" : "ABC",
        "InLocation" : "ABC",
        "InOnhand" : 123,
        "InAllocated" : 123,
        "InOnorder" : 123,
        "InMinimum" : 123,
        "InPrice" : 1.23,
        "InCost" : 1.23
      }
    },
    "Vendor" : {
      "required" : [ "VendKey" ],
      "properties" : {
        "VendKey": {
          "type": "integer",
          "example" : 123,
          "description": "Vendor ID"
        },
        "VendRtype": {
          "type": "integer",
          "example" : 123,
          "description": "Record Type"
        },
        "VendName": {
          "type": "string",
          "example" : "ABC",
          "description": "Vendor Name"
        },
        "VendStreet": {
          "type": "string",
          "example" : "ABC",
          "description": "Street Address"
        },
        "VendCity": {
          "type": "string",
          "example" : "ABC",
          "description": "City"
        },
        "VendState": {
          "type": "string",
          "example" : "ABC",
          "description": "State"
        },
        "VendZip": {
          "type": "integer",
          "example" : 123,
          "description": "Zip Code"
        },
        "VendContact": {
          "type": "string",
          "example" : "ABC",
          "description": "Contact Person"
        },
        "VendTelephone": {
          "type": "integer",
          "example" : 123,
          "description": "Phone number"
        },
        "VendFax": {
          "type": "integer",
          "example" : 123,
          "description": "Fax Number"
        },
        "VendTerms": {
          "type": "string",
          "example" : "ABC",
          "description": "Terms & Conditions"
        }
      },
      "example" : {
        "VendKey" : 123,
        "VendRtype" : 123,
        "VendName" : "ABC",
        "VendStreet" : "ABC",
        "VendCity" : "ABC",
        "VendState" : "ABC",
        "VendZip" : 123,
        "VendContact" : "ABC",
        "VendTelephone" : 123,
        "VendFax" : 123,
        "VendTerms" : "ABC"
      }
    },
    "PatchRequest": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PatchDocument"
      }
    },
    "PatchDocument": {
      "description": "A JSONPatch document as defined by RFC 6902",
      "required": [
        "op",
        "path"
      ],
      "properties": {
        "op": {
          "type": "string",
          "description": "The operation to be performed",
          "enum": [
            "add",
            "remove",
            "replace",
            "move",
            "copy",
            "test"
          ]
        },
        "path": {
          "type": "string",
          "description": "A JSON-Pointer"
        },
        "value": {
          "type": "object",
          "description": "The value to be used within the operations."
        },
        "from": {
          "type": "string",
          "description": "A string containing a JSON Pointer value."
        }
      }
    }
  }
}