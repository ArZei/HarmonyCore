{
"swagger": "2.0",
  "info": {
    "description": "This environment presents an example of using Harmony Core to expose a collection of RESTful Web Service endpoints that allow you to interact with a small sample dataset.",
    "version": "1.0.0",
    "title": "Harmony Core Sample API",
    "termsOfService": "/license.html",
    "contact": { "email": "jodah.veloper@synergexpsg.com" },
    "license": { "name": "BSD 2-Clause License", "url": "https://github.com/Synergex/HarmonyCore/blob/master/LICENSE.md" }
  },
  "host": "localhost:8086",
  "basePath": "/odata",
  "schemes": [ "https" ],
  "consumes": [ "application/json" ],
  "produces": [ "application/json" ],
  "tags": [
    {
      "name": "Customer",
      "description": "Operations related to Customer Record",
    },
    {
      "name": "CustomerProperties",
      "description": "Operations related to individual properties of Customer Record",
    },
    {
      "name": "Order",
      "description": "Operations related to Orders",
    },
    {
      "name": "OrderProperties",
      "description": "Operations related to individual properties of Orders",
    },
    {
      "name": "OrderItem",
      "description": "Operations related to Order items",
    },
    {
      "name": "OrderItemProperties",
      "description": "Operations related to individual properties of Order items",
    },
    {
      "name": "Plant",
      "description": "Operations related to Plant Master Record",
    },
    {
      "name": "PlantProperties",
      "description": "Operations related to individual properties of Plant Master Record",
    },
    {
      "name": "Vendor",
      "description": "Operations related to Vendor Record",
    },
    {
      "name": "VendorProperties",
      "description": "Operations related to individual properties of Vendor Record",
    },
    {
      "name": "Create",
      "description": "Create operations",
    },
    {
      "name": "Read",
      "description": "Read operations",
    },
    {
      "name": "Update",
      "description": "Update operations",
    },
    {
      "name": "Delete",
      "description": "Delete operations",
    }
  ],
  "paths": {
    "/Customers": {
      "get": {
        "summary": "Get customers",
        "description": "Get all or a filtered collection of customers.",
        "operationId": "GetCustomers",
        "deprecated": false,
        "tags": [
          "Customer",
          "Read"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Customer"
              }
            }
          }
        }
      }
    },
    "/Customers/$count": {
      "get": {
        "summary": "Count customers",
        "description": "Count all or a filtered collection of customers.",
        "operationId": "CountCustomers",
        "deprecated": false,
        "tags": [
          "Customer",
          "Read"
        ],
        "parameters": [ 
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/Customers(CustKey={aCustKey})": {
      "get": {
        "summary": "Get customer",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomer",
        "deprecated": false,
        "tags": [
          "Customer",
          "Read"
        ],
        "parameters": [ 
          {
            "name": "aCustKey",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Customer"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete customer",
        "description": "Delete a customer via a complete primary key.",
        "operationId": "DeleteCustomer",
        "deprecated": false,
        "tags": [
          "Customer",
          "Delete"
        ],
        "parameters": [ 
          {
            "name": "aCustKey",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "integer",
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "put": {
        "summary": "Create or update customer",
        "description": "Create or update a customer via a complete primary key.",
        "operationId": "CreateOrUpdateCustomer",
        "deprecated": false,
        "tags": [
          "Customer",
          "Create",
          "Update"
        ],
        "parameters": [ 
          {
            "name": "aCustKey",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aCustomer",
            "in": "body",
            "description": "Data for customer to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Customer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "summary": "Patch customer",
        "description": "Patch a customer via complete primary key.",
        "operationId": "PatchCustomer",
        "deprecated": false,
        "tags": [
          "Customer",
          "Update"
        ],
        "parameters": [ 
          {
            "name": "aCustKey",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aCustomer",
            "in": "body",
            "description": "Data for customer to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Customer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      }
    },
    "/Customers(CustRtype={aCustRtype},CustKey={aCustKey})": {
      "get": {
        "summary": "Get customer",
        "description": "Get a customer via complete alternate key TagCustomer.",
        "operationId": "GetCustomerByKeyTagCustomer",
        "deprecated": false,
        "tags": [
          "Customer",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aCustRtype",
            "in": "path",
            "description": "Record Tag Field",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aCustKey",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          }        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Customer"
            }
          }
        }
      }
    },
    "/Customers({key})/CustKey": {
      "get": {
        "summary": "Get customer CustKey",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerCustKey",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Customers({key})/CustRtype": {
      "get": {
        "summary": "Get customer CustRtype",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerCustRtype",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Customers({key})/CustName": {
      "get": {
        "summary": "Get customer CustName",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerCustName",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Customers({key})/CustStreet": {
      "get": {
        "summary": "Get customer CustStreet",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerCustStreet",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Customers({key})/CustCity": {
      "get": {
        "summary": "Get customer CustCity",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerCustCity",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Customers({key})/CustState": {
      "get": {
        "summary": "Get customer CustState",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerCustState",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Customers({key})/CustZip": {
      "get": {
        "summary": "Get customer CustZip",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerCustZip",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Customers({key})/CustContact": {
      "get": {
        "summary": "Get customer CustContact",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerCustContact",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Customers({key})/CustPhone": {
      "get": {
        "summary": "Get customer CustPhone",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerCustPhone",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Customers({key})/CustFax": {
      "get": {
        "summary": "Get customer CustFax",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerCustFax",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Customers({key})/CustGift": {
      "get": {
        "summary": "Get customer CustGift",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerCustGift",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Customers({key})/CustTcode": {
      "get": {
        "summary": "Get customer CustTcode",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerCustTcode",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Customers({key})/CustTaxno": {
      "get": {
        "summary": "Get customer CustTaxno",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerCustTaxno",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Customers({key})/CustLimit": {
      "get": {
        "summary": "Get customer CustLimit",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerCustLimit",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer id",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    }

,
    "/Orders": {
      "get": {
        "summary": "Get orders",
        "description": "Get all or a filtered collection of orders.",
        "operationId": "GetOrders",
        "deprecated": false,
        "tags": [
          "Order",
          "Read"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          }
        }
      }
    },
    "/Orders/$count": {
      "get": {
        "summary": "Count orders",
        "description": "Count all or a filtered collection of orders.",
        "operationId": "CountOrders",
        "deprecated": false,
        "tags": [
          "Order",
          "Read"
        ],
        "parameters": [ 
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/Orders(OrNumber={aOrNumber})": {
      "get": {
        "summary": "Get order",
        "description": "Get a order via a complete primary key.",
        "operationId": "GetOrder",
        "deprecated": false,
        "tags": [
          "Order",
          "Read"
        ],
        "parameters": [ 
          {
            "name": "aOrNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Order"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete order",
        "description": "Delete a order via a complete primary key.",
        "operationId": "DeleteOrder",
        "deprecated": false,
        "tags": [
          "Order",
          "Delete"
        ],
        "parameters": [ 
          {
            "name": "aOrNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "put": {
        "summary": "Create or update order",
        "description": "Create or update a order via a complete primary key.",
        "operationId": "CreateOrUpdateOrder",
        "deprecated": false,
        "tags": [
          "Order",
          "Create",
          "Update"
        ],
        "parameters": [ 
          {
            "name": "aOrNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aOrder",
            "in": "body",
            "description": "Data for order to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "summary": "Patch order",
        "description": "Patch a order via complete primary key.",
        "operationId": "PatchOrder",
        "deprecated": false,
        "tags": [
          "Order",
          "Update"
        ],
        "parameters": [ 
          {
            "name": "aOrNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aOrder",
            "in": "body",
            "description": "Data for order to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      }
    },
    "/Orders(OrCustomer={aOrCustomer})": {
      "get": {
        "summary": "Get orders",
        "description": "Get orders via complete alternate key OrCustomer.",
        "operationId": "GetOrdersByKeyOrCustomer",
        "deprecated": false,
        "tags": [
          "Order",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aOrCustomer",
            "in": "path",
            "description": "Customer ID",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          }
        }
      }
    },
    "/Orders(OrCustomer={aOrCustomer})/$count": {
      "get": {
        "summary": "Count orders",
        "description": "Count orders via complete alternate key OrCustomer.",
        "operationId": "CountOrdersByKeyOrCustomer",
        "deprecated": false,
        "tags": [
          "Order",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aOrCustomer",
            "in": "path",
            "description": "Customer ID",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/Orders(OrOrdered={aOrOrdered})": {
      "get": {
        "summary": "Get orders",
        "description": "Get orders via complete alternate key OrOrdered.",
        "operationId": "GetOrdersByKeyOrOrdered",
        "deprecated": false,
        "tags": [
          "Order",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aOrOrdered",
            "in": "path",
            "description": "Date ordered",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          }
        }
      }
    },
    "/Orders(OrOrdered={aOrOrdered})/$count": {
      "get": {
        "summary": "Count orders",
        "description": "Count orders via complete alternate key OrOrdered.",
        "operationId": "CountOrdersByKeyOrOrdered",
        "deprecated": false,
        "tags": [
          "Order",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aOrOrdered",
            "in": "path",
            "description": "Date ordered",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/Orders(OrCompleted={aOrCompleted})": {
      "get": {
        "summary": "Get orders",
        "description": "Get orders via complete alternate key OrCompleted.",
        "operationId": "GetOrdersByKeyOrCompleted",
        "deprecated": false,
        "tags": [
          "Order",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aOrCompleted",
            "in": "path",
            "description": "Date order completed",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          }
        }
      }
    },
    "/Orders(OrCompleted={aOrCompleted})/$count": {
      "get": {
        "summary": "Count orders",
        "description": "Count orders via complete alternate key OrCompleted.",
        "operationId": "CountOrdersByKeyOrCompleted",
        "deprecated": false,
        "tags": [
          "Order",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aOrCompleted",
            "in": "path",
            "description": "Date order completed",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/Orders({key})/OrNumber": {
      "get": {
        "summary": "Get order OrNumber",
        "description": "Get a order via a complete primary key.",
        "operationId": "GetOrderOrNumber",
        "deprecated": false,
        "tags": [ "OrderProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Orders({key})/OrCustomer": {
      "get": {
        "summary": "Get order OrCustomer",
        "description": "Get a order via a complete primary key.",
        "operationId": "GetOrderOrCustomer",
        "deprecated": false,
        "tags": [ "OrderProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Orders({key})/OrPlacedBy": {
      "get": {
        "summary": "Get order OrPlacedBy",
        "description": "Get a order via a complete primary key.",
        "operationId": "GetOrderOrPlacedBy",
        "deprecated": false,
        "tags": [ "OrderProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Orders({key})/OrCustomerRef": {
      "get": {
        "summary": "Get order OrCustomerRef",
        "description": "Get a order via a complete primary key.",
        "operationId": "GetOrderOrCustomerRef",
        "deprecated": false,
        "tags": [ "OrderProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Orders({key})/OrTerms": {
      "get": {
        "summary": "Get order OrTerms",
        "description": "Get a order via a complete primary key.",
        "operationId": "GetOrderOrTerms",
        "deprecated": false,
        "tags": [ "OrderProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Orders({key})/OrOrdered": {
      "get": {
        "summary": "Get order OrOrdered",
        "description": "Get a order via a complete primary key.",
        "operationId": "GetOrderOrOrdered",
        "deprecated": false,
        "tags": [ "OrderProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Order number",
            "required": true,
            "format": "date-time",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Orders({key})/OrCompleted": {
      "get": {
        "summary": "Get order OrCompleted",
        "description": "Get a order via a complete primary key.",
        "operationId": "GetOrderOrCompleted",
        "deprecated": false,
        "tags": [ "OrderProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Order number",
            "required": true,
            "format": "date-time",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Orders({key})/Noname001": {
      "get": {
        "summary": "Get order Noname001",
        "description": "Get a order via a complete primary key.",
        "operationId": "GetOrderNoname001",
        "deprecated": false,
        "tags": [ "OrderProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }

,
    "/OrderItems": {
      "get": {
        "summary": "Get orderItems",
        "description": "Get all or a filtered collection of orderItems.",
        "operationId": "GetOrderItems",
        "deprecated": false,
        "tags": [
          "OrderItem",
          "Read"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderItem"
              }
            }
          }
        }
      }
    },
    "/OrderItems/$count": {
      "get": {
        "summary": "Count orderItems",
        "description": "Count all or a filtered collection of orderItems.",
        "operationId": "CountOrderItems",
        "deprecated": false,
        "tags": [
          "OrderItem",
          "Read"
        ],
        "parameters": [ 
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/OrderItems(OiNumber={aOiNumber},OiLineItem={aOiLineItem})": {
      "get": {
        "summary": "Get orderItem",
        "description": "Get a orderItem via a complete primary key.",
        "operationId": "GetOrderItem",
        "deprecated": false,
        "tags": [
          "OrderItem",
          "Read"
        ],
        "parameters": [ 
          {
            "name": "aOiNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aOiLineItem",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/OrderItem"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete orderItem",
        "description": "Delete a orderItem via a complete primary key.",
        "operationId": "DeleteOrderItem",
        "deprecated": false,
        "tags": [
          "OrderItem",
          "Delete"
        ],
        "parameters": [ 
          {
            "name": "aOiNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aOiLineItem",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "integer",
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "put": {
        "summary": "Create or update orderItem",
        "description": "Create or update a orderItem via a complete primary key.",
        "operationId": "CreateOrUpdateOrderItem",
        "deprecated": false,
        "tags": [
          "OrderItem",
          "Create",
          "Update"
        ],
        "parameters": [ 
          {
            "name": "aOiNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aOiLineItem",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aOrderItem",
            "in": "body",
            "description": "Data for orderItem to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/OrderItem"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "summary": "Patch orderItem",
        "description": "Patch a orderItem via complete primary key.",
        "operationId": "PatchOrderItem",
        "deprecated": false,
        "tags": [
          "OrderItem",
          "Update"
        ],
        "parameters": [ 
          {
            "name": "aOiNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aOiLineItem",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aOrderItem",
            "in": "body",
            "description": "Data for orderItem to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/OrderItem"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      }
    },
    "/OrderItems(OiItemOrdered={aOiItemOrdered})": {
      "get": {
        "summary": "Get orderItems",
        "description": "Get orderItems via complete alternate key OiItemOrdered.",
        "operationId": "GetOrderItemsByKeyOiItemOrdered",
        "deprecated": false,
        "tags": [
          "OrderItem",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aOiItemOrdered",
            "in": "path",
            "description": "Item ordered",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderItem"
              }
            }
          }
        }
      }
    },
    "/OrderItems(OiItemOrdered={aOiItemOrdered})/$count": {
      "get": {
        "summary": "Count orderItems",
        "description": "Count orderItems via complete alternate key OiItemOrdered.",
        "operationId": "CountOrderItemsByKeyOiItemOrdered",
        "deprecated": false,
        "tags": [
          "OrderItem",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aOiItemOrdered",
            "in": "path",
            "description": "Item ordered",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/OrderItems(OiShipped={aOiShipped})": {
      "get": {
        "summary": "Get orderItems",
        "description": "Get orderItems via complete alternate key OiShipped.",
        "operationId": "GetOrderItemsByKeyOiShipped",
        "deprecated": false,
        "tags": [
          "OrderItem",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aOiShipped",
            "in": "path",
            "description": "Date shipped",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderItem"
              }
            }
          }
        }
      }
    },
    "/OrderItems(OiShipped={aOiShipped})/$count": {
      "get": {
        "summary": "Count orderItems",
        "description": "Count orderItems via complete alternate key OiShipped.",
        "operationId": "CountOrderItemsByKeyOiShipped",
        "deprecated": false,
        "tags": [
          "OrderItem",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aOiShipped",
            "in": "path",
            "description": "Date shipped",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/OrderItems(OiInvoice={aOiInvoice})": {
      "get": {
        "summary": "Get orderItems",
        "description": "Get orderItems via complete alternate key OiInvoice.",
        "operationId": "GetOrderItemsByKeyOiInvoice",
        "deprecated": false,
        "tags": [
          "OrderItem",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aOiInvoice",
            "in": "path",
            "description": "Invoice number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderItem"
              }
            }
          }
        }
      }
    },
    "/OrderItems(OiInvoice={aOiInvoice})/$count": {
      "get": {
        "summary": "Count orderItems",
        "description": "Count orderItems via complete alternate key OiInvoice.",
        "operationId": "CountOrderItemsByKeyOiInvoice",
        "deprecated": false,
        "tags": [
          "OrderItem",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aOiInvoice",
            "in": "path",
            "description": "Invoice number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/OrderItems(OiNumber={aOiNumber},OiLineItem={aOiLineItem})/OiNumber": {
      "get": {
        "summary": "Get orderItem OiNumber",
        "description": "Get a orderItem via a complete primary key.",
        "operationId": "GetOrderItemOiNumber",
        "deprecated": false,
        "tags": [ "OrderItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "aOiNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer"
          },
          {
            "name": "aOiLineItem",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/OrderItems(OiNumber={aOiNumber},OiLineItem={aOiLineItem})/OiLineItem": {
      "get": {
        "summary": "Get orderItem OiLineItem",
        "description": "Get a orderItem via a complete primary key.",
        "operationId": "GetOrderItemOiLineItem",
        "deprecated": false,
        "tags": [ "OrderItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "aOiNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer"
          },
          {
            "name": "aOiLineItem",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/OrderItems(OiNumber={aOiNumber},OiLineItem={aOiLineItem})/OiItemOrdered": {
      "get": {
        "summary": "Get orderItem OiItemOrdered",
        "description": "Get a orderItem via a complete primary key.",
        "operationId": "GetOrderItemOiItemOrdered",
        "deprecated": false,
        "tags": [ "OrderItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "aOiNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer"
          },
          {
            "name": "aOiLineItem",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/OrderItems(OiNumber={aOiNumber},OiLineItem={aOiLineItem})/OiQty": {
      "get": {
        "summary": "Get orderItem OiQty",
        "description": "Get a orderItem via a complete primary key.",
        "operationId": "GetOrderItemOiQty",
        "deprecated": false,
        "tags": [ "OrderItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "aOiNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer"
          },
          {
            "name": "aOiLineItem",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/OrderItems(OiNumber={aOiNumber},OiLineItem={aOiLineItem})/OiUnitPrice": {
      "get": {
        "summary": "Get orderItem OiUnitPrice",
        "description": "Get a orderItem via a complete primary key.",
        "operationId": "GetOrderItemOiUnitPrice",
        "deprecated": false,
        "tags": [ "OrderItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "aOiNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "number"
          },
          {
            "name": "aOiLineItem",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    }
,
    "/OrderItems(OiNumber={aOiNumber},OiLineItem={aOiLineItem})/OiShipped": {
      "get": {
        "summary": "Get orderItem OiShipped",
        "description": "Get a orderItem via a complete primary key.",
        "operationId": "GetOrderItemOiShipped",
        "deprecated": false,
        "tags": [ "OrderItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "aOiNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "aOiLineItem",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "format": "date-time",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/OrderItems(OiNumber={aOiNumber},OiLineItem={aOiLineItem})/OiInvoice": {
      "get": {
        "summary": "Get orderItem OiInvoice",
        "description": "Get a orderItem via a complete primary key.",
        "operationId": "GetOrderItemOiInvoice",
        "deprecated": false,
        "tags": [ "OrderItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "aOiNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer"
          },
          {
            "name": "aOiLineItem",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }

,
    "/Plants": {
      "get": {
        "summary": "Get plants",
        "description": "Get all or a filtered collection of plants.",
        "operationId": "GetPlants",
        "deprecated": false,
        "tags": [
          "Plant",
          "Read"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Plant"
              }
            }
          }
        }
      }
    },
    "/Plants/$count": {
      "get": {
        "summary": "Count plants",
        "description": "Count all or a filtered collection of plants.",
        "operationId": "CountPlants",
        "deprecated": false,
        "tags": [
          "Plant",
          "Read"
        ],
        "parameters": [ 
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/Plants(InItemid={aInItemid})": {
      "get": {
        "summary": "Get plant",
        "description": "Get a plant via a complete primary key.",
        "operationId": "GetPlant",
        "deprecated": false,
        "tags": [
          "Plant",
          "Read"
        ],
        "parameters": [ 
          {
            "name": "aInItemid",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Plant"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete plant",
        "description": "Delete a plant via a complete primary key.",
        "operationId": "DeletePlant",
        "deprecated": false,
        "tags": [
          "Plant",
          "Delete"
        ],
        "parameters": [ 
          {
            "name": "aInItemid",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "integer",
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "put": {
        "summary": "Create or update plant",
        "description": "Create or update a plant via a complete primary key.",
        "operationId": "CreateOrUpdatePlant",
        "deprecated": false,
        "tags": [
          "Plant",
          "Create",
          "Update"
        ],
        "parameters": [ 
          {
            "name": "aInItemid",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aPlant",
            "in": "body",
            "description": "Data for plant to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Plant"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "summary": "Patch plant",
        "description": "Patch a plant via complete primary key.",
        "operationId": "PatchPlant",
        "deprecated": false,
        "tags": [
          "Plant",
          "Update"
        ],
        "parameters": [ 
          {
            "name": "aInItemid",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aPlant",
            "in": "body",
            "description": "Data for plant to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Plant"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      }
    },
    "/Plants(InSource={aInSource})": {
      "get": {
        "summary": "Get plants",
        "description": "Get plants via complete alternate key Vendor.",
        "operationId": "GetPlantsByKeyVendor",
        "deprecated": false,
        "tags": [
          "Plant",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aInSource",
            "in": "path",
            "description": "Vending Source Code",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Plant"
              }
            }
          }
        }
      }
    },
    "/Plants(InSource={aInSource})/$count": {
      "get": {
        "summary": "Count plants",
        "description": "Count plants via complete alternate key Vendor.",
        "operationId": "CountPlantsByKeyVendor",
        "deprecated": false,
        "tags": [
          "Plant",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aInSource",
            "in": "path",
            "description": "Vending Source Code",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/Plants(InColor='{aInColor}')": {
      "get": {
        "summary": "Get plants",
        "description": "Get plants via complete alternate key Color.",
        "operationId": "GetPlantsByKeyColor",
        "deprecated": false,
        "tags": [
          "Plant",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aInColor",
            "in": "path",
            "description": "Flower color",
            "required": true,
            "type": "string",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Plant"
              }
            }
          }
        }
      }
    },
    "/Plants(InColor='{aInColor}')/$count": {
      "get": {
        "summary": "Count plants",
        "description": "Count plants via complete alternate key Color.",
        "operationId": "CountPlantsByKeyColor",
        "deprecated": false,
        "tags": [
          "Plant",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aInColor",
            "in": "path",
            "description": "Flower color",
            "required": true,
            "type": "string",
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/Plants(InSize={aInSize})": {
      "get": {
        "summary": "Get plants",
        "description": "Get plants via complete alternate key Size.",
        "operationId": "GetPlantsByKeySize",
        "deprecated": false,
        "tags": [
          "Plant",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aInSize",
            "in": "path",
            "description": "Size in gallons",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Plant"
              }
            }
          }
        }
      }
    },
    "/Plants(InSize={aInSize})/$count": {
      "get": {
        "summary": "Count plants",
        "description": "Count plants via complete alternate key Size.",
        "operationId": "CountPlantsByKeySize",
        "deprecated": false,
        "tags": [
          "Plant",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aInSize",
            "in": "path",
            "description": "Size in gallons",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/Plants(InName='{aInName}')": {
      "get": {
        "summary": "Get plants",
        "description": "Get plants via complete alternate key Name.",
        "operationId": "GetPlantsByKeyName",
        "deprecated": false,
        "tags": [
          "Plant",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aInName",
            "in": "path",
            "description": "Common name",
            "required": true,
            "type": "string",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Plant"
              }
            }
          }
        }
      }
    },
    "/Plants(InName='{aInName}')/$count": {
      "get": {
        "summary": "Count plants",
        "description": "Count plants via complete alternate key Name.",
        "operationId": "CountPlantsByKeyName",
        "deprecated": false,
        "tags": [
          "Plant",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aInName",
            "in": "path",
            "description": "Common name",
            "required": true,
            "type": "string",
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/Plants({key})/InItemid": {
      "get": {
        "summary": "Get plant InItemid",
        "description": "Get a plant via a complete primary key.",
        "operationId": "GetPlantInItemid",
        "deprecated": false,
        "tags": [ "PlantProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Plants({key})/InSource": {
      "get": {
        "summary": "Get plant InSource",
        "description": "Get a plant via a complete primary key.",
        "operationId": "GetPlantInSource",
        "deprecated": false,
        "tags": [ "PlantProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Plants({key})/InSize": {
      "get": {
        "summary": "Get plant InSize",
        "description": "Get a plant via a complete primary key.",
        "operationId": "GetPlantInSize",
        "deprecated": false,
        "tags": [ "PlantProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Plants({key})/InName": {
      "get": {
        "summary": "Get plant InName",
        "description": "Get a plant via a complete primary key.",
        "operationId": "GetPlantInName",
        "deprecated": false,
        "tags": [ "PlantProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Plants({key})/InLatin": {
      "get": {
        "summary": "Get plant InLatin",
        "description": "Get a plant via a complete primary key.",
        "operationId": "GetPlantInLatin",
        "deprecated": false,
        "tags": [ "PlantProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Plants({key})/InZone": {
      "get": {
        "summary": "Get plant InZone",
        "description": "Get a plant via a complete primary key.",
        "operationId": "GetPlantInZone",
        "deprecated": false,
        "tags": [ "PlantProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Plants({key})/InType": {
      "get": {
        "summary": "Get plant InType",
        "description": "Get a plant via a complete primary key.",
        "operationId": "GetPlantInType",
        "deprecated": false,
        "tags": [ "PlantProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Plants({key})/InFlower": {
      "get": {
        "summary": "Get plant InFlower",
        "description": "Get a plant via a complete primary key.",
        "operationId": "GetPlantInFlower",
        "deprecated": false,
        "tags": [ "PlantProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Plants({key})/InColor": {
      "get": {
        "summary": "Get plant InColor",
        "description": "Get a plant via a complete primary key.",
        "operationId": "GetPlantInColor",
        "deprecated": false,
        "tags": [ "PlantProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Plants({key})/InShape": {
      "get": {
        "summary": "Get plant InShape",
        "description": "Get a plant via a complete primary key.",
        "operationId": "GetPlantInShape",
        "deprecated": false,
        "tags": [ "PlantProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Plants({key})/InMaxhigh": {
      "get": {
        "summary": "Get plant InMaxhigh",
        "description": "Get a plant via a complete primary key.",
        "operationId": "GetPlantInMaxhigh",
        "deprecated": false,
        "tags": [ "PlantProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Plants({key})/InMaxwide": {
      "get": {
        "summary": "Get plant InMaxwide",
        "description": "Get a plant via a complete primary key.",
        "operationId": "GetPlantInMaxwide",
        "deprecated": false,
        "tags": [ "PlantProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Plants({key})/InWater": {
      "get": {
        "summary": "Get plant InWater",
        "description": "Get a plant via a complete primary key.",
        "operationId": "GetPlantInWater",
        "deprecated": false,
        "tags": [ "PlantProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Plants({key})/InSun": {
      "get": {
        "summary": "Get plant InSun",
        "description": "Get a plant via a complete primary key.",
        "operationId": "GetPlantInSun",
        "deprecated": false,
        "tags": [ "PlantProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Plants({key})/InLocation": {
      "get": {
        "summary": "Get plant InLocation",
        "description": "Get a plant via a complete primary key.",
        "operationId": "GetPlantInLocation",
        "deprecated": false,
        "tags": [ "PlantProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Plants({key})/InOnhand": {
      "get": {
        "summary": "Get plant InOnhand",
        "description": "Get a plant via a complete primary key.",
        "operationId": "GetPlantInOnhand",
        "deprecated": false,
        "tags": [ "PlantProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Plants({key})/InAllocated": {
      "get": {
        "summary": "Get plant InAllocated",
        "description": "Get a plant via a complete primary key.",
        "operationId": "GetPlantInAllocated",
        "deprecated": false,
        "tags": [ "PlantProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Plants({key})/InOnorder": {
      "get": {
        "summary": "Get plant InOnorder",
        "description": "Get a plant via a complete primary key.",
        "operationId": "GetPlantInOnorder",
        "deprecated": false,
        "tags": [ "PlantProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Plants({key})/InMinimum": {
      "get": {
        "summary": "Get plant InMinimum",
        "description": "Get a plant via a complete primary key.",
        "operationId": "GetPlantInMinimum",
        "deprecated": false,
        "tags": [ "PlantProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Plants({key})/InPrice": {
      "get": {
        "summary": "Get plant InPrice",
        "description": "Get a plant via a complete primary key.",
        "operationId": "GetPlantInPrice",
        "deprecated": false,
        "tags": [ "PlantProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    }
,
    "/Plants({key})/InCost": {
      "get": {
        "summary": "Get plant InCost",
        "description": "Get a plant via a complete primary key.",
        "operationId": "GetPlantInCost",
        "deprecated": false,
        "tags": [ "PlantProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item ID",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    }

,
    "/Vendors": {
      "get": {
        "summary": "Get vendors",
        "description": "Get all or a filtered collection of vendors.",
        "operationId": "GetVendors",
        "deprecated": false,
        "tags": [
          "Vendor",
          "Read"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vendor"
              }
            }
          }
        }
      }
    },
    "/Vendors/$count": {
      "get": {
        "summary": "Count vendors",
        "description": "Count all or a filtered collection of vendors.",
        "operationId": "CountVendors",
        "deprecated": false,
        "tags": [
          "Vendor",
          "Read"
        ],
        "parameters": [ 
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/Vendors(VendKey={aVendKey})": {
      "get": {
        "summary": "Get vendor",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendor",
        "deprecated": false,
        "tags": [
          "Vendor",
          "Read"
        ],
        "parameters": [ 
          {
            "name": "aVendKey",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Vendor"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete vendor",
        "description": "Delete a vendor via a complete primary key.",
        "operationId": "DeleteVendor",
        "deprecated": false,
        "tags": [
          "Vendor",
          "Delete"
        ],
        "parameters": [ 
          {
            "name": "aVendKey",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "type": "integer",
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "put": {
        "summary": "Create or update vendor",
        "description": "Create or update a vendor via a complete primary key.",
        "operationId": "CreateOrUpdateVendor",
        "deprecated": false,
        "tags": [
          "Vendor",
          "Create",
          "Update"
        ],
        "parameters": [ 
          {
            "name": "aVendKey",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aVendor",
            "in": "body",
            "description": "Data for vendor to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Vendor"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "summary": "Patch vendor",
        "description": "Patch a vendor via complete primary key.",
        "operationId": "PatchVendor",
        "deprecated": false,
        "tags": [
          "Vendor",
          "Update"
        ],
        "parameters": [ 
          {
            "name": "aVendKey",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aVendor",
            "in": "body",
            "description": "Data for vendor to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Vendor"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      }
    },
    "/Vendors(VendRtype={aVendRtype},VendKey={aVendKey})": {
      "get": {
        "summary": "Get vendor",
        "description": "Get a vendor via complete alternate key TagVendor.",
        "operationId": "GetVendorByKeyTagVendor",
        "deprecated": false,
        "tags": [
          "Vendor",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aVendRtype",
            "in": "path",
            "description": "Record Type",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aVendKey",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          }        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Vendor"
            }
          }
        }
      }
    },
    "/Vendors({key})/VendKey": {
      "get": {
        "summary": "Get vendor VendKey",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendorVendKey",
        "deprecated": false,
        "tags": [ "VendorProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Vendors({key})/VendRtype": {
      "get": {
        "summary": "Get vendor VendRtype",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendorVendRtype",
        "deprecated": false,
        "tags": [ "VendorProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Vendors({key})/VendName": {
      "get": {
        "summary": "Get vendor VendName",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendorVendName",
        "deprecated": false,
        "tags": [ "VendorProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Vendors({key})/VendStreet": {
      "get": {
        "summary": "Get vendor VendStreet",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendorVendStreet",
        "deprecated": false,
        "tags": [ "VendorProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Vendors({key})/VendCity": {
      "get": {
        "summary": "Get vendor VendCity",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendorVendCity",
        "deprecated": false,
        "tags": [ "VendorProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Vendors({key})/VendState": {
      "get": {
        "summary": "Get vendor VendState",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendorVendState",
        "deprecated": false,
        "tags": [ "VendorProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Vendors({key})/VendZip": {
      "get": {
        "summary": "Get vendor VendZip",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendorVendZip",
        "deprecated": false,
        "tags": [ "VendorProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Vendors({key})/VendContact": {
      "get": {
        "summary": "Get vendor VendContact",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendorVendContact",
        "deprecated": false,
        "tags": [ "VendorProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Vendors({key})/VendTelephone": {
      "get": {
        "summary": "Get vendor VendTelephone",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendorVendTelephone",
        "deprecated": false,
        "tags": [ "VendorProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Vendors({key})/VendFax": {
      "get": {
        "summary": "Get vendor VendFax",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendorVendFax",
        "deprecated": false,
        "tags": [ "VendorProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Vendors({key})/VendTerms": {
      "get": {
        "summary": "Get vendor VendTerms",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendorVendTerms",
        "deprecated": false,
        "tags": [ "VendorProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }


  },
  "definitions": {
    "Customer": {
      "required": [ "CustKey" ],
      "properties": {
        "CustKey": {
          "type": "integer",
          "example": 355232,
          "description": "Customer id"
        },
        "CustRtype": {
          "type": "integer",
          "example": 0,
          "description": "Record Tag Field"
        },
        "CustName": {
          "type": "string",
          "example": "Abe's Nursery",
          "description": "Customer Name"
        },
        "CustStreet": {
          "type": "string",
          "example": "1032 Main Street",
          "description": "Street Address"
        },
        "CustCity": {
          "type": "string",
          "example": "Springfield",
          "description": "City"
        },
        "CustState": {
          "type": "string",
          "example": "MO",
          "description": "State"
        },
        "CustZip": {
          "type": "integer",
          "example": 64127,
          "description": "Zip code"
        },
        "CustContact": {
          "type": "string",
          "example": "Abe Albright",
          "description": "Contact"
        },
        "CustPhone": {
          "type": "string",
          "example": "(555) 123-4567",
          "description": "Phone number"
        },
        "CustFax": {
          "type": "string",
          "example": "(555) 987-6543",
          "description": "FAX number"
        },
        "CustGift": {
          "type": "integer",
          "example": 7,
          "description": "Customer Premium Gift"
        },
        "CustTcode": {
          "type": "string",
          "example": "30",
          "description": "Terms code"
        },
        "CustTaxno": {
          "type": "integer",
          "example": 546874521,
          "description": "Customer Tax Number"
        },
        "CustLimit": {
          "type": "number",
          "format": "float",
          "example": 5000,
          "description": "Credit limit"
        }
      },
      "example": {
        "CustKey": 355232,
        "CustRtype": 0,
        "CustName": "Abe's Nursery",
        "CustStreet": "1032 Main Street",
        "CustCity": "Springfield",
        "CustState": "MO",
        "CustZip": 64127,
        "CustContact": "Abe Albright",
        "CustPhone": "(555) 123-4567",
        "CustFax": "(555) 987-6543",
        "CustGift": 7,
        "CustTcode": "30",
        "CustTaxno": 546874521,
        "CustLimit": 5000
      }
    },
    "Order": {
      "required": [ "OrNumber" ],
      "properties": {
        "OrNumber": {
          "type": "integer",
          "example": 162512,
          "description": "Order number"
        },
        "OrCustomer": {
          "type": "integer",
          "example": 622822,
          "description": "Customer ID"
        },
        "OrPlacedBy": {
          "type": "string",
          "example": "John Doe",
          "description": "Order placed by"
        },
        "OrCustomerRef": {
          "type": "string",
          "example": "PO12345",
          "description": "Customer order reference"
        },
        "OrTerms": {
          "type": "string",
          "example": "30",
          "description": "Payment terms code"
        },
        "OrOrdered": {
          "type": "string",
          "format": "date-time",
          "example": "2018-03-01T00:00:00-08:00",
          "description": "Date ordered"
        },
        "OrCompleted": {
          "type": "string",
          "format": "date-time",
          "example": "2018-03-12T00:00:00-08:00",
          "description": "Date order completed"
        },
        "Noname001": {
          "type": "string",
          "example": "ABC",
          "description": "Spare space"
        }
      },
      "example": {
        "OrNumber": 162512,
        "OrCustomer": 622822,
        "OrPlacedBy": "John Doe",
        "OrCustomerRef": "PO12345",
        "OrTerms": "30",
        "OrOrdered": "2018-03-01T00:00:00-08:00",
        "OrCompleted": "2018-03-12T00:00:00-08:00",
        "Noname001": "ABC"
      }
    },
    "OrderItem": {
      "required": [ "OiNumber", "OiLineItem" ],
      "properties": {
        "OiNumber": {
          "type": "integer",
          "example": 5238,
          "description": "Order number"
        },
        "OiLineItem": {
          "type": "integer",
          "example": 1,
          "description": "Line item number"
        },
        "OiItemOrdered": {
          "type": "integer",
          "example": 21,
          "description": "Item ordered"
        },
        "OiQty": {
          "type": "integer",
          "example": 3,
          "description": "Quantity ordered"
        },
        "OiUnitPrice": {
          "type": "number",
          "format": "float",
          "example": 15.99,
          "description": "Unit price"
        },
        "OiShipped": {
          "type": "string",
          "format": "date-time",
          "example": "2018-03-17T00:00:00-08:00",
          "description": "Date shipped"
        },
        "OiInvoice": {
          "type": "integer",
          "example": 166825,
          "description": "Invoice number"
        }
      },
      "example": {
        "OiNumber": 5238,
        "OiLineItem": 1,
        "OiItemOrdered": 21,
        "OiQty": 3,
        "OiUnitPrice": 15.99,
        "OiShipped": "2018-03-17T00:00:00-08:00",
        "OiInvoice": 166825
      }
    },
    "Plant": {
      "required": [ "InItemid" ],
      "properties": {
        "InItemid": {
          "type": "integer",
          "example": 19,
          "description": "Item ID"
        },
        "InSource": {
          "type": "integer",
          "example": 41,
          "description": "Vending Source Code"
        },
        "InSize": {
          "type": "integer",
          "example": 5,
          "description": "Size in gallons"
        },
        "InName": {
          "type": "string",
          "example": "European Hackberry",
          "description": "Common name"
        },
        "InLatin": {
          "type": "string",
          "example": "Celtis australis",
          "description": "Latin name"
        },
        "InZone": {
          "type": "integer",
          "example": 2,
          "description": "Zone"
        },
        "InType": {
          "type": "integer",
          "example": 1,
          "description": "Type code"
        },
        "InFlower": {
          "type": "string",
          "example": "Y",
          "description": "Flowering?"
        },
        "InColor": {
          "type": "string",
          "example": "Red",
          "description": "Flower color"
        },
        "InShape": {
          "type": "string",
          "example": "1",
          "description": "Plant shape"
        },
        "InMaxhigh": {
          "type": "integer",
          "example": 24,
          "description": "Maximum height (in inches)"
        },
        "InMaxwide": {
          "type": "integer",
          "example": 30,
          "description": "Maximum width (in inches)"
        },
        "InWater": {
          "type": "string",
          "example": "Low",
          "description": "Water requirements"
        },
        "InSun": {
          "type": "string",
          "example": "Part",
          "description": "Sun requirements"
        },
        "InLocation": {
          "type": "string",
          "example": "B06",
          "description": "Bin/aisle"
        },
        "InOnhand": {
          "type": "integer",
          "example": 17,
          "description": "Qty on hand"
        },
        "InAllocated": {
          "type": "integer",
          "example": 2,
          "description": "Qty allocated"
        },
        "InOnorder": {
          "type": "integer",
          "example": 10,
          "description": "Qty on order"
        },
        "InMinimum": {
          "type": "integer",
          "example": 20,
          "description": "Reorder point"
        },
        "InPrice": {
          "type": "number",
          "format": "float",
          "example": 15.99,
          "description": "Unit Price"
        },
        "InCost": {
          "type": "number",
          "format": "float",
          "example": 9.99,
          "description": "Item Cost"
        }
      },
      "example": {
        "InItemid": 19,
        "InSource": 41,
        "InSize": 5,
        "InName": "European Hackberry",
        "InLatin": "Celtis australis",
        "InZone": 2,
        "InType": 1,
        "InFlower": "Y",
        "InColor": "Red",
        "InShape": "1",
        "InMaxhigh": 24,
        "InMaxwide": 30,
        "InWater": "Low",
        "InSun": "Part",
        "InLocation": "B06",
        "InOnhand": 17,
        "InAllocated": 2,
        "InOnorder": 10,
        "InMinimum": 20,
        "InPrice": 15.99,
        "InCost": 9.99
      }
    },
    "Vendor": {
      "required": [ "VendKey" ],
      "properties": {
        "VendKey": {
          "type": "integer",
          "example": 39,
          "description": "Vendor ID"
        },
        "VendRtype": {
          "type": "integer",
          "example": 1,
          "description": "Record Type"
        },
        "VendName": {
          "type": "string",
          "example": "Gardens R Us",
          "description": "Vendor Name"
        },
        "VendStreet": {
          "type": "string",
          "example": "97 Main St",
          "description": "Street Address"
        },
        "VendCity": {
          "type": "string",
          "example": "Concord",
          "description": "City"
        },
        "VendState": {
          "type": "string",
          "example": "NH",
          "description": "State"
        },
        "VendZip": {
          "type": "integer",
          "example": 03214,
          "description": "Zip Code"
        },
        "VendContact": {
          "type": "string",
          "example": "Jeremiah Johnson",
          "description": "Contact Person"
        },
        "VendTelephone": {
          "type": "string",
          "example": "(555) 627-2663",
          "description": "Phone number"
        },
        "VendFax": {
          "type": "string",
          "example": "(555) 627-6382",
          "description": "Fax Number"
        },
        "VendTerms": {
          "type": "string",
          "example": "60",
          "description": "Terms & Conditions"
        }
      },
      "example": {
        "VendKey": 39,
        "VendRtype": 1,
        "VendName": "Gardens R Us",
        "VendStreet": "97 Main St",
        "VendCity": "Concord",
        "VendState": "NH",
        "VendZip": 03214,
        "VendContact": "Jeremiah Johnson",
        "VendTelephone": "(555) 627-2663",
        "VendFax": "(555) 627-6382",
        "VendTerms": "60"
      }
    },
    "PatchRequest": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PatchDocument"
      }
    },
    "PatchDocument": {
      "description": "A JSONPatch document as defined by RFC 6902",
      "required": [
        "op",
        "path"
      ],
      "properties": {
        "op": {
          "type": "string",
          "description": "The operation to be performed",
          "enum": [
            "add",
            "remove",
            "replace",
            "move",
            "copy",
            "test"
          ]
        },
        "path": {
          "type": "string",
          "description": "A JSON-Pointer"
        },
        "value": {
          "type": "object",
          "description": "The value to be used within the operations."
        },
        "from": {
          "type": "string",
          "description": "A string containing a JSON Pointer value."
        }
      }
    }
  }
}