{
"swagger": "2.0",
  "info": {
    "description": "This environment presents an example of using Harmony Core to expose a collection of RESTful Web Service endpoints that allow you to interact with a small sample dataset.",
    "version": "1.0.0",
    "title": "Harmony Core Sample API",
    "termsOfService": "/license.html",
    "contact": { "email": "jodah.veloper@synergexpsg.com" },
    "license": { "name": "BSD 2-Clause License", "url": "https://github.com/Synergex/HarmonyCore/blob/master/LICENSE.md" }
  },
  "host": "localhost:8086",
  "basePath": "/odata",
  "schemes": [ "https" ],
  "consumes": [ "application/json" ],
  "produces": [ "application/json" ],
  "tags": [
    {
      "name": "Customer",
      "description": "Operations related to Customer record",
    },
    {
      "name": "CustomerProperties",
      "description": "Operations related to individual properties of Customer record",
    },
    {
      "name": "Item",
      "description": "Operations related to Item master record",
    },
    {
      "name": "ItemProperties",
      "description": "Operations related to individual properties of Item master record",
    },
    {
      "name": "Order",
      "description": "Operations related to Orders",
    },
    {
      "name": "OrderProperties",
      "description": "Operations related to individual properties of Orders",
    },
    {
      "name": "OrderItem",
      "description": "Operations related to Order items",
    },
    {
      "name": "OrderItemProperties",
      "description": "Operations related to individual properties of Order items",
    },
    {
      "name": "Vendor",
      "description": "Operations related to Vendor record",
    },
    {
      "name": "VendorProperties",
      "description": "Operations related to individual properties of Vendor record",
    },
    {
      "name": "Create",
      "description": "Create operations",
    },
    {
      "name": "Read",
      "description": "Read operations",
    },
    {
      "name": "Update",
      "description": "Update operations",
    },
    {
      "name": "Delete",
      "description": "Delete operations",
    }
  ],
  "paths": {
    "/Customers": {
      "get": {
        "summary": "Get customers",
        "description": "Get all or a filtered collection of customers.",
        "operationId": "GetCustomers",
        "deprecated": false,
        "tags": [
          "Customer",
          "Read"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Customer"
              }
            }
          }
        }
      }
    },
    "/Customers/$count": {
      "get": {
        "summary": "Count customers",
        "description": "Count all or a filtered collection of customers.",
        "operationId": "CountCustomers",
        "deprecated": false,
        "tags": [
          "Customer",
          "Read"
        ],
        "parameters": [ 
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/Customers(CustomerNumber={aCustomerNumber})": {
      "get": {
        "summary": "Get customer",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomer",
        "deprecated": false,
        "tags": [
          "Customer",
          "Read"
        ],
        "parameters": [ 
          {
            "name": "aCustomerNumber",
            "in": "path",
            "description": "Customer number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Customer"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete customer",
        "description": "Delete a customer via a complete primary key.",
        "operationId": "DeleteCustomer",
        "deprecated": false,
        "tags": [
          "Customer",
          "Delete"
        ],
        "parameters": [ 
          {
            "name": "aCustomerNumber",
            "in": "path",
            "description": "Customer number",
            "required": true,
            "type": "integer",
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "put": {
        "summary": "Create or update customer",
        "description": "Create or update a customer via a complete primary key.",
        "operationId": "CreateOrUpdateCustomer",
        "deprecated": false,
        "tags": [
          "Customer",
          "Create",
          "Update"
        ],
        "parameters": [ 
          {
            "name": "aCustomerNumber",
            "in": "path",
            "description": "Customer number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aCustomer",
            "in": "body",
            "description": "Data for customer to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Customer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "summary": "Patch customer",
        "description": "Patch a customer via complete primary key.",
        "operationId": "PatchCustomer",
        "deprecated": false,
        "tags": [
          "Customer",
          "Update"
        ],
        "parameters": [ 
          {
            "name": "aCustomerNumber",
            "in": "path",
            "description": "Customer number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aCustomer",
            "in": "body",
            "description": "Data for customer to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Customer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      }
    },
    "/Customers(RecordType={aRecordType},CustomerNumber={aCustomerNumber})": {
      "get": {
        "summary": "Get customer",
        "description": "Get a customer via complete alternate key TagCustomer.",
        "operationId": "GetCustomerByKeyTagCustomer",
        "deprecated": false,
        "tags": [
          "Customer",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aRecordType",
            "in": "path",
            "description": "Record type (0)",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aCustomerNumber",
            "in": "path",
            "description": "Customer number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          }        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Customer"
            }
          }
        }
      }
    },
    "/Customers({key})/CustomerNumber": {
      "get": {
        "summary": "Get customer CustomerNumber",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerCustomerNumber",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Customers({key})/RecordType": {
      "get": {
        "summary": "Get customer RecordType",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerRecordType",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Customers({key})/Name": {
      "get": {
        "summary": "Get customer Name",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerName",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Customers({key})/Street": {
      "get": {
        "summary": "Get customer Street",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerStreet",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Customers({key})/City": {
      "get": {
        "summary": "Get customer City",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerCity",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Customers({key})/State": {
      "get": {
        "summary": "Get customer State",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerState",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Customers({key})/ZipCode": {
      "get": {
        "summary": "Get customer ZipCode",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerZipCode",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Customers({key})/Contact": {
      "get": {
        "summary": "Get customer Contact",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerContact",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Customers({key})/Phone": {
      "get": {
        "summary": "Get customer Phone",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerPhone",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Customers({key})/Fax": {
      "get": {
        "summary": "Get customer Fax",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerFax",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Customers({key})/FavoriteItem": {
      "get": {
        "summary": "Get customer FavoriteItem",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerFavoriteItem",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Customers({key})/PaymentTermsCode": {
      "get": {
        "summary": "Get customer PaymentTermsCode",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerPaymentTermsCode",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Customers({key})/TaxId": {
      "get": {
        "summary": "Get customer TaxId",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerTaxId",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Customers({key})/CreditLimit": {
      "get": {
        "summary": "Get customer CreditLimit",
        "description": "Get a customer via a complete primary key.",
        "operationId": "GetCustomerCreditLimit",
        "deprecated": false,
        "tags": [ "CustomerProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Customer number",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    }

,
    "/Items": {
      "get": {
        "summary": "Get items",
        "description": "Get all or a filtered collection of items.",
        "operationId": "GetItems",
        "deprecated": false,
        "tags": [
          "Item",
          "Read"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Item"
              }
            }
          }
        }
      }
    },
    "/Items/$count": {
      "get": {
        "summary": "Count items",
        "description": "Count all or a filtered collection of items.",
        "operationId": "CountItems",
        "deprecated": false,
        "tags": [
          "Item",
          "Read"
        ],
        "parameters": [ 
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/Items(ItemNumber={aItemNumber})": {
      "get": {
        "summary": "Get item",
        "description": "Get a item via a complete primary key.",
        "operationId": "GetItem",
        "deprecated": false,
        "tags": [
          "Item",
          "Read"
        ],
        "parameters": [ 
          {
            "name": "aItemNumber",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Item"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete item",
        "description": "Delete a item via a complete primary key.",
        "operationId": "DeleteItem",
        "deprecated": false,
        "tags": [
          "Item",
          "Delete"
        ],
        "parameters": [ 
          {
            "name": "aItemNumber",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "integer",
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "put": {
        "summary": "Create or update item",
        "description": "Create or update a item via a complete primary key.",
        "operationId": "CreateOrUpdateItem",
        "deprecated": false,
        "tags": [
          "Item",
          "Create",
          "Update"
        ],
        "parameters": [ 
          {
            "name": "aItemNumber",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aItem",
            "in": "body",
            "description": "Data for item to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "summary": "Patch item",
        "description": "Patch a item via complete primary key.",
        "operationId": "PatchItem",
        "deprecated": false,
        "tags": [
          "Item",
          "Update"
        ],
        "parameters": [ 
          {
            "name": "aItemNumber",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aItem",
            "in": "body",
            "description": "Data for item to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      }
    },
    "/Items(VendorNumber={aVendorNumber})": {
      "get": {
        "summary": "Get items",
        "description": "Get items via complete alternate key VendorNumber.",
        "operationId": "GetItemsByKeyVendorNumber",
        "deprecated": false,
        "tags": [
          "Item",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aVendorNumber",
            "in": "path",
            "description": "Vendor number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Item"
              }
            }
          }
        }
      }
    },
    "/Items(VendorNumber={aVendorNumber})/$count": {
      "get": {
        "summary": "Count items",
        "description": "Count items via complete alternate key VendorNumber.",
        "operationId": "CountItemsByKeyVendorNumber",
        "deprecated": false,
        "tags": [
          "Item",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aVendorNumber",
            "in": "path",
            "description": "Vendor number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/Items(FlowerColor='{aFlowerColor}')": {
      "get": {
        "summary": "Get items",
        "description": "Get items via complete alternate key Color.",
        "operationId": "GetItemsByKeyColor",
        "deprecated": false,
        "tags": [
          "Item",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aFlowerColor",
            "in": "path",
            "description": "Flower color",
            "required": true,
            "type": "string",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Item"
              }
            }
          }
        }
      }
    },
    "/Items(FlowerColor='{aFlowerColor}')/$count": {
      "get": {
        "summary": "Count items",
        "description": "Count items via complete alternate key Color.",
        "operationId": "CountItemsByKeyColor",
        "deprecated": false,
        "tags": [
          "Item",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aFlowerColor",
            "in": "path",
            "description": "Flower color",
            "required": true,
            "type": "string",
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/Items(Size={aSize})": {
      "get": {
        "summary": "Get items",
        "description": "Get items via complete alternate key Size.",
        "operationId": "GetItemsByKeySize",
        "deprecated": false,
        "tags": [
          "Item",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aSize",
            "in": "path",
            "description": "Size in gallons",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Item"
              }
            }
          }
        }
      }
    },
    "/Items(Size={aSize})/$count": {
      "get": {
        "summary": "Count items",
        "description": "Count items via complete alternate key Size.",
        "operationId": "CountItemsByKeySize",
        "deprecated": false,
        "tags": [
          "Item",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aSize",
            "in": "path",
            "description": "Size in gallons",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/Items(CommonName='{aCommonName}')": {
      "get": {
        "summary": "Get items",
        "description": "Get items via complete alternate key Name.",
        "operationId": "GetItemsByKeyName",
        "deprecated": false,
        "tags": [
          "Item",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aCommonName",
            "in": "path",
            "description": "Common name",
            "required": true,
            "type": "string",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Item"
              }
            }
          }
        }
      }
    },
    "/Items(CommonName='{aCommonName}')/$count": {
      "get": {
        "summary": "Count items",
        "description": "Count items via complete alternate key Name.",
        "operationId": "CountItemsByKeyName",
        "deprecated": false,
        "tags": [
          "Item",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aCommonName",
            "in": "path",
            "description": "Common name",
            "required": true,
            "type": "string",
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/Items({key})/ItemNumber": {
      "get": {
        "summary": "Get item ItemNumber",
        "description": "Get a item via a complete primary key.",
        "operationId": "GetItemItemNumber",
        "deprecated": false,
        "tags": [ "ItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Items({key})/VendorNumber": {
      "get": {
        "summary": "Get item VendorNumber",
        "description": "Get a item via a complete primary key.",
        "operationId": "GetItemVendorNumber",
        "deprecated": false,
        "tags": [ "ItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Items({key})/Size": {
      "get": {
        "summary": "Get item Size",
        "description": "Get a item via a complete primary key.",
        "operationId": "GetItemSize",
        "deprecated": false,
        "tags": [ "ItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Items({key})/CommonName": {
      "get": {
        "summary": "Get item CommonName",
        "description": "Get a item via a complete primary key.",
        "operationId": "GetItemCommonName",
        "deprecated": false,
        "tags": [ "ItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Items({key})/LatinName": {
      "get": {
        "summary": "Get item LatinName",
        "description": "Get a item via a complete primary key.",
        "operationId": "GetItemLatinName",
        "deprecated": false,
        "tags": [ "ItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Items({key})/ZoneCode": {
      "get": {
        "summary": "Get item ZoneCode",
        "description": "Get a item via a complete primary key.",
        "operationId": "GetItemZoneCode",
        "deprecated": false,
        "tags": [ "ItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Items({key})/Type": {
      "get": {
        "summary": "Get item Type",
        "description": "Get a item via a complete primary key.",
        "operationId": "GetItemType",
        "deprecated": false,
        "tags": [ "ItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Items({key})/Flowering": {
      "get": {
        "summary": "Get item Flowering",
        "description": "Get a item via a complete primary key.",
        "operationId": "GetItemFlowering",
        "deprecated": false,
        "tags": [ "ItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Items({key})/FlowerColor": {
      "get": {
        "summary": "Get item FlowerColor",
        "description": "Get a item via a complete primary key.",
        "operationId": "GetItemFlowerColor",
        "deprecated": false,
        "tags": [ "ItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Items({key})/Shape": {
      "get": {
        "summary": "Get item Shape",
        "description": "Get a item via a complete primary key.",
        "operationId": "GetItemShape",
        "deprecated": false,
        "tags": [ "ItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Items({key})/MaxHeight": {
      "get": {
        "summary": "Get item MaxHeight",
        "description": "Get a item via a complete primary key.",
        "operationId": "GetItemMaxHeight",
        "deprecated": false,
        "tags": [ "ItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Items({key})/MaxWidth": {
      "get": {
        "summary": "Get item MaxWidth",
        "description": "Get a item via a complete primary key.",
        "operationId": "GetItemMaxWidth",
        "deprecated": false,
        "tags": [ "ItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Items({key})/WaterRequirement": {
      "get": {
        "summary": "Get item WaterRequirement",
        "description": "Get a item via a complete primary key.",
        "operationId": "GetItemWaterRequirement",
        "deprecated": false,
        "tags": [ "ItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Items({key})/SunRequirement": {
      "get": {
        "summary": "Get item SunRequirement",
        "description": "Get a item via a complete primary key.",
        "operationId": "GetItemSunRequirement",
        "deprecated": false,
        "tags": [ "ItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Items({key})/BinLocation": {
      "get": {
        "summary": "Get item BinLocation",
        "description": "Get a item via a complete primary key.",
        "operationId": "GetItemBinLocation",
        "deprecated": false,
        "tags": [ "ItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Items({key})/QtyOnHand": {
      "get": {
        "summary": "Get item QtyOnHand",
        "description": "Get a item via a complete primary key.",
        "operationId": "GetItemQtyOnHand",
        "deprecated": false,
        "tags": [ "ItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Items({key})/QtyAllocated": {
      "get": {
        "summary": "Get item QtyAllocated",
        "description": "Get a item via a complete primary key.",
        "operationId": "GetItemQtyAllocated",
        "deprecated": false,
        "tags": [ "ItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Items({key})/QtyOnOrder": {
      "get": {
        "summary": "Get item QtyOnOrder",
        "description": "Get a item via a complete primary key.",
        "operationId": "GetItemQtyOnOrder",
        "deprecated": false,
        "tags": [ "ItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Items({key})/ReorderLevel": {
      "get": {
        "summary": "Get item ReorderLevel",
        "description": "Get a item via a complete primary key.",
        "operationId": "GetItemReorderLevel",
        "deprecated": false,
        "tags": [ "ItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Items({key})/UnitPrice": {
      "get": {
        "summary": "Get item UnitPrice",
        "description": "Get a item via a complete primary key.",
        "operationId": "GetItemUnitPrice",
        "deprecated": false,
        "tags": [ "ItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    }
,
    "/Items({key})/CostPrice": {
      "get": {
        "summary": "Get item CostPrice",
        "description": "Get a item via a complete primary key.",
        "operationId": "GetItemCostPrice",
        "deprecated": false,
        "tags": [ "ItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Item number",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    }

,
    "/Orders": {
      "get": {
        "summary": "Get orders",
        "description": "Get all or a filtered collection of orders.",
        "operationId": "GetOrders",
        "deprecated": false,
        "tags": [
          "Order",
          "Read"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          }
        }
      }
    },
    "/Orders/$count": {
      "get": {
        "summary": "Count orders",
        "description": "Count all or a filtered collection of orders.",
        "operationId": "CountOrders",
        "deprecated": false,
        "tags": [
          "Order",
          "Read"
        ],
        "parameters": [ 
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/Orders(OrderNumber={aOrderNumber})": {
      "get": {
        "summary": "Get order",
        "description": "Get a order via a complete primary key.",
        "operationId": "GetOrder",
        "deprecated": false,
        "tags": [
          "Order",
          "Read"
        ],
        "parameters": [ 
          {
            "name": "aOrderNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Order"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete order",
        "description": "Delete a order via a complete primary key.",
        "operationId": "DeleteOrder",
        "deprecated": false,
        "tags": [
          "Order",
          "Delete"
        ],
        "parameters": [ 
          {
            "name": "aOrderNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "put": {
        "summary": "Create or update order",
        "description": "Create or update a order via a complete primary key.",
        "operationId": "CreateOrUpdateOrder",
        "deprecated": false,
        "tags": [
          "Order",
          "Create",
          "Update"
        ],
        "parameters": [ 
          {
            "name": "aOrderNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aOrder",
            "in": "body",
            "description": "Data for order to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "summary": "Patch order",
        "description": "Patch a order via complete primary key.",
        "operationId": "PatchOrder",
        "deprecated": false,
        "tags": [
          "Order",
          "Update"
        ],
        "parameters": [ 
          {
            "name": "aOrderNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aOrder",
            "in": "body",
            "description": "Data for order to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      }
    },
    "/Orders(CustomerNumber={aCustomerNumber})": {
      "get": {
        "summary": "Get orders",
        "description": "Get orders via complete alternate key CustomerNumber.",
        "operationId": "GetOrdersByKeyCustomerNumber",
        "deprecated": false,
        "tags": [
          "Order",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aCustomerNumber",
            "in": "path",
            "description": "Customer number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          }
        }
      }
    },
    "/Orders(CustomerNumber={aCustomerNumber})/$count": {
      "get": {
        "summary": "Count orders",
        "description": "Count orders via complete alternate key CustomerNumber.",
        "operationId": "CountOrdersByKeyCustomerNumber",
        "deprecated": false,
        "tags": [
          "Order",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aCustomerNumber",
            "in": "path",
            "description": "Customer number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/Orders(DateOrdered={aDateOrdered})": {
      "get": {
        "summary": "Get orders",
        "description": "Get orders via complete alternate key DateOrdered.",
        "operationId": "GetOrdersByKeyDateOrdered",
        "deprecated": false,
        "tags": [
          "Order",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aDateOrdered",
            "in": "path",
            "description": "Date ordered",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          }
        }
      }
    },
    "/Orders(DateOrdered={aDateOrdered})/$count": {
      "get": {
        "summary": "Count orders",
        "description": "Count orders via complete alternate key DateOrdered.",
        "operationId": "CountOrdersByKeyDateOrdered",
        "deprecated": false,
        "tags": [
          "Order",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aDateOrdered",
            "in": "path",
            "description": "Date ordered",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/Orders(DateCompleted={aDateCompleted})": {
      "get": {
        "summary": "Get orders",
        "description": "Get orders via complete alternate key DateCompleted.",
        "operationId": "GetOrdersByKeyDateCompleted",
        "deprecated": false,
        "tags": [
          "Order",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aDateCompleted",
            "in": "path",
            "description": "Date order completed",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          }
        }
      }
    },
    "/Orders(DateCompleted={aDateCompleted})/$count": {
      "get": {
        "summary": "Count orders",
        "description": "Count orders via complete alternate key DateCompleted.",
        "operationId": "CountOrdersByKeyDateCompleted",
        "deprecated": false,
        "tags": [
          "Order",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aDateCompleted",
            "in": "path",
            "description": "Date order completed",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/Orders({key})/OrderNumber": {
      "get": {
        "summary": "Get order OrderNumber",
        "description": "Get a order via a complete primary key.",
        "operationId": "GetOrderOrderNumber",
        "deprecated": false,
        "tags": [ "OrderProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Orders({key})/CustomerNumber": {
      "get": {
        "summary": "Get order CustomerNumber",
        "description": "Get a order via a complete primary key.",
        "operationId": "GetOrderCustomerNumber",
        "deprecated": false,
        "tags": [ "OrderProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Orders({key})/PlacedBy": {
      "get": {
        "summary": "Get order PlacedBy",
        "description": "Get a order via a complete primary key.",
        "operationId": "GetOrderPlacedBy",
        "deprecated": false,
        "tags": [ "OrderProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Orders({key})/CustomerReference": {
      "get": {
        "summary": "Get order CustomerReference",
        "description": "Get a order via a complete primary key.",
        "operationId": "GetOrderCustomerReference",
        "deprecated": false,
        "tags": [ "OrderProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Orders({key})/PaymentTermsCode": {
      "get": {
        "summary": "Get order PaymentTermsCode",
        "description": "Get a order via a complete primary key.",
        "operationId": "GetOrderPaymentTermsCode",
        "deprecated": false,
        "tags": [ "OrderProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Orders({key})/DateOrdered": {
      "get": {
        "summary": "Get order DateOrdered",
        "description": "Get a order via a complete primary key.",
        "operationId": "GetOrderDateOrdered",
        "deprecated": false,
        "tags": [ "OrderProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Order number",
            "required": true,
            "format": "date-time",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Orders({key})/DateCompleted": {
      "get": {
        "summary": "Get order DateCompleted",
        "description": "Get a order via a complete primary key.",
        "operationId": "GetOrderDateCompleted",
        "deprecated": false,
        "tags": [ "OrderProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Order number",
            "required": true,
            "format": "date-time",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Orders({key})/Noname001": {
      "get": {
        "summary": "Get order Noname001",
        "description": "Get a order via a complete primary key.",
        "operationId": "GetOrderNoname001",
        "deprecated": false,
        "tags": [ "OrderProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }

,
    "/OrderItems": {
      "get": {
        "summary": "Get orderItems",
        "description": "Get all or a filtered collection of orderItems.",
        "operationId": "GetOrderItems",
        "deprecated": false,
        "tags": [
          "OrderItem",
          "Read"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderItem"
              }
            }
          }
        }
      }
    },
    "/OrderItems/$count": {
      "get": {
        "summary": "Count orderItems",
        "description": "Count all or a filtered collection of orderItems.",
        "operationId": "CountOrderItems",
        "deprecated": false,
        "tags": [
          "OrderItem",
          "Read"
        ],
        "parameters": [ 
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/OrderItems(OrderNumber={aOrderNumber},ItemNumber={aItemNumber})": {
      "get": {
        "summary": "Get orderItem",
        "description": "Get a orderItem via a complete primary key.",
        "operationId": "GetOrderItem",
        "deprecated": false,
        "tags": [
          "OrderItem",
          "Read"
        ],
        "parameters": [ 
          {
            "name": "aOrderNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aItemNumber",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/OrderItem"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete orderItem",
        "description": "Delete a orderItem via a complete primary key.",
        "operationId": "DeleteOrderItem",
        "deprecated": false,
        "tags": [
          "OrderItem",
          "Delete"
        ],
        "parameters": [ 
          {
            "name": "aOrderNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aItemNumber",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "integer",
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "put": {
        "summary": "Create or update orderItem",
        "description": "Create or update a orderItem via a complete primary key.",
        "operationId": "CreateOrUpdateOrderItem",
        "deprecated": false,
        "tags": [
          "OrderItem",
          "Create",
          "Update"
        ],
        "parameters": [ 
          {
            "name": "aOrderNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aItemNumber",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aOrderItem",
            "in": "body",
            "description": "Data for orderItem to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/OrderItem"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "summary": "Patch orderItem",
        "description": "Patch a orderItem via complete primary key.",
        "operationId": "PatchOrderItem",
        "deprecated": false,
        "tags": [
          "OrderItem",
          "Update"
        ],
        "parameters": [ 
          {
            "name": "aOrderNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aItemNumber",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aOrderItem",
            "in": "body",
            "description": "Data for orderItem to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/OrderItem"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      }
    },
    "/OrderItems(ItemOrdered={aItemOrdered})": {
      "get": {
        "summary": "Get orderItems",
        "description": "Get orderItems via complete alternate key ItemOrdered.",
        "operationId": "GetOrderItemsByKeyItemOrdered",
        "deprecated": false,
        "tags": [
          "OrderItem",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aItemOrdered",
            "in": "path",
            "description": "Item ordered",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderItem"
              }
            }
          }
        }
      }
    },
    "/OrderItems(ItemOrdered={aItemOrdered})/$count": {
      "get": {
        "summary": "Count orderItems",
        "description": "Count orderItems via complete alternate key ItemOrdered.",
        "operationId": "CountOrderItemsByKeyItemOrdered",
        "deprecated": false,
        "tags": [
          "OrderItem",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aItemOrdered",
            "in": "path",
            "description": "Item ordered",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/OrderItems(DateShipped={aDateShipped})": {
      "get": {
        "summary": "Get orderItems",
        "description": "Get orderItems via complete alternate key DateShipped.",
        "operationId": "GetOrderItemsByKeyDateShipped",
        "deprecated": false,
        "tags": [
          "OrderItem",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aDateShipped",
            "in": "path",
            "description": "Date shipped",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderItem"
              }
            }
          }
        }
      }
    },
    "/OrderItems(DateShipped={aDateShipped})/$count": {
      "get": {
        "summary": "Count orderItems",
        "description": "Count orderItems via complete alternate key DateShipped.",
        "operationId": "CountOrderItemsByKeyDateShipped",
        "deprecated": false,
        "tags": [
          "OrderItem",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aDateShipped",
            "in": "path",
            "description": "Date shipped",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/OrderItems(InvoiceNumber={aInvoiceNumber})": {
      "get": {
        "summary": "Get orderItems",
        "description": "Get orderItems via complete alternate key InvoiceNumber.",
        "operationId": "GetOrderItemsByKeyInvoiceNumber",
        "deprecated": false,
        "tags": [
          "OrderItem",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aInvoiceNumber",
            "in": "path",
            "description": "Invoice number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderItem"
              }
            }
          }
        }
      }
    },
    "/OrderItems(InvoiceNumber={aInvoiceNumber})/$count": {
      "get": {
        "summary": "Count orderItems",
        "description": "Count orderItems via complete alternate key InvoiceNumber.",
        "operationId": "CountOrderItemsByKeyInvoiceNumber",
        "deprecated": false,
        "tags": [
          "OrderItem",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aInvoiceNumber",
            "in": "path",
            "description": "Invoice number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/OrderItems(OrderNumber={aOrderNumber},ItemNumber={aItemNumber})/OrderNumber": {
      "get": {
        "summary": "Get orderItem OrderNumber",
        "description": "Get a orderItem via a complete primary key.",
        "operationId": "GetOrderItemOrderNumber",
        "deprecated": false,
        "tags": [ "OrderItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "aOrderNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer"
          },
          {
            "name": "aItemNumber",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/OrderItems(OrderNumber={aOrderNumber},ItemNumber={aItemNumber})/ItemNumber": {
      "get": {
        "summary": "Get orderItem ItemNumber",
        "description": "Get a orderItem via a complete primary key.",
        "operationId": "GetOrderItemItemNumber",
        "deprecated": false,
        "tags": [ "OrderItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "aOrderNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer"
          },
          {
            "name": "aItemNumber",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/OrderItems(OrderNumber={aOrderNumber},ItemNumber={aItemNumber})/ItemOrdered": {
      "get": {
        "summary": "Get orderItem ItemOrdered",
        "description": "Get a orderItem via a complete primary key.",
        "operationId": "GetOrderItemItemOrdered",
        "deprecated": false,
        "tags": [ "OrderItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "aOrderNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer"
          },
          {
            "name": "aItemNumber",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/OrderItems(OrderNumber={aOrderNumber},ItemNumber={aItemNumber})/QuantityOrdered": {
      "get": {
        "summary": "Get orderItem QuantityOrdered",
        "description": "Get a orderItem via a complete primary key.",
        "operationId": "GetOrderItemQuantityOrdered",
        "deprecated": false,
        "tags": [ "OrderItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "aOrderNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer"
          },
          {
            "name": "aItemNumber",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/OrderItems(OrderNumber={aOrderNumber},ItemNumber={aItemNumber})/UnitPrice": {
      "get": {
        "summary": "Get orderItem UnitPrice",
        "description": "Get a orderItem via a complete primary key.",
        "operationId": "GetOrderItemUnitPrice",
        "deprecated": false,
        "tags": [ "OrderItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "aOrderNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "number"
          },
          {
            "name": "aItemNumber",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "number"
            }
          }
        }
      }
    }
,
    "/OrderItems(OrderNumber={aOrderNumber},ItemNumber={aItemNumber})/DateShipped": {
      "get": {
        "summary": "Get orderItem DateShipped",
        "description": "Get a orderItem via a complete primary key.",
        "operationId": "GetOrderItemDateShipped",
        "deprecated": false,
        "tags": [ "OrderItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "aOrderNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "aItemNumber",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "format": "date-time",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/OrderItems(OrderNumber={aOrderNumber},ItemNumber={aItemNumber})/InvoiceNumber": {
      "get": {
        "summary": "Get orderItem InvoiceNumber",
        "description": "Get a orderItem via a complete primary key.",
        "operationId": "GetOrderItemInvoiceNumber",
        "deprecated": false,
        "tags": [ "OrderItemProperties", "Read" ],
        "parameters": [ 
          {
            "name": "aOrderNumber",
            "in": "path",
            "description": "Order number",
            "required": true,
            "type": "integer"
          },
          {
            "name": "aItemNumber",
            "in": "path",
            "description": "Line item number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }

,
    "/Vendors": {
      "get": {
        "summary": "Get vendors",
        "description": "Get all or a filtered collection of vendors.",
        "operationId": "GetVendors",
        "deprecated": false,
        "tags": [
          "Vendor",
          "Read"
        ],
        "parameters": [
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order by some property",
            "type": "string"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Maximum number of rows to return.",
            "type": "integer"
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Rows to skip before starting to return data.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vendor"
              }
            }
          }
        }
      }
    },
    "/Vendors/$count": {
      "get": {
        "summary": "Count vendors",
        "description": "Count all or a filtered collection of vendors.",
        "operationId": "CountVendors",
        "deprecated": false,
        "tags": [
          "Vendor",
          "Read"
        ],
        "parameters": [ 
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter expression to restrict returned rows.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
              }
          }
        }
      }
    },
    "/Vendors(VendorNumber={aVendorNumber})": {
      "get": {
        "summary": "Get vendor",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendor",
        "deprecated": false,
        "tags": [
          "Vendor",
          "Read"
        ],
        "parameters": [ 
          {
            "name": "aVendorNumber",
            "in": "path",
            "description": "Vendor number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Vendor"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete vendor",
        "description": "Delete a vendor via a complete primary key.",
        "operationId": "DeleteVendor",
        "deprecated": false,
        "tags": [
          "Vendor",
          "Delete"
        ],
        "parameters": [ 
          {
            "name": "aVendorNumber",
            "in": "path",
            "description": "Vendor number",
            "required": true,
            "type": "integer",
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "put": {
        "summary": "Create or update vendor",
        "description": "Create or update a vendor via a complete primary key.",
        "operationId": "CreateOrUpdateVendor",
        "deprecated": false,
        "tags": [
          "Vendor",
          "Create",
          "Update"
        ],
        "parameters": [ 
          {
            "name": "aVendorNumber",
            "in": "path",
            "description": "Vendor number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aVendor",
            "in": "body",
            "description": "Data for vendor to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Vendor"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "summary": "Patch vendor",
        "description": "Patch a vendor via complete primary key.",
        "operationId": "PatchVendor",
        "deprecated": false,
        "tags": [
          "Vendor",
          "Update"
        ],
        "parameters": [ 
          {
            "name": "aVendorNumber",
            "in": "path",
            "description": "Vendor number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aVendor",
            "in": "body",
            "description": "Data for vendor to create or update.",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Vendor"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      }
    },
    "/Vendors(RecordType={aRecordType},VendorNumber={aVendorNumber})": {
      "get": {
        "summary": "Get vendor",
        "description": "Get a vendor via complete alternate key TagVendor.",
        "operationId": "GetVendorByKeyTagVendor",
        "deprecated": false,
        "tags": [
          "Vendor",
		  "Read"
        ],
        "parameters": [ 
          {
            "name": "aRecordType",
            "in": "path",
            "description": "Record type (1)",
            "required": true,
            "type": "integer",
          },
          {
            "name": "aVendorNumber",
            "in": "path",
            "description": "Vendor number",
            "required": true,
            "type": "integer",
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand one or more navigation properties.",
            "type": "string"
          },
          {
            "name": "$select",
            "in": "query",
            "description": "List of properties to be returned.",
            "type": "string"
          }        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Vendor"
            }
          }
        }
      }
    },
    "/Vendors({key})/VendorNumber": {
      "get": {
        "summary": "Get vendor VendorNumber",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendorVendorNumber",
        "deprecated": false,
        "tags": [ "VendorProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Vendor number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Vendors({key})/RecordType": {
      "get": {
        "summary": "Get vendor RecordType",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendorRecordType",
        "deprecated": false,
        "tags": [ "VendorProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Vendor number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Vendors({key})/Name": {
      "get": {
        "summary": "Get vendor Name",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendorName",
        "deprecated": false,
        "tags": [ "VendorProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Vendor number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Vendors({key})/Street": {
      "get": {
        "summary": "Get vendor Street",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendorStreet",
        "deprecated": false,
        "tags": [ "VendorProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Vendor number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Vendors({key})/City": {
      "get": {
        "summary": "Get vendor City",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendorCity",
        "deprecated": false,
        "tags": [ "VendorProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Vendor number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Vendors({key})/State": {
      "get": {
        "summary": "Get vendor State",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendorState",
        "deprecated": false,
        "tags": [ "VendorProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Vendor number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Vendors({key})/ZipCode": {
      "get": {
        "summary": "Get vendor ZipCode",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendorZipCode",
        "deprecated": false,
        "tags": [ "VendorProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Vendor number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Vendors({key})/Contact": {
      "get": {
        "summary": "Get vendor Contact",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendorContact",
        "deprecated": false,
        "tags": [ "VendorProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Vendor number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
,
    "/Vendors({key})/Phone": {
      "get": {
        "summary": "Get vendor Phone",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendorPhone",
        "deprecated": false,
        "tags": [ "VendorProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Vendor number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Vendors({key})/Fax": {
      "get": {
        "summary": "Get vendor Fax",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendorFax",
        "deprecated": false,
        "tags": [ "VendorProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Vendor number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        }
      }
    }
,
    "/Vendors({key})/PaymentTermsCode": {
      "get": {
        "summary": "Get vendor PaymentTermsCode",
        "description": "Get a vendor via a complete primary key.",
        "operationId": "GetVendorPaymentTermsCode",
        "deprecated": false,
        "tags": [ "VendorProperties", "Read" ],
        "parameters": [ 
          {
            "name": "key",
            "in": "path",
            "description": "Vendor number",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }


  },
  "definitions": {
    "Customer": {
      "required": [ "CustomerNumber" ],
      "properties": {
        "CustomerNumber": {
          "type": "integer",
          "example": 355232,
          "description": "Customer number"
        },
        "RecordType": {
          "type": "integer",
          "example": 0,
          "description": "Record type (0)"
        },
        "Name": {
          "type": "string",
          "example": "Abe's Nursery",
          "description": "Customer name"
        },
        "Street": {
          "type": "string",
          "example": "1032 Main Street",
          "description": "Street address"
        },
        "City": {
          "type": "string",
          "example": "Springfield",
          "description": "City"
        },
        "State": {
          "type": "string",
          "example": "MO",
          "description": "State"
        },
        "ZipCode": {
          "type": "integer",
          "example": 64127,
          "description": "Zip code"
        },
        "Contact": {
          "type": "string",
          "example": "Abe Albright",
          "description": "Contact name"
        },
        "Phone": {
          "type": "string",
          "example": "(555) 123-4567",
          "description": "Phone number"
        },
        "Fax": {
          "type": "string",
          "example": "(555) 987-6543",
          "description": "Fax number"
        },
        "FavoriteItem": {
          "type": "integer",
          "example": 7,
          "description": "Customers favorite item"
        },
        "PaymentTermsCode": {
          "type": "string",
          "example": "30",
          "description": "Payment terms code"
        },
        "TaxId": {
          "type": "integer",
          "example": 546874521,
          "description": "Customers tax ID number"
        },
        "CreditLimit": {
          "type": "number",
          "format": "float",
          "example": 5000,
          "description": "Credit limit"
        }
      },
      "example": {
        "CustomerNumber": 355232,
        "RecordType": 0,
        "Name": "Abe's Nursery",
        "Street": "1032 Main Street",
        "City": "Springfield",
        "State": "MO",
        "ZipCode": 64127,
        "Contact": "Abe Albright",
        "Phone": "(555) 123-4567",
        "Fax": "(555) 987-6543",
        "FavoriteItem": 7,
        "PaymentTermsCode": "30",
        "TaxId": 546874521,
        "CreditLimit": 5000
      }
    },
    "Item": {
      "required": [ "ItemNumber" ],
      "properties": {
        "ItemNumber": {
          "type": "integer",
          "example": 19,
          "description": "Item number"
        },
        "VendorNumber": {
          "type": "integer",
          "example": 41,
          "description": "Vendor number"
        },
        "Size": {
          "type": "integer",
          "example": 5,
          "description": "Size in gallons"
        },
        "CommonName": {
          "type": "string",
          "example": "European Hackberry",
          "description": "Common name"
        },
        "LatinName": {
          "type": "string",
          "example": "Celtis australis",
          "description": "Latin name"
        },
        "ZoneCode": {
          "type": "integer",
          "example": 2,
          "description": "Hardiness zone code"
        },
        "Type": {
          "type": "integer",
          "example": 1,
          "description": "Type code"
        },
        "Flowering": {
          "type": "string",
          "example": "Y",
          "description": "Flowering?"
        },
        "FlowerColor": {
          "type": "string",
          "example": "Red",
          "description": "Flower color"
        },
        "Shape": {
          "type": "string",
          "example": "1",
          "description": "Plant shape"
        },
        "MaxHeight": {
          "type": "integer",
          "example": 24,
          "description": "Maximum height (in inches)"
        },
        "MaxWidth": {
          "type": "integer",
          "example": 30,
          "description": "Maximum width (in inches)"
        },
        "WaterRequirement": {
          "type": "string",
          "example": "Low",
          "description": "Water requirements"
        },
        "SunRequirement": {
          "type": "string",
          "example": "Part",
          "description": "Sun requirements"
        },
        "BinLocation": {
          "type": "string",
          "example": "B06",
          "description": "Bin/aisle"
        },
        "QtyOnHand": {
          "type": "integer",
          "example": 17,
          "description": "Qty on hand"
        },
        "QtyAllocated": {
          "type": "integer",
          "example": 2,
          "description": "Qty allocated"
        },
        "QtyOnOrder": {
          "type": "integer",
          "example": 10,
          "description": "Qty on order"
        },
        "ReorderLevel": {
          "type": "integer",
          "example": 20,
          "description": "Reorder point"
        },
        "UnitPrice": {
          "type": "number",
          "format": "float",
          "example": 15.99,
          "description": "Unit price"
        },
        "CostPrice": {
          "type": "number",
          "format": "float",
          "example": 9.99,
          "description": "Item cost"
        }
      },
      "example": {
        "ItemNumber": 19,
        "VendorNumber": 41,
        "Size": 5,
        "CommonName": "European Hackberry",
        "LatinName": "Celtis australis",
        "ZoneCode": 2,
        "Type": 1,
        "Flowering": "Y",
        "FlowerColor": "Red",
        "Shape": "1",
        "MaxHeight": 24,
        "MaxWidth": 30,
        "WaterRequirement": "Low",
        "SunRequirement": "Part",
        "BinLocation": "B06",
        "QtyOnHand": 17,
        "QtyAllocated": 2,
        "QtyOnOrder": 10,
        "ReorderLevel": 20,
        "UnitPrice": 15.99,
        "CostPrice": 9.99
      }
    },
    "Order": {
      "required": [ "OrderNumber" ],
      "properties": {
        "OrderNumber": {
          "type": "integer",
          "example": 162512,
          "description": "Order number"
        },
        "CustomerNumber": {
          "type": "integer",
          "example": 622822,
          "description": "Customer number"
        },
        "PlacedBy": {
          "type": "string",
          "example": "John Doe",
          "description": "Order placed by"
        },
        "CustomerReference": {
          "type": "string",
          "example": "PO12345",
          "description": "Customer order reference"
        },
        "PaymentTermsCode": {
          "type": "string",
          "example": "30",
          "description": "Payment terms code"
        },
        "DateOrdered": {
          "type": "string",
          "format": "date-time",
          "example": "2018-03-01T00:00:00-08:00",
          "description": "Date ordered"
        },
        "DateCompleted": {
          "type": "string",
          "format": "date-time",
          "example": "2018-03-12T00:00:00-08:00",
          "description": "Date order completed"
        },
        "Noname001": {
          "type": "string",
          "example": "ABC",
          "description": "Spare space"
        }
      },
      "example": {
        "OrderNumber": 162512,
        "CustomerNumber": 622822,
        "PlacedBy": "John Doe",
        "CustomerReference": "PO12345",
        "PaymentTermsCode": "30",
        "DateOrdered": "2018-03-01T00:00:00-08:00",
        "DateCompleted": "2018-03-12T00:00:00-08:00",
        "Noname001": "ABC"
      }
    },
    "OrderItem": {
      "required": [ "OrderNumber", "ItemNumber" ],
      "properties": {
        "OrderNumber": {
          "type": "integer",
          "example": 5238,
          "description": "Order number"
        },
        "ItemNumber": {
          "type": "integer",
          "example": 1,
          "description": "Line item number"
        },
        "ItemOrdered": {
          "type": "integer",
          "example": 21,
          "description": "Item ordered"
        },
        "QuantityOrdered": {
          "type": "integer",
          "example": 3,
          "description": "Quantity ordered"
        },
        "UnitPrice": {
          "type": "number",
          "format": "float",
          "example": 15.99,
          "description": "Unit price"
        },
        "DateShipped": {
          "type": "string",
          "format": "date-time",
          "example": "2018-03-17T00:00:00-08:00",
          "description": "Date shipped"
        },
        "InvoiceNumber": {
          "type": "integer",
          "example": 166825,
          "description": "Invoice number"
        }
      },
      "example": {
        "OrderNumber": 5238,
        "ItemNumber": 1,
        "ItemOrdered": 21,
        "QuantityOrdered": 3,
        "UnitPrice": 15.99,
        "DateShipped": "2018-03-17T00:00:00-08:00",
        "InvoiceNumber": 166825
      }
    },
    "Vendor": {
      "required": [ "VendorNumber" ],
      "properties": {
        "VendorNumber": {
          "type": "integer",
          "example": 39,
          "description": "Vendor number"
        },
        "RecordType": {
          "type": "integer",
          "example": 1,
          "description": "Record type (1)"
        },
        "Name": {
          "type": "string",
          "example": "Gardens R Us",
          "description": "Vendor name"
        },
        "Street": {
          "type": "string",
          "example": "97 Main St",
          "description": "Street address"
        },
        "City": {
          "type": "string",
          "example": "Concord",
          "description": "City"
        },
        "State": {
          "type": "string",
          "example": "NH",
          "description": "State"
        },
        "ZipCode": {
          "type": "integer",
          "example": 03214,
          "description": "Zip Code"
        },
        "Contact": {
          "type": "string",
          "example": "Jeremiah Johnson",
          "description": "Contact name"
        },
        "Phone": {
          "type": "string",
          "example": "(555) 627-2663",
          "description": "Phone number"
        },
        "Fax": {
          "type": "string",
          "example": "(555) 627-6382",
          "description": "Fax number"
        },
        "PaymentTermsCode": {
          "type": "string",
          "example": "60",
          "description": "Payment terms code"
        }
      },
      "example": {
        "VendorNumber": 39,
        "RecordType": 1,
        "Name": "Gardens R Us",
        "Street": "97 Main St",
        "City": "Concord",
        "State": "NH",
        "ZipCode": 03214,
        "Contact": "Jeremiah Johnson",
        "Phone": "(555) 627-2663",
        "Fax": "(555) 627-6382",
        "PaymentTermsCode": "60"
      }
    },
    "PatchRequest": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PatchDocument"
      }
    },
    "PatchDocument": {
      "description": "A JSONPatch document as defined by RFC 6902",
      "required": [
        "op",
        "path"
      ],
      "properties": {
        "op": {
          "type": "string",
          "description": "The operation to be performed",
          "enum": [
            "add",
            "remove",
            "replace",
            "move",
            "copy",
            "test"
          ]
        },
        "path": {
          "type": "string",
          "description": "A JSON-Pointer"
        },
        "value": {
          "type": "object",
          "description": "The value to be used within the operations."
        },
        "from": {
          "type": "string",
          "description": "A string containing a JSON Pointer value."
        }
      }
    }
  }
}