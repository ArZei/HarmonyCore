;;*****************************************************************************
;;
;; Title:       PlantMetaData.dbl
;;
;; Type:        Class
;;
;; Description: Defines meta data associated with a data object Plant.
;;
;;*****************************************************************************
;; WARNING
;;
;; This file was code generated. Avoid editing this file, as any changes that
;; you make will be lost of the file is re-generated.
;;
;;*****************************************************************************
;;
;; Copyright (c) 2012, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import System
import System.Collections.Generic
import System.Text
import Harmony.Core
import Harmony.Core.Converters

namespace SampleServices.Models

	;;; <summary>
	;;; 
	;;; </summary>
	public partial class PlantMetadata extends DataObjectMetadataBase
		
		;;; <summary>
		;;; Constructs an new PlantMetadata object.
		;;; </summary>
		public method PlantMetadata
		proc
			RPSStructureName = "PLANTS"
			RPSStructureSize = ^size(strPlant)
			AddFieldInfo("InItemid", "DECIMAL", 6, 1, 0, false)
			AddFieldInfo("InSource", "DECIMAL", 6, 7, 0, false)
			AddFieldInfo("InSize", "DECIMAL", 3, 13, 0, false)
			AddFieldInfo("InName", "ALPHA", 30, 16, 0, false)
			AddFieldInfo("InLatin", "ALPHA", 30, 46, 0, false)
			AddFieldInfo("InZone", "DECIMAL", 1, 76, 0, false)
			AddFieldInfo("InType", "DECIMAL", 1, 77, 0, false)
			AddFieldInfo("InFlower", "ALPHA", 1, 78, 0, false)
			AddFieldInfo("InColor", "ALPHA", 6, 79, 0, false)
			AddFieldInfo("InShape", "ALPHA", 10, 85, 0, false)
			AddFieldInfo("InMaxhigh", "DECIMAL", 3, 95, 0, false)
			AddFieldInfo("InMaxwide", "DECIMAL", 3, 98, 0, false)
			AddFieldInfo("InWater", "ALPHA", 4, 101, 0, false)
			AddFieldInfo("InSun", "ALPHA", 6, 105, 0, false)
			AddFieldInfo("InLocation", "ALPHA", 3, 111, 0, false)
			AddFieldInfo("InOnhand", "DECIMAL", 6, 114, 0, false)
			AddFieldInfo("InAllocated", "DECIMAL", 6, 120, 0, false)
			AddFieldInfo("InOnorder", "DECIMAL", 6, 126, 0, false)
			AddFieldInfo("InMinimum", "DECIMAL", 6, 132, 0, false)
			AddFieldInfo("InPrice", "IMPLIED", 7, 138, 02, false)
			AddFieldInfo("InCost", "IMPLIED", 7, 145, 02, false)
		endmethod
	
		;;; <summary>
		;;; Returns a new Plant object containing data from a record and a GRFA.
		;;; The related data properties (REL_Vendor,REL_Orders) will not be populated.
		;;; </summary>
		;;; <param name="dataArea">The record containing the data for the new Plant object.</param>
		;;; <param name="grfa">The GRFA associated with the current state of the data.</param>
		;;; <returns></returns>
		public override method MakeNew, @DataObjectBase
			required in dataArea, a
			required in grfa, a
		proc
			mreturn new Plant((strPlant)dataArea) { GlobalRFA = grfa }
		endmethod

		;;; <summary>
		;;; Returns a new Plant object containing data from a record and a GRFA.
		;;; The related data properties (REL_Vendor,REL_Orders) will be populated.
		;;; </summary>
		;;; <param name="dataArea">The record containing the data for the new Plant object.</param>
		;;; <param name="grfa">The GRFA associated with the current state of the data.</param>
		;;; <param name="joinedObjects">Data to allow the related data properties (REL_Vendor,REL_Orders) to be populated.</param>
		;;; <returns></returns>
		public override method MakeNew, @DataObjectBase
			required in dataArea, a
			required in grfa, a
			required in joinedObjects, [#]KeyValuePair<String, Object>
		proc
			data newPlant = new Plant((strPlant)dataArea) { GlobalRFA = grfa }
			data joinedObject, KeyValuePair<String, Object>
			foreach joinedObject in joinedObjects
			begin
				using joinedObject.Key select
				("REL_Vendor"), 
					newPlant.REL_Vendor = (@Vendor)joinedObject.Value
				("REL_Orders"), 
					newPlant.REL_Orders = (@ICollection<Order>)joinedObject.Value
				endusing
			end

			mreturn newPlant

		endmethod

	endclass

endnamespace

