;;****************************************************************************
;; WARNING: This code was generated by CodeGen. Any changes that you
;;          make to this code will be overwritten if the code is regenerated!
;;
;; Template author: Richard C. Morris, Synergex Professional Services Group
;;
;; Template Name:   Symphony Framework : DATAOBJECT.tpl
;;
;;***************************************************************************

import System
import System.Collections.Generic
import System.ComponentModel.DataAnnotations
import System.Text
import Harmony.Core
import Harmony.Core.Converters

namespace SampleServices.Models

	.include "CUSTOMERS" repository  , structure="strCustomer", end

    public partial class Customer extends DataObjectBase

        ;;make the record available and a copy
        private mSynergyData, strCustomer 
		private mOriginalSynergyData, strCustomer 
		
		private static sMetadata, @CustomerMetadata

		static method Customer
		proc
			sMetadata = new CustomerMetadata()
			DataObjectMetadataBase.MetadataLookup.TryAdd(^typeof(Customer), sMetadata)
		endmethod
		
        ;;; <summary>
        ;;;  Constructor, initialise the base fields
        ;;; </summary>
        public method Customer
            parent()
        proc
			init mSynergyData, mOriginalSynergyData
        endmethod

		;;; <summary>
		;;;  Alternate Constructor, accepts the structured data
		;;; </summary>
		public method Customer
			required in inData, strCustomer
			parent()
		proc
			mSynergyData = mOriginalSynergyData = inData
		endmethod

		public override method InternalSynergyRecord, void
			targetMethod, @AlphaAction
		proc
			targetMethod(mSynergyData, mGlobalRFA)
		endmethod
		
        ;;Expose fields as properties for data binding

		{Key}
        ;;Cust_key
		public property Cust_key, int
			method get
			proc
				mreturn (int)mSynergyData.Cust_key
            endmethod
			method set
			proc
				mSynergyData.Cust_key = value
			endmethod
		endproperty
        ;;Cust_rtype
		public property Cust_rtype, int
			method get
			proc
				mreturn (int)mSynergyData.Cust_rtype
            endmethod
			method set
			proc
				mSynergyData.Cust_rtype = value
			endmethod
		endproperty
        ;;Cust_name
		public property Cust_name, string
			method get
			proc
				mreturn (string)SynergyAlphaConverter.Convert(mSynergyData.Cust_name, ^null, ^null, ^null)
            endmethod
			method set
			proc
				mSynergyData.Cust_name = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
			endmethod
		endproperty
        ;;Cust_street
		public property Cust_street, string
			method get
			proc
				mreturn (string)SynergyAlphaConverter.Convert(mSynergyData.Cust_street, ^null, ^null, ^null)
            endmethod
			method set
			proc
				mSynergyData.Cust_street = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
			endmethod
		endproperty
        ;;Cust_city
		public property Cust_city, string
			method get
			proc
				mreturn (string)SynergyAlphaConverter.Convert(mSynergyData.Cust_city, ^null, ^null, ^null)
            endmethod
			method set
			proc
				mSynergyData.Cust_city = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
			endmethod
		endproperty
        ;;Cust_state
		public property Cust_state, string
			method get
			proc
				mreturn (string)SynergyAlphaConverter.Convert(mSynergyData.Cust_state, ^null, ^null, ^null)
            endmethod
			method set
			proc
				mSynergyData.Cust_state = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
			endmethod
		endproperty
        ;;Cust_zip
		public property Cust_zip, int
			method get
			proc
				mreturn (int)mSynergyData.Cust_zip
            endmethod
			method set
			proc
				mSynergyData.Cust_zip = value
			endmethod
		endproperty
        ;;Cust_contact
		public property Cust_contact, string
			method get
			proc
				mreturn (string)SynergyAlphaConverter.Convert(mSynergyData.Cust_contact, ^null, ^null, ^null)
            endmethod
			method set
			proc
				mSynergyData.Cust_contact = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
			endmethod
		endproperty
        ;;Cust_phone
		public property Cust_phone, long
			method get
			proc
				mreturn (long)mSynergyData.Cust_phone
            endmethod
			method set
			proc
				mSynergyData.Cust_phone = value
			endmethod
		endproperty
        ;;Cust_fax
		public property Cust_fax, long
			method get
			proc
				mreturn (long)mSynergyData.Cust_fax
            endmethod
			method set
			proc
				mSynergyData.Cust_fax = value
			endmethod
		endproperty
        ;;Cust_gift
		public property Cust_gift, int
			method get
			proc
				mreturn (int)mSynergyData.Cust_gift
            endmethod
			method set
			proc
				mSynergyData.Cust_gift = value
			endmethod
		endproperty
        ;;Cust_tcode
		public property Cust_tcode, string
			method get
			proc
				mreturn (string)SynergyAlphaConverter.Convert(mSynergyData.Cust_tcode, ^null, ^null, ^null)
            endmethod
			method set
			proc
				mSynergyData.Cust_tcode = (A)SynergyAlphaConverter.ConvertBack(value, ^null, ^null, ^null)
			endmethod
		endproperty
        ;;Cust_taxno
		public property Cust_taxno, int
			method get
			proc
				mreturn (int)mSynergyData.Cust_taxno
            endmethod
			method set
			proc
				mSynergyData.Cust_taxno = value
			endmethod
		endproperty
        ;;Cust_limit
		public property Cust_limit, decimal
			method get
			proc
				mreturn (decimal)SynergyImpliedDecimalConverter.Convert(mSynergyData.Cust_limit, ^null, "DECIMALPLACES#2", ^null)
            endmethod
			method set
			proc
				mSynergyData.Cust_limit = value
			endmethod
		endproperty

        ;;; <summary>
        ;;; Expose the complete synergy record
        ;;; </summary>
		public override property SynergyRecord, a
            method get
            proc
                mreturn mSynergyData
            endmethod
        endproperty
		
		;;; <summary>
        ;;; Expose the complete original synergy record
        ;;; </summary>
		public override property OriginalSynergyRecord, a
            method get
            proc
                mreturn mOriginalSynergyData
            endmethod
        endproperty

		;;; <summary>
		;;; Allow the host to validate all fields. Each field will fire the validation method.
		;;; </summary>
		public override method InitialValidateData, void
		proc
		endmethod
		
		public override property Metadata, @DataObjectMetadataBase
			method get
			proc
				mreturn sMetadata
			endmethod
		endproperty

		public override method InternalGetValues, [#]@object
		proc
			;;TODO: This should be returning boxed values for each of our fields
			mreturn new Object[0]
		endmethod

	endclass
	
endnamespace

