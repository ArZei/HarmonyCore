;;*****************************************************************************
;;
;; Title:       EdmBuilder.dbl
;;
;; Type:        Class
;;
;; Description: OData DbContext class
;;
;;*****************************************************************************
;; WARNING
;;
;; This file was code generated. Avoid editing this file, as any changes that
;; you make will be lost of the file is re-generated.
;;
;;*****************************************************************************
;;
;; Copyright (c) 2018, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import Harmony.Core
import Harmony.Core.Context
import Microsoft.EntityFrameworkCore
import Microsoft.OData.Edm
import Microsoft.AspNet.OData.Builder
import SampleServices.Models
import System.Collections.Generic

namespace SampleServices

	;;; <summary>
	;;; Builds an entity framework entity data model.
	;;; </summary>
	public class EdmBuilder

		private static mEdmModel, @EdmModel

		;;; <summary>
		;;; Gets the entity data model.
		;;; </summary>
		public static method GetEdmModel, @IEdmModel
			serviceProvider, @IServiceProvider
		proc
			if(mEdmModel == ^null)
			begin
				data builder = new ODataConventionModelBuilder(serviceProvider)
				builder.EntitySet<Customer>("Customers")
				builder.EntitySet<Order>("Orders")
				builder.EntitySet<Plant>("Plants")
				builder.EntitySet<Vendor>("Vendors")
				data tempModel = (@EdmModel)builder.GetEdmModel()
				data plantType = (@EdmEntityType)tempModel.FindDeclaredType("SampleServices.Models.Plant")
				data vendorType = (@EdmEntityType)tempModel.FindDeclaredType("SampleServices.Models.Vendor")
				data customerType = (@EdmEntityType)tempModel.FindDeclaredType("SampleServices.Models.Customer")
				data inSourceProperty = plantType.FindProperty("InSource")

				data vendRtypeProperty = vendorType.FindProperty("VendRtype")
				data vendKeyProperty = vendorType.FindProperty("VendKey")

				data custRtypeProperty = customerType.FindProperty("CustRtype")
				data custKeyProperty = customerType.FindProperty("CustKey")

				tempModel.AddAlternateKeyAnnotation(plantType, new Dictionary<string, IEdmProperty>() { {"InSource", inSourceProperty} })
				tempModel.AddAlternateKeyAnnotation(vendorType, new Dictionary<string, IEdmProperty>() { {"VendRtype", vendRtypeProperty}, {"VendKey", vendKeyProperty} })
				tempModel.AddAlternateKeyAnnotation(customerType, new Dictionary<string, IEdmProperty>() { {"CustRtype", custRtypeProperty}, {"CustKey", custKeyProperty} })
				mEdmModel = tempModel
				mreturn mEdmModel
			end

			mreturn mEdmModel

		endmethod

	endclass

endnamespace