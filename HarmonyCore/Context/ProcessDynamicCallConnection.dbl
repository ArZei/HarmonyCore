import System
import System.Collections.Generic
import System.Text
import System.Diagnostics


namespace Harmony.Core.Context

	public class ProcessDynamicCallConnection implements IDynamicCallConnection
		private targetProcess, @Process

		public method ProcessDynamicCallConnection
			startInfo, @ProcessStartInfo
		proc
			targetProcess.StartInfo = startInfo
			
		endmethod

		public virtual method ReadRaw, @string
			terminator, Char 
			endparams
		proc
			if(terminator != 13)
				throw new NotImplementedException("the only acceptable terminator for this connection type is newline")

			mreturn targetProcess.StandardOutput.ReadLine()
		endmethod
		
		public virtual method Recycle, void
			endparams
		proc
			
		endmethod
				
		public virtual method Disconnect, void
			endparams
		proc
			targetProcess.Kill()
		endmethod
		
		public virtual method Connect, void
			endparams
		proc
			targetProcess.Start()
		endmethod
		
		public virtual method WriteRaw, void
			rawData, [#]byte
			endparams
		proc
			targetProcess.StandardInput.Write(rawData)
		endmethod
	
	endclass

endnamespace
