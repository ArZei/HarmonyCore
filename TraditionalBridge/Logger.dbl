import System.Collections

namespace TraditionalBridge

    public class Logger
        public static Instance, @Logger
        public static LogLevel, int

        private mLogScopes, @ArrayList
        private mLoggingChannel, int
        private mKeepLogScopes, boolean
        public method Logger
            logFileName, a
            logLevel, n
            keepLogScopes, boolean
        proc
            mLogScopes = new ArrayList()
            mKeepLogScopes = mKeepLogScopes
            Logger.LogLevel = 0
			;if(logLevel >= 0)
			;begin
				open(mLoggingChannel=0, O, logFileName)
				Log("Logging started")
			;end

        endmethod

        public method LogHnd, void
            handleValue, D_HANDLE
        proc
            if(mLoggingChannel)
                writes(mLoggingChannel, ^m(handleValue))
        endmethod

        public method Log, void
            strValue, @string
        proc
			if(mLoggingChannel)
			begin
				flush(mLoggingChannel)
				writes(mLoggingChannel, strValue)
			end

        endmethod

        public method Log, void
            aValue, a
        proc
            if(mLoggingChannel)
			begin
				flush(mLoggingChannel)
				writes(mLoggingChannel, aValue)
			end
        endmethod

        public method OpenScope, void
            identifier, @string
        proc
        endmethod

        public method CloseScope, void
        proc
        endmethod

        public method CloseLog, void
        proc
            if(mLoggingChannel)
                close(mLoggingChannel)
            mLoggingChannel = 0
        endmethod

        public method CurrentScopeLog, @string
        proc
            mreturn ""
        endmethod
    endclass

endnamespace