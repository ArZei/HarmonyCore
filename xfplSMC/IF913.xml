<?xml version='1.0'?>
<!--Generated by genxml v11.0.1 on 29-MAR-2019 16:52:01-->
<component name="IF913" repository="C:\trunk\test\xfpl\dat" smc="C:\trunk\test\xfpl\dat" smcrev="5">
  <structure name="Booleanstr" size="77">
    <field name="Al10" type="alpha" size="10"/>
    <field name="Typebool1" coerce="boolean" type="integer" size="4"/>
    <field name="Int1ctbool" coerce="boolean" type="integer" size="1"/>
    <field name="Int2ctbool" coerce="boolean" type="integer" size="2"/>
    <field name="Int4ctbool" coerce="boolean" type="integer" size="4"/>
    <field name="Int8ctbool" coerce="boolean" type="integer" size="8"/>
    <field name="Dec3ctbool" coerce="boolean" type="decimal" size="3"/>
    <field name="Dec6ctbool" coerce="boolean" type="decimal" size="6"/>
    <field name="Dec9ctbool" coerce="boolean" type="decimal" size="9"/>
    <field name="Dec13ctbool" coerce="boolean" type="decimal" size="13"/>
    <field name="Dec17ctbool" coerce="boolean" type="decimal" size="17"/>
  </structure>
  <structure name="Coercestructure" size="106">
    <field name="Decint" type="decimal" size="6"/>
    <field name="Decbool" coerce="boolean" type="decimal" size="1"/>
    <field name="Decbyte" coerce="byte" type="decimal" size="1"/>
    <field name="Decshort" coerce="short" type="decimal" size="2"/>
    <field name="Declong" coerce="long" type="decimal" size="10"/>
    <field name="Decsbyte" coerce="sbyte" type="decimal" size="1"/>
    <field name="Decuint" coerce="uint" type="decimal" size="5"/>
    <field name="Decushort" coerce="short" type="decimal" size="2"/>
    <field name="Deculong" coerce="long" type="decimal" size="10"/>
    <field name="Decdatetime" coerce="datetime" type="date" format="YYYYMMDD" size="8"/>
    <field name="Nulldatetime" nullable="true" coerce="datetime" type="date" format="YYYYMMDD" size="8"/>
    <field name="Iddecimal" type="decimal" size="7" precision="2"/>
    <field name="Iddouble" coerce="double" type="decimal" size="7" precision="2"/>
    <field name="Idfloat" coerce="float" type="decimal" size="7" precision="2"/>
    <field name="Intint" type="integer" size="4"/>
    <field name="Intbool" coerce="boolean" type="integer" size="1"/>
    <field name="Intbyte" coerce="byte" type="integer" size="1"/>
    <field name="Intshort" coerce="short" type="integer" size="2"/>
    <field name="Intlong" coerce="long" type="integer" size="8"/>
    <field name="Intsbyte" coerce="sbyte" type="integer" size="1"/>
    <field name="Intuint" coerce="uint" type="integer" size="4"/>
    <field name="Intushort" coerce="short" type="integer" size="2"/>
    <field name="Intulong" coerce="long" type="integer" size="8"/>
  </structure>
  <structure name="Datatablestr" datatable="true" size="44">
    <field name="Accountnumber" type="decimal" size="6" heading="AcctNo">
      <comment>
        <line1>Account number</line1>
      </comment>
    </field>
    <field name="Name" type="alpha" size="25" heading="Name">
      <comment>
        <line1>name</line1>
      </comment>
    </field>
    <field name="Amount" type="decimal" size="8" precision="2" heading="Amounta"/>
    <field name="Qty" type="decimal" size="5" heading="QtyR"/>
  </structure>
  <structure name="Dateteblestr2" datatable="true" size="46">
    <field name="Alphafld1" type="alpha" size="10"/>
    <field name="Dec4fld" type="decimal" size="4"/>
    <group name="Groupfld" size="25" datatable="true">
      <field name="Gpalpha" type="alpha" size="20"/>
      <field name="Gpdec" type="decimal" size="5"/>
    </group>
    <field name="Idfiled" type="decimal" size="7" precision="2"/>
  </structure>
  <structure name="Nulldtary" size="108">
    <field name="Ndts_dt8" nullable="true" coerce="datetime" type="date" format="YYYYMMDD" size="8" dim="3">
      <comment>
        <line1>Date 8 YYYYMMDD</line1>
      </comment>
    </field>
    <field name="Ndts_dt6" nullable="true" coerce="datetime" type="date" format="YYMMDD" size="6" dim="3">
      <comment>
        <line1>Date 6 YYMMDD</line1>
      </comment>
    </field>
    <field name="Ndts_dt7" nullable="true" coerce="datetime" type="date" format="YYYYJJJ" size="7" dim="3">
      <comment>
        <line1>Date 7 YYYYJJJ</line1>
      </comment>
    </field>
    <field name="Ndts_dt5" nullable="true" coerce="datetime" type="date" format="YYJJJ" size="5" dim="3">
      <comment>
        <line1>Date 5 YYJJJ</line1>
      </comment>
    </field>
    <field name="Ndts_tm6" nullable="true" coerce="datetime" type="time" format="HHMMSS" size="6" dim="3">
      <comment>
        <line1>Time 6 HHMMSS</line1>
      </comment>
    </field>
    <field name="Ndts_tm4" nullable="true" coerce="datetime" type="time" format="HHMM" size="4" dim="3">
      <comment>
        <line1>Time 4 HHMM</line1>
      </comment>
    </field>
  </structure>
  <structure name="Nulldtstr" size="34">
    <field name="Ndt_alpha" type="alpha" size="10"/>
    <field name="Ndt_date8" nullable="true" coerce="datetime" type="date" format="YYYYMMDD" size="8"/>
    <field name="Ndt_date6" nullable="true" coerce="datetime" type="date" format="YYMMDD" size="6"/>
    <field name="Ndt_time6" nullable="true" coerce="datetime" type="time" format="HHMMSS" size="6"/>
    <field name="Ndt_time4" nullable="true" coerce="datetime" type="time" format="HHMM" size="4"/>
  </structure>
  <structure name="Strtest1" size="46">
    <field name="Str1_de6" type="decimal" size="6">
      <comment>
        <line1>str test 1 ID field</line1>
      </comment>
    </field>
    <field name="Str1_al10" type="alpha" size="10">
      <comment>
        <line1>str t test name</line1>
      </comment>
    </field>
    <field name="Str1_id62" type="decimal" size="6" precision="2">
      <comment>
        <line1>str 1 test ImpDec 6.2</line1>
      </comment>
    </field>
    <field name="Str1_in4" type="integer" size="4">
      <comment>
        <line1>str test 1 interger 4</line1>
      </comment>
    </field>
    <field name="Str1_al20" type="alpha" size="20">
      <comment>
        <line1>Str test 1 Alpha 20</line1>
      </comment>
    </field>
  </structure>
  <structure name="Strtest12" datatable="true" size="56">
    <field name="Str12_al10" type="alpha" size="10">
      <comment>
        <line1>Alpha of 10</line1>
      </comment>
    </field>
    <group name="Str12_strary" size="13" dim="3" datatable="true">
      <field name="Str12_gp1de5" type="decimal" size="5"/>
      <field name="Str12_gp1al8" type="alpha" size="8"/>
    </group>
    <field name="Str12_de7" type="decimal" size="7"/>
  </structure>
  <structure name="Strtest14" datatable="true" size="112">
    <group name="Reckey" size="10" datatable="true">
      <field name="Company_code" type="decimal" size="3">
        <comment>
          <line1>The company code</line1>
        </comment>
      </field>
      <field name="Prod_id" type="decimal" size="7">
        <comment>
          <line1>Product ID number</line1>
        </comment>
      </field>
    </group>
    <field name="Prod_name" type="alpha" size="30"/>
    <field name="Cost" type="decimal" size="8" precision="2">
      <comment>
        <line1>Item cost</line1>
      </comment>
    </field>
    <group name="Loc_grp" size="14" datatable="true">
      <field name="Whrs" type="decimal" size="2">
        <comment>
          <line1>warerhouse number</line1>
        </comment>
      </field>
      <group name="Ilegrp" size="6" datatable="true">
        <field name="Row" type="decimal" size="3">
          <comment>
            <line1>row it&apos;s on</line1>
          </comment>
        </field>
        <field name="Shelf" type="decimal" size="3">
          <comment>
            <line1>shelf level</line1>
          </comment>
        </field>
      </group>
      <field name="Count" type="decimal" size="6"/>
    </group>
    <field name="Comment" type="alpha" size="50">
      <comment>
        <line1>comments</line1>
      </comment>
    </field>
  </structure>
  <structure name="Structuretest" size="41">
    <field name="Parm1" type="alpha" size="25"/>
    <field name="Parm2" type="decimal" size="8"/>
    <field name="Parm3" type="decimal" size="8" precision="3"/>
  </structure>
  <interface name="IF913">
    <method name="ALofAlphaOut" id="ALofAlphaOut" routine="ALofAlphaOut" elb="TEST:if913">
      <comment>
        <line1>AL out of alpha</line1>
      </comment>
      <param name="AryLstAlpha" type="alpha" size="25" dir="out" collection="System.ArrayList">
        <comment>
          <line1>AL of out alpha size 25</line1>
        </comment>
      </param>
    </method>
    <method name="ALofAlphas" id="ALofAlphas" routine="ALofAlphas" elb="TEST:if913">
      <comment>
        <line1>An ArrayList of Alphas</line1>
      </comment>
      <param name="AlphaArrayList" type="alpha" size="25" collection="System.ArrayList">
        <comment>
          <line1>An ArrayList of a25 alphas</line1>
        </comment>
      </param>
    </method>
    <method name="ALofDecimal" id="ALofDecimal" routine="ALofDecimal" elb="TEST:if913">
      <comment>
        <line1>ArrayList of decimal</line1>
      </comment>
      <param name="DecimalArrayList" type="decimal" size="10" collection="System.ArrayList">
        <comment>
          <line1>An ArrayList of d10 decimals</line1>
        </comment>
      </param>
    </method>
    <method name="ALofDecimalOut" id="ALofDecimalOut" routine="ALofDecimalOut" elb="TEST:if913">
      <comment>
        <line1>An AryLst of dec 10 out</line1>
      </comment>
      <param name="DecALOut" type="decimal" size="7" dir="out" collection="System.ArrayList">
        <comment>
          <line1>AryLst of dec size 7 out</line1>
        </comment>
      </param>
    </method>
    <method name="ALofImpDec" id="ALofImpDec" routine="ALofImpDec" elb="TEST:if913">
      <comment>
        <line1>ArrayList of ID</line1>
      </comment>
      <param name="IDArrayList" type="decimal" size="7" precision="2" collection="System.ArrayList">
        <comment>
          <line1>An arraylist of ID 7.2</line1>
        </comment>
      </param>
    </method>
    <method name="ALofImpDecOut" id="ALofImpDecOut" routine="ALofImpDecOut" elb="TEST:if913">
      <comment>
        <line1>an arylist of id 7.2 out</line1>
      </comment>
      <param name="IDALout" type="decimal" size="7" precision="2" dir="out" collection="System.ArrayList">
        <comment>
          <line1>arylst of id 7.2 out</line1>
        </comment>
      </param>
    </method>
    <method name="ALofInt" id="ALofInt" routine="ALofInt" elb="TEST:if913">
      <comment>
        <line1>An arraylist of integers</line1>
      </comment>
      <param name="IntArrayList" type="integer" size="4" collection="System.ArrayList">
        <comment>
          <line1>An arraylist of i4</line1>
        </comment>
      </param>
    </method>
    <method name="ALofIntOut" id="ALofIntOut" routine="ALofIntOut" elb="TEST:if913">
      <comment>
        <line1>arylst of i4 out</line1>
      </comment>
      <param name="IntALOut" type="integer" size="4" dir="out" collection="System.ArrayList">
        <comment>
          <line1>arylst of i4 out</line1>
        </comment>
      </param>
    </method>
    <method name="ALofStr" id="ALofStr" routine="ALofStr" elb="TEST:if913">
      <comment>
        <line1>An arraylist of structures</line1>
      </comment>
      <param name="STRUCTURETEST" type="structure" structureName="Structuretest" collection="System.ArrayList" size="41">
        <comment>
          <line1>An arraylist of structuretest of size 41</line1>
        </comment>
      </param>
    </method>
    <method name="ALofStrOut" id="ALofStrOut" routine="ALofStrOut" elb="TEST:if913">
      <comment>
        <line1>an arylst of Str out</line1>
      </comment>
      <param name="STRUCTURETEST" type="structure" structureName="Structuretest" dir="out" collection="System.ArrayList" size="41">
        <comment>
          <line1>Str arylist of out</line1>
        </comment>
      </param>
    </method>
    <method name="ALofString" id="ALofString" routine="ALofString" elb="TEST:if913">
      <comment>
        <line1>An arraylist of strings</line1>
      </comment>
      <param name="StringArrayList" type="string" size="0" collection="System.ArrayList">
        <comment>
          <line1>An arraylist of strings</line1>
        </comment>
      </param>
    </method>
    <method name="ALofStringOut" id="ALofStringOut" routine="ALofStringOut" elb="TEST:if913">
      <comment>
        <line1>arylst of string out</line1>
      </comment>
      <param name="StringALOut" type="string" size="0" dir="out" collection="System.ArrayList">
        <comment>
          <line1>arylst string out</line1>
        </comment>
      </param>
    </method>
    <method name="ALofStruct1" id="ALofStruct1" routine="ALofStruct1" elb="TEST:if913">
      <param name="STRTEST1" type="structure" structureName="Strtest1" collection="System.ArrayList" size="46"/>
    </method>
    <method name="ALofStruct1out" id="ALofStruct1out" routine="AlofStruct1out" elb="TEST:if913">
      <param name="STRTEST1" type="structure" structureName="Strtest1" dir="out" collection="System.ArrayList" size="46"/>
    </method>
    <method name="AlofDateTime" id="AlofDateTime" routine="AlofDateTime" elb="TEST:if913">
      <comment>
        <line1>An input only method of ArrayList of datetime</line1>
      </comment>
      <param name="DateTimeIn" type="decimal" coerce="datetime" format="YYYYMMDD" size="8" collection="System.ArrayList">
        <comment>
          <line1>ArrayList of Decimal to DateTime YYYYMMDD</line1>
        </comment>
      </param>
    </method>
    <method name="AlofDateTimeOut" id="AlofDateTimeOut" routine="AlofDateTimeOut" elb="TEST:if913">
      <comment>
        <line1>Arraylist of dec to DateTime out</line1>
      </comment>
      <param name="DateTimeOut" type="decimal" coerce="datetime" format="YYYYMMDD" size="8" dir="out" collection="System.ArrayList">
        <comment>
          <line1>Arraylist of Dat4eTime YYYYMMDD to dec</line1>
        </comment>
      </param>
    </method>
    <method name="AlofDecLong" id="AlofDecLong" routine="AlofDeclong" elb="TEST:if913">
      <comment>
        <line1>ArrayList of dec - Long</line1>
      </comment>
      <param name="DecLong" type="decimal" coerce="long" size="18" collection="System.ArrayList">
        <comment>
          <line1>ArrayList of Dec 18 to Long</line1>
        </comment>
      </param>
    </method>
    <method name="AlofDecLongOut" id="AlofDecLongOut" routine="AlofDecLongOut" elb="TEST:if913">
      <comment>
        <line1>ArrayList of Dec to long</line1>
      </comment>
      <param name="DecLong" type="decimal" coerce="long" size="18" dir="out" collection="System.ArrayList">
        <comment>
          <line1>ArrayList of dec 18 to long</line1>
        </comment>
      </param>
    </method>
    <method name="AlofDecShort" id="AlofDecShort" routine="AlofDecShort" elb="TEST:if913">
      <comment>
        <line1>Arraylist of dec to short</line1>
      </comment>
      <param name="DecShort" type="decimal" coerce="short" size="4" collection="System.ArrayList">
        <comment>
          <line1>Arraylist of dec 4 to short</line1>
        </comment>
      </param>
    </method>
    <method name="AlofDecShortOut" id="AlofDecShortOut" routine="AlofDecShortOut" elb="TEST:if913">
      <comment>
        <line1>Arraylist of dec to Short</line1>
      </comment>
      <param name="DecShort" type="decimal" coerce="short" size="4" dir="out" collection="System.ArrayList">
        <comment>
          <line1>Arraylist of dec 4 to short out</line1>
        </comment>
      </param>
    </method>
    <method name="AlofIDDouble" id="AlofIDDouble" routine="AlofIDDouble" elb="TEST:if913">
      <comment>
        <line1>ArrayL:ist of ID to Double</line1>
      </comment>
      <param name="IDDouble" type="decimal" coerce="double" size="12" precision="2" collection="System.ArrayList">
        <comment>
          <line1>ArrayList of ID 12.2 to double</line1>
        </comment>
      </param>
    </method>
    <method name="AlofIDDoubleOut" id="AlofIDDoubleOut" routine="AlofIDDoubleOut" elb="TEST:if913">
      <comment>
        <line1>ArrayList of ID to double</line1>
      </comment>
      <param name="IDDouble" type="decimal" coerce="double" size="12" precision="2" dir="out" collection="System.ArrayList">
        <comment>
          <line1>ArrayList of ID 12.2 to double</line1>
        </comment>
      </param>
    </method>
    <method name="AlofIntBool" id="AlofIntBool" routine="AlofintBool" elb="TEST:if913">
      <comment>
        <line1>ArrayList of int - boolean</line1>
      </comment>
      <param name="BoolInt" type="integer" coerce="boolean" size="1" collection="System.ArrayList">
        <comment>
          <line1>ArrayList of int 1 as a boolean</line1>
        </comment>
      </param>
    </method>
    <method name="AlofIntBoolOut" id="AlofIntBoolOut" routine="AlofIntBoolOut" elb="TEST:if913">
      <comment>
        <line1>Arraylist of out int - bool</line1>
      </comment>
      <param name="BoolInt" type="integer" coerce="boolean" size="1" dir="out" collection="System.ArrayList">
        <comment>
          <line1>Arraylist of int 1 coerced to boolean</line1>
        </comment>
      </param>
    </method>
    <method name="BoolStruct1" id="BoolStruct1" routine="BoolStruct1" elb="TEST:if913">
      <param name="BOOLEANSTR" type="structure" structureName="Booleanstr" dir="inout"/>
    </method>
    <method name="BoolStruct2Al" id="BoolStruct2Al" routine="BoolStruct2Al" elb="TEST:if913">
      <param name="BOOLEANSTR" type="structure" structureName="Booleanstr" collection="System.ArrayList" size="77"/>
    </method>
    <method name="BoolStruct3Alout" id="BoolStruct3Alout" routine="BoolStruct3Alout" elb="TEST:if913">
      <param name="BOOLEANSTR" type="structure" structureName="Booleanstr" dir="out" collection="System.ArrayList" size="77"/>
    </method>
    <method name="BoolToBool" id="BoolToBool" routine="BoolToBool" elb="TEST:if913">
      <comment>
        <line1>True boolean test</line1>
      </comment>
      <methodresult type="integer" coerce="boolean" size="4"/>
      <param name="Favorite" type="integer" coerce="boolean" size="4" dir="inout"/>
    </method>
    <method name="CoercedStructure" id="CoercedStructure" routine="CoercedStructure" elb="TEST:if913">
      <comment>
        <line1>Coerced data types within a structure</line1>
      </comment>
      <param name="COERCESTRUCTURE" type="structure" structureName="Coercestructure" dir="inout">
        <comment>
          <line1>Coerced data types within a structure</line1>
        </comment>
      </param>
    </method>
    <method name="DTALStructureOut" id="DTALStructureOut" routine="DTALStructureOut" elb="TEST:if913">
      <comment>
        <line1>DataTable of ArrayList of structures out</line1>
      </comment>
      <param name="DATATABLESTR" type="structure" structureName="Datatablestr" dir="out" collection="System.ArrayList" size="44" datatable="true">
        <comment>
          <line1>ArrayList as a Datatable of structures out</line1>
        </comment>
      </param>
    </method>
    <method name="DTArrayGroupStrs" id="DTArrayGroupStrs" routine="DTArrayGroupStrs" elb="TEST:if913">
      <comment>
        <line1>DataTable of a str with and array of sub</line1>
        <line2>structures</line2>
      </comment>
      <param name="STRTEST12" type="structure" structureName="Strtest12" dir="out" collection="System.ArrayList" size="56" datatable="true"/>
    </method>
    <method name="DTALStructureIn" id="DTArrayListIn" routine="DTALStructureIn" elb="TEST:if913">
      <comment>
        <line1>DataTable as an ArrayList in parameter</line1>
      </comment>
      <param name="DATATABLESTR" type="structure" structureName="Datatablestr" collection="System.ArrayList" size="44" datatable="true"/>
    </method>
    <method name="DTCollection" id="DTCollection" routine="DTCollection" elb="TEST:if913">
      <comment>
        <line1>DataTabkle collection</line1>
      </comment>
      <param name="DATETEBLESTR2" type="structure" structureName="Dateteblestr2" dir="out" collection="ArrayList" size="46" datatable="true">
        <comment>
          <line1>DataTable of structuretest record as a collection</line1>
        </comment>
      </param>
    </method>
    <method name="DTGroupStructs" id="DTGroupStructs" routine="DTGroupStructs" elb="TEST:if913">
      <comment>
        <line1>A DataTable with groups of structures in structure</line1>
      </comment>
      <param name="STRTEST14" type="structure" structureName="Strtest14" dir="out" collection="System.ArrayList" size="112" datatable="true"/>
    </method>
    <method name="DateTime14" id="DateTime14" routine="DateTime14" elb="TEST:if913">
      <comment>
        <line1>Datetime yyyymmddhhmmss</line1>
      </comment>
      <methodresult type="decimal" coerce="datetime" format="YYYYMMDDHHMISS" size="14">
        <comment>
          <line1>return datetime yyyymmddhhmmss</line1>
        </comment>
      </methodresult>
      <param name="datetimeOf14" type="decimal" coerce="datetime" format="YYYYMMDDHHMISS" size="14" dir="inout">
        <comment>
          <line1>datetiem yyyymmddhhmmss</line1>
        </comment>
      </param>
    </method>
    <method name="Dateyyjjj" id="Dateyyjjj" routine="Dateyyjjj" elb="TEST:if913">
      <comment>
        <line1>Datetime yyjjj</line1>
      </comment>
      <methodresult type="decimal" coerce="datetime" format="YYJJJ" size="5">
        <comment>
          <line1>Dec to DateTime yyjjj</line1>
        </comment>
      </methodresult>
      <param name="Dateyyjjj" type="decimal" coerce="datetime" format="YYJJJ" size="5" dir="inout">
        <comment>
          <line1>datetime yyjjj</line1>
        </comment>
      </param>
    </method>
    <method name="Dateyymmdd" id="Dateyymmdd" routine="Dateyymmdd" elb="TEST:if913">
      <comment>
        <line1>Datetime yymmdd</line1>
      </comment>
      <methodresult type="decimal" coerce="datetime" format="YYMMDD" size="6">
        <comment>
          <line1>return datetime yymmdd</line1>
        </comment>
      </methodresult>
      <param name="Dateyymmdd" type="decimal" coerce="datetime" format="YYMMDD" size="6" dir="inout">
        <comment>
          <line1>datetime yymmdd</line1>
        </comment>
      </param>
    </method>
    <method name="Dateyyyyjjj" id="Dateyyyyjjj" routine="Dateyyyyjjj" elb="TEST:if913">
      <comment>
        <line1>Datetime yyyyjjj</line1>
      </comment>
      <methodresult type="decimal" coerce="datetime" format="YYYYJJJ" size="7">
        <comment>
          <line1>return datetim yyyyjjj</line1>
        </comment>
      </methodresult>
      <param name="Dateyyyyjjj" type="decimal" coerce="datetime" format="YYYYJJJ" size="7" dir="inout">
        <comment>
          <line1>Datetime yyyyjjj</line1>
        </comment>
      </param>
    </method>
    <method name="Dateyyyymmdd" id="Dateyyyymmdd" routine="Dateyyyymmdd" elb="TEST:if913">
      <comment>
        <line1>Datetime yyyymmdd</line1>
      </comment>
      <methodresult type="decimal" coerce="datetime" format="YYYYMMDD" size="8"/>
      <param name="DateTimeyyyymmdd" type="decimal" coerce="datetime" format="YYYYMMDD" size="8" dir="inout">
        <comment>
          <line1>Datetime yyyymmdd</line1>
        </comment>
      </param>
    </method>
    <method name="DecBool" id="DecBool" routine="DecBool" elb="TEST:if913">
      <comment>
        <line1>Coerce dec to boolean</line1>
      </comment>
      <methodresult type="decimal" coerce="boolean" size="1">
        <comment>
          <line1>Return coerce dec to boolean</line1>
        </comment>
      </methodresult>
      <param name="DecToBool" type="decimal" coerce="boolean" size="1" dir="inout">
        <comment>
          <line1>Coerce dec to boolean</line1>
        </comment>
      </param>
    </method>
    <method name="DecByte" id="DecByte" routine="DecByte" elb="TEST:if913">
      <comment>
        <line1>Coerce dec to byte</line1>
      </comment>
      <methodresult type="decimal" coerce="byte" size="1">
        <comment>
          <line1>Return coerce dec to byte</line1>
        </comment>
      </methodresult>
      <param name="DecToByte" type="decimal" coerce="byte" size="1" dir="inout">
        <comment>
          <line1>coerce dec to byte</line1>
        </comment>
      </param>
    </method>
    <method name="DecDec" id="DecDec" routine="DecDec" elb="TEST:if913">
      <comment>
        <line1>Coerce dec to dec</line1>
      </comment>
      <methodresult type="decimal" coerce="long" size="12">
        <comment>
          <line1>Return coerce decimal to decimal</line1>
        </comment>
      </methodresult>
      <param name="DecToDec" type="decimal" coerce="long" size="16" dir="inout">
        <comment>
          <line1>coerced dec to dec</line1>
        </comment>
      </param>
    </method>
    <method name="DecInt" id="DecInt" routine="DecInt" elb="TEST:if913">
      <comment>
        <line1>Coerce dec to int</line1>
      </comment>
      <methodresult type="decimal" coerce="int" size="4">
        <comment>
          <line1>return coerce dec to int</line1>
        </comment>
      </methodresult>
      <param name="DecToInt" type="decimal" coerce="int" size="4" dir="inout">
        <comment>
          <line1>coerce dec to int</line1>
        </comment>
      </param>
    </method>
    <method name="DecLong" id="DecLong" routine="DecLong" elb="TEST:if913">
      <comment>
        <line1>Coerce dec to long</line1>
      </comment>
      <methodresult type="decimal" coerce="long" size="18">
        <comment>
          <line1>return coerce dec to long</line1>
        </comment>
      </methodresult>
      <param name="DecToLong" type="decimal" coerce="long" size="18" dir="inout">
        <comment>
          <line1>coerce dec to long</line1>
        </comment>
      </param>
    </method>
    <method name="DecSbyte" id="DecSbyte" routine="DecSbyte" elb="TEST:if913">
      <comment>
        <line1>Coerce dec to sbyte</line1>
      </comment>
      <methodresult type="decimal" coerce="sbyte" size="1">
        <comment>
          <line1>return coerce dec to sbyte</line1>
        </comment>
      </methodresult>
      <param name="DecToSbyte" type="decimal" coerce="sbyte" size="1" dir="inout">
        <comment>
          <line1>coerce dec to sbyte</line1>
        </comment>
      </param>
    </method>
    <method name="DecShort" id="DecShort" routine="DecShort" elb="TEST:if913">
      <comment>
        <line1>Coerce dec to short</line1>
      </comment>
      <methodresult type="decimal" coerce="short" size="2">
        <comment>
          <line1>Return coerce dec to short</line1>
        </comment>
      </methodresult>
      <param name="DecToShort" type="decimal" coerce="short" size="2" dir="inout">
        <comment>
          <line1>coerce dec to short</line1>
        </comment>
      </param>
    </method>
    <method name="DecUint" id="DecUint" routine="DecUint" elb="TEST:if913">
      <comment>
        <line1>coerce dec to uint</line1>
      </comment>
      <methodresult type="decimal" coerce="uint" size="4">
        <comment>
          <line1>return coerce dec to uint</line1>
        </comment>
      </methodresult>
      <param name="DecToUint" type="decimal" coerce="uint" size="4" dir="inout">
        <comment>
          <line1>coerce dec to uint</line1>
        </comment>
      </param>
    </method>
    <method name="DecUlong" id="DecUlong" routine="DecUlong" elb="TEST:if913">
      <comment>
        <line1>coerce dec to ulong</line1>
      </comment>
      <methodresult type="decimal" coerce="ulong" size="18">
        <comment>
          <line1>return coerce dec to ulong</line1>
        </comment>
      </methodresult>
      <param name="DecToUlong" type="decimal" coerce="ulong" size="18" dir="inout">
        <comment>
          <line1>coerce dec to ulong</line1>
        </comment>
      </param>
    </method>
    <method name="DecUshort" id="DecUshort" routine="DecUshort" elb="TEST:if913">
      <comment>
        <line1>coerce dec to ushort</line1>
      </comment>
      <methodresult type="decimal" coerce="ushort" size="2">
        <comment>
          <line1>return coerce dec to ushort</line1>
        </comment>
      </methodresult>
      <param name="DecToUshort" type="decimal" coerce="ushort" size="2" dir="inout">
        <comment>
          <line1>coerce dec to ushort</line1>
        </comment>
      </param>
    </method>
    <method name="IDDecimal" id="IDDecimal" routine="IDDecimal" elb="TEST:if913">
      <comment>
        <line1>Coerce id to decimal</line1>
      </comment>
      <methodresult type="decimal" coerce="decimal" size="6" precision="2">
        <comment>
          <line1>Return coerce id to decimal</line1>
        </comment>
      </methodresult>
      <param name="IDtoDecimal" type="decimal" coerce="decimal" size="6" precision="2" dir="inout">
        <comment>
          <line1>Coerce id to decimal</line1>
        </comment>
      </param>
    </method>
    <method name="IDDouble" id="IDDouble" routine="IDDouble" elb="TEST:if913">
      <comment>
        <line1>Coerce id to double</line1>
      </comment>
      <methodresult type="decimal" coerce="double" size="6" precision="2">
        <comment>
          <line1>Return coerce id to double</line1>
        </comment>
      </methodresult>
      <param name="IDtoDouble" type="decimal" coerce="double" size="6" precision="2" dir="inout">
        <comment>
          <line1>Coerce id to double</line1>
        </comment>
      </param>
    </method>
    <method name="IDFloat" id="IDFloat" routine="IDFloat" elb="TEST:if913">
      <comment>
        <line1>Coerce id to float</line1>
      </comment>
      <methodresult type="decimal" coerce="float" size="6" precision="2">
        <comment>
          <line1>Return coerce id to float</line1>
        </comment>
      </methodresult>
      <param name="IDtoFloat" type="decimal" coerce="float" size="6" precision="2" dir="inout">
        <comment>
          <line1>coerce id to float</line1>
        </comment>
      </param>
    </method>
    <method name="IntBool" id="IntBool" routine="IntBool" elb="TEST:if913">
      <comment>
        <line1>Coerce int to boolean</line1>
      </comment>
      <methodresult type="integer" coerce="boolean" size="1">
        <comment>
          <line1>Return Int to Boolean</line1>
        </comment>
      </methodresult>
      <param name="IntToBool" type="integer" coerce="boolean" size="1" dir="inout">
        <comment>
          <line1>Coerce int to boolean</line1>
        </comment>
      </param>
    </method>
    <method name="IntByte" id="IntByte" routine="IntByte" elb="TEST:if913">
      <comment>
        <line1>Coerce int to byte</line1>
      </comment>
      <methodresult type="integer" coerce="byte" size="1">
        <comment>
          <line1>Return cierce int to byte</line1>
        </comment>
      </methodresult>
      <param name="IntToByte" type="integer" coerce="byte" size="1" dir="inout">
        <comment>
          <line1>Coerce Int to byte</line1>
        </comment>
      </param>
    </method>
    <method name="IntInt" id="IntInt" routine="IntInt" elb="TEST:if913">
      <comment>
        <line1>Coerce int tp int</line1>
      </comment>
      <methodresult type="integer" coerce="int" size="4">
        <comment>
          <line1>Return type coerce int to int</line1>
        </comment>
      </methodresult>
      <param name="IntToInt" type="integer" coerce="int" size="4" dir="inout">
        <comment>
          <line1>Coerce int to int</line1>
        </comment>
      </param>
    </method>
    <method name="IntLong" id="IntLong" routine="IntLong" elb="TEST:if913">
      <comment>
        <line1>Coerce int to long</line1>
      </comment>
      <methodresult type="integer" coerce="long" size="8">
        <comment>
          <line1>return coerce int to long</line1>
        </comment>
      </methodresult>
      <param name="IntToLong" type="integer" coerce="long" size="8" dir="inout">
        <comment>
          <line1>Coerce int to long</line1>
        </comment>
      </param>
    </method>
    <method name="IntSbyte" id="IntSbyte" routine="IntSbyte" elb="TEST:if913">
      <comment>
        <line1>Coerce int to sbyte</line1>
      </comment>
      <methodresult type="integer" coerce="sbyte" size="1">
        <comment>
          <line1>Return coerce int to sbyte</line1>
        </comment>
      </methodresult>
      <param name="IntToSbyte" type="integer" coerce="sbyte" size="1" dir="inout">
        <comment>
          <line1>Coerce int to sbyte</line1>
        </comment>
      </param>
    </method>
    <method name="IntShort" id="IntShort" routine="IntShort" elb="TEST:if913">
      <comment>
        <line1>Coerce int to short</line1>
      </comment>
      <methodresult type="integer" coerce="short" size="2">
        <comment>
          <line1>Return coerce int to short</line1>
        </comment>
      </methodresult>
      <param name="IntToShort" type="integer" coerce="short" size="2" dir="inout">
        <comment>
          <line1>Coerce int to short</line1>
        </comment>
      </param>
    </method>
    <method name="IntUint" id="IntUint" routine="IntUint" elb="TEST:if913">
      <comment>
        <line1>Coerce int to uint</line1>
      </comment>
      <methodresult type="integer" coerce="uint" size="4">
        <comment>
          <line1>Return coerce into to uint</line1>
        </comment>
      </methodresult>
      <param name="IntToUint" type="integer" coerce="uint" size="4" dir="inout">
        <comment>
          <line1>Coerce int to uint</line1>
        </comment>
      </param>
    </method>
    <method name="IntUlong" id="IntUlong" routine="IntUlong" elb="TEST:if913">
      <comment>
        <line1>Coerce int to ulong</line1>
      </comment>
      <methodresult type="integer" coerce="ulong" size="8">
        <comment>
          <line1>Return Coerce int to ulong</line1>
        </comment>
      </methodresult>
      <param name="IntToUlong" type="integer" coerce="ulong" size="8" dir="inout">
        <comment>
          <line1>Coerce int to ulong</line1>
        </comment>
      </param>
    </method>
    <method name="IntUshort" id="IntUshort" routine="IntUshort" elb="TEST:if913">
      <comment>
        <line1>Coerce int to ushort</line1>
      </comment>
      <methodresult type="integer" coerce="ushort" size="2">
        <comment>
          <line1>Return coerce int to ushort</line1>
        </comment>
      </methodresult>
      <param name="IntToUshort" type="integer" coerce="ushort" size="2" dir="inout">
        <comment>
          <line1>Coerce int to ushort</line1>
        </comment>
      </param>
    </method>
    <method name="NDateTime14" id="NDateTime14" routine="DateTime14" elb="TEST:if913">
      <comment>
        <line1>Nullable DT yyyymmddhhmiss</line1>
      </comment>
      <methodresult type="decimal" coerce="datetime" nullable="true" format="YYYYMMDDHHMISS" size="14">
        <comment>
          <line1>rtn nullable DT 14</line1>
        </comment>
      </methodresult>
      <param name="ndatetimeOf14" type="decimal" coerce="datetime" nullable="true" format="YYYYMMDDHHMISS" size="14" dir="inout">
        <comment>
          <line1>null DT 14</line1>
        </comment>
      </param>
    </method>
    <method name="NDateyyyymmdd" id="NDateyyyymmdd" routine="Dateyyyymmdd" elb="TEST:if913">
      <comment>
        <line1>nullableDateTime</line1>
      </comment>
      <methodresult type="decimal" coerce="datetime" nullable="true" format="YYYYMMDD" size="8">
        <comment>
          <line1>nullable DateTime 8 yyyymmdd</line1>
        </comment>
      </methodresult>
      <param name="NDateTime8" type="decimal" coerce="datetime" nullable="true" format="YYYYMMDD" size="8" dir="inout">
        <comment>
          <line1>nullable DT8</line1>
        </comment>
      </param>
    </method>
    <method name="NullableDTStr" id="NullAbleDTStr" routine="NullableDTStr" elb="TEST:if913">
      <comment>
        <line1>A str with nullable dateTime fileds</line1>
      </comment>
      <param name="NULLDTSTR" type="structure" structureName="Nulldtstr" dir="inout"/>
    </method>
    <method name="NullableDTAry" id="NullableDTAry" routine="NullableDTAry" elb="TEST:if913">
      <param name="NULLDTARY" type="structure" structureName="Nulldtary" dir="inout"/>
    </method>
    <method name="NullableDTStrAL" id="NullableDTStrAL" routine="NullableDTStrAL" elb="TEST:if913">
      <comment>
        <line1>Arraylist of out strusts with nullable DateTime</line1>
      </comment>
      <param name="NULLDTSTR" type="structure" structureName="Nulldtstr" dir="out" collection="System.ArrayList" size="34"/>
    </method>
    <method name="NullssAL" id="NullssAL" routine="NullSSandAL" elb="TEST:if913">
      <comment>
        <line1>null string followed by an out AL of structures.</line1>
      </comment>
      <methodresult type="value" size="4"/>
      <param name="CustNumber" type="decimal" size="1"/>
      <param name="aDate" type="decimal" coerce="datetime" format="YYYYMMDD" size="8"/>
      <param name="info" type="string" size="0" dir="out"/>
      <param name="STRTEST1" type="structure" structureName="Strtest1" dir="out" collection="System.ArrayList" size="46"/>
    </method>
    <method name="Time4" id="Time4" routine="Time4" elb="TEST:if913">
      <comment>
        <line1>Time hhmm</line1>
      </comment>
      <methodresult type="decimal" coerce="datetime" format="HHMM" size="4">
        <comment>
          <line1>return time hhmm</line1>
        </comment>
      </methodresult>
      <param name="timehhmm" type="decimal" coerce="datetime" format="HHMM" size="4" dir="inout">
        <comment>
          <line1>Time HHMM</line1>
        </comment>
      </param>
    </method>
    <method name="Time6" id="Time6" routine="Time6" elb="TEST:if913">
      <comment>
        <line1>Time hhmmss</line1>
      </comment>
      <methodresult type="decimal" coerce="datetime" format="HHMMSS" size="6">
        <comment>
          <line1>rerturn time hhmmss</line1>
        </comment>
      </methodresult>
      <param name="timehhmmss" type="decimal" coerce="datetime" format="HHMMSS" size="6" dir="inout">
        <comment>
          <line1>time of hhmmss</line1>
        </comment>
      </param>
    </method>
    <method name="TrueString" id="TrueString" routine="TrueString" elb="TEST:if913">
      <comment>
        <line1>A system.string</line1>
      </comment>
      <methodresult type="string" size="0">
        <comment>
          <line1>return system.string</line1>
        </comment>
      </methodresult>
      <param name="astring" type="string" size="0" dir="inout">
        <comment>
          <line1>System.string</line1>
        </comment>
      </param>
    </method>
    <method name="TrueStringParmOnly" id="TrueStringParmOnly" routine="TrueStringParmOnly" elb="TEST:if913">
      <param name="SysStr" type="string" size="0" dir="inout"/>
    </method>
  </interface>
</component>
