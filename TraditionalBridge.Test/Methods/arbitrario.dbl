
import Harmony.TraditionalBridge
import System.Collections

namespace TraditionalBridge.Test.Methods

	public class arbitrario
		public method MethodWithParameters, int
			required in intValue, int
			required in stringValue, @string
			required in stringArray, [#]@string
			required out intArrayList, @ArrayList
			required inout stringArrayList, @ArrayList
			endparams
			record
				stringElement, @string
		proc
			Logger.Instance.Log("intValue was " + %string(intValue))
			if(intValue == -1)
				throw new Exception("intValue cannot be -1")

			intArrayList = new ArrayList()
			intArrayList.Add((@int)intValue)

			foreach stringElement in stringArray
				stringArrayList.Add(stringElement)
 

			mreturn stringArrayList.Count + intValue
		endmethod

	endclass

endnamespace

subroutine arbitrary_optional
	required in arg1, i
	optional in arg2, a
	optional out arg3, a
	optional inout arg4, d
proc
	if(^passed(arg2) && ^passed(arg3))
		arg3 = arg2

	if(^passed(arg4))
		arg4 = arg1 * arg4
	
	xreturn
endsubroutine

