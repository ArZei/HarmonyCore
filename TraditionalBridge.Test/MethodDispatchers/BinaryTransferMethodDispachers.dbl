;;*****************************************************************************
;;
;; Title:       BinaryTransferMethodDispachers.dbl
;;
;; Description: Dispatcher classes for exposed methods
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Json
import Harmony.TraditionalBridge
import System.Collections
import TraditionalBridge.Test.Models

namespace TraditionalBridge.Test.BinaryTransfer


	;;-------------------------------------------------------------------------
	;;; <summary>
	;;; Dispatcher for method BinaryTransfer.CreateGRFAFile
	;;; </summary>
	public class CreateGRFAFile_Dispatch extends RoutineStub


		public method CreateGRFAFile_Dispatch
		proc
			;;Initialize the meta data for any data objects that are used by parameters to the method
		endmethod

		protected override method DispatchInternal, void
			required in name,       string
			required in callFrame,  @JsonObject
			required in serializer, @DispatchSerializer
			required in dispatcher, @RoutineDispatcher
			record
				requestId,			int
				arguments,			@JsonArray
				argumentDefinition, @ArgumentDataDefinition

			endrecord


		proc

			;;------------------------------------------------------------
			;;Process inbound arguments

			;;There are no inbound arguments to process

			;;------------------------------------------------------------
			;; Call the underlying routine

			xcall CreateGRFAFile()
		endmethod

	endclass

	;;-------------------------------------------------------------------------
	;;; <summary>
	;;; Dispatcher for method BinaryTransfer.DeleteGRFAFile
	;;; </summary>
	public class DeleteGRFAFile_Dispatch extends RoutineStub


		public method DeleteGRFAFile_Dispatch
		proc
			;;Initialize the meta data for any data objects that are used by parameters to the method
		endmethod

		protected override method DispatchInternal, void
			required in name,       string
			required in callFrame,  @JsonObject
			required in serializer, @DispatchSerializer
			required in dispatcher, @RoutineDispatcher
			record
				requestId,			int
				arguments,			@JsonArray
				argumentDefinition, @ArgumentDataDefinition

			endrecord


		proc

			;;------------------------------------------------------------
			;;Process inbound arguments

			;;There are no inbound arguments to process

			;;------------------------------------------------------------
			;; Call the underlying routine

			xcall DeleteGRFAFile()
		endmethod

	endclass

	;;-------------------------------------------------------------------------
	;;; <summary>
	;;; Dispatcher for method BinaryTransfer.get0grfa
	;;; </summary>
	public class get0grfa_Dispatch extends RoutineStub

		private mGrfatestMetadata, @DataObjectMetadataBase

		public method get0grfa_Dispatch
		proc
			;;Initialize the meta data for any data objects that are used by parameters to the method
			mGrfatestMetadata = DataObjectMetadataBase.LookupType("Grfatest")
		endmethod

		protected override method DispatchInternal, void
			required in name,       string
			required in callFrame,  @JsonObject
			required in serializer, @DispatchSerializer
			required in dispatcher, @RoutineDispatcher
			record
				requestId,			int
				arguments,			@JsonArray
				argumentDefinition, @ArgumentDataDefinition

				;;Argument 1 (REQUIRED OUT grfat structure @Grfatest)
				arg1DataObject, @DataObjectBase
				arg1, strGrfatest
			endrecord


		proc

			;;------------------------------------------------------------
			;;Process inbound arguments

			;;There are no inbound arguments to process

			;;------------------------------------------------------------
			;; Call the underlying routine

			xcall get0grfa(arg1)

			;;--------------------------------------------------------------------------------
			;;Argument 1 (REQUIRED OUT grfat structure @Grfatest)
			
			serializer.ArgumentData(1, arg1, FieldDataType.DataObjectField, 20, "GRFATEST", false)
			
		endmethod

	endclass

	;;-------------------------------------------------------------------------
	;;; <summary>
	;;; Dispatcher for method BinaryTransfer.getarraylist
	;;; </summary>
	public class getarraylist_Dispatch extends RoutineStub

		private mTeststructMetadata, @DataObjectMetadataBase

		public method getarraylist_Dispatch
		proc
			;;Initialize the meta data for any data objects that are used by parameters to the method
			mTeststructMetadata = DataObjectMetadataBase.LookupType("Teststruct")
		endmethod

		protected override method DispatchInternal, void
			required in name,       string
			required in callFrame,  @JsonObject
			required in serializer, @DispatchSerializer
			required in dispatcher, @RoutineDispatcher
			record
				requestId,			int
				arguments,			@JsonArray
				argumentDefinition, @ArgumentDataDefinition

				;;Argument 1 (REQUIRED OUT myarraylist ArrayList collection of structure @Teststruct)
				arg1,				@ArrayList
			endrecord


		proc

			;;------------------------------------------------------------
			;;Process inbound arguments

			;;There are no inbound arguments to process

			;;------------------------------------------------------------
			;; Call the underlying routine

			xcall getarraylist(arg1)

			;;--------------------------------------------------------------------------------
			;;Argument 1 (REQUIRED OUT myarraylist ArrayList collection of structure @Teststruct)
			
			serializer.ArgumentData(1, arg1, FieldDataType.DataObjectCollectionField, 1, "TESTSTRUCT", false)
		endmethod

	endclass

	;;-------------------------------------------------------------------------
	;;; <summary>
	;;; Dispatcher for method BinaryTransfer.getbyte
	;;; </summary>
	public class getbyte_Dispatch extends RoutineStub


		public method getbyte_Dispatch
		proc
			;;Initialize the meta data for any data objects that are used by parameters to the method
		endmethod

		protected override method DispatchInternal, void
			required in name,       string
			required in callFrame,  @JsonObject
			required in serializer, @DispatchSerializer
			required in dispatcher, @RoutineDispatcher
			record
				requestId,			int
				arguments,			@JsonArray
				argumentDefinition, @ArgumentDataDefinition

				;;Argument 1 (REQUIRED OUT mybyte I1)
				arg1,				i1
			endrecord


		proc

			;;------------------------------------------------------------
			;;Process inbound arguments

			;;There are no inbound arguments to process

			;;------------------------------------------------------------
			;; Call the underlying routine

			xcall getbyte(arg1)

			;;--------------------------------------------------------------------------------
			;;Argument 1 (REQUIRED OUT mybyte I1)
			
			serializer.ArgumentData(1, arg1, FieldDataType.IntegerField, 1, 0, false)
			
			
		endmethod

	endclass

	;;-------------------------------------------------------------------------
	;;; <summary>
	;;; Dispatcher for method BinaryTransfer.getbytea
	;;; </summary>
	public class getbytea_Dispatch extends RoutineStub


		public method getbytea_Dispatch
		proc
			;;Initialize the meta data for any data objects that are used by parameters to the method
		endmethod

		protected override method DispatchInternal, void
			required in name,       string
			required in callFrame,  @JsonObject
			required in serializer, @DispatchSerializer
			required in dispatcher, @RoutineDispatcher
			record
				requestId,			int
				arguments,			@JsonArray
				argumentDefinition, @ArgumentDataDefinition

				;;Argument 1 (REQUIRED OUT amybyte [*]I1)
				arg1Handle,			D_HANDLE
				arg1HandlePos,		int
			endrecord

			;;Temp structure tempstr1
			structure tempstr1
				arry, [1]I1
			endstructure


		proc

			;;------------------------------------------------------------
			;;Process inbound arguments

			;;There are no inbound arguments to process

			;;------------------------------------------------------------
			;; Call the underlying routine

			xcall getbytea(^m(tempstr1.arry,arg1Handle))

			;;--------------------------------------------------------------------------------
			;;Argument 1 (REQUIRED OUT amybyte [*]I1)
			
			;serializer.ArgumentHandleData(1, arg1Handle, FieldDataType.IntegerArrayField, 1, 0, arg1Array.arrayValues.Count, false)
		endmethod

	endclass

	;;-------------------------------------------------------------------------
	;;; <summary>
	;;; Dispatcher for method BinaryTransfer.getstruct
	;;; </summary>
	public class getstruct_Dispatch extends RoutineStub

		private mIntegerMetadata, @DataObjectMetadataBase

		public method getstruct_Dispatch
		proc
			;;Initialize the meta data for any data objects that are used by parameters to the method
			mIntegerMetadata = DataObjectMetadataBase.LookupType("Integer")
		endmethod

		protected override method DispatchInternal, void
			required in name,       string
			required in callFrame,  @JsonObject
			required in serializer, @DispatchSerializer
			required in dispatcher, @RoutineDispatcher
			record
				requestId,			int
				arguments,			@JsonArray
				argumentDefinition, @ArgumentDataDefinition

				;;Argument 1 (REQUIRED OUT amyintegers structure @Integer)
				arg1DataObject, @DataObjectBase
				arg1, strInteger
			endrecord


		proc

			;;------------------------------------------------------------
			;;Process inbound arguments

			;;There are no inbound arguments to process

			;;------------------------------------------------------------
			;; Call the underlying routine

			xcall getstruct(arg1)

			;;--------------------------------------------------------------------------------
			;;Argument 1 (REQUIRED OUT amyintegers structure @Integer)
			
			serializer.ArgumentData(1, arg1, FieldDataType.DataObjectField, 342, "INTEGERS", false)
			
		endmethod

	endclass

	;;-------------------------------------------------------------------------
	;;; <summary>
	;;; Dispatcher for method BinaryTransfer.getstructa
	;;; </summary>
	public class getstructa_Dispatch extends RoutineStub

		private mIntegerMetadata, @DataObjectMetadataBase

		public method getstructa_Dispatch
		proc
			;;Initialize the meta data for any data objects that are used by parameters to the method
			mIntegerMetadata = DataObjectMetadataBase.LookupType("Integer")
		endmethod

		protected override method DispatchInternal, void
			required in name,       string
			required in callFrame,  @JsonObject
			required in serializer, @DispatchSerializer
			required in dispatcher, @RoutineDispatcher
			record
				requestId,			int
				arguments,			@JsonArray
				argumentDefinition, @ArgumentDataDefinition

				;;Argument 1 (REQUIRED OUT amyintegers [*]structure @Integer)
				arg1Handle,			D_HANDLE
				arg1HandlePos,		int
			endrecord

			;;Temp structure tempstr1
			structure tempstr1
				arry, @Integer
			endstructure


		proc

			;;------------------------------------------------------------
			;;Process inbound arguments

			;;There are no inbound arguments to process

			;;------------------------------------------------------------
			;; Call the underlying routine

			xcall getstructa(^m(strInteger,arg1Handle))

			;;--------------------------------------------------------------------------------
			;;Argument 1 (REQUIRED OUT amyintegers [*]structure @Integer)
			
			;serializer.ArgumentHandleData(1, arg1Handle, FieldDataType.DataObjectCollectionField, 342, "INTEGERS", arg1Array.arrayValues.Count, false)
		endmethod

	endclass

	;;-------------------------------------------------------------------------
	;;; <summary>
	;;; Dispatcher for method BinaryTransfer.getuint
	;;; </summary>
	public class getuint_Dispatch extends RoutineStub


		public method getuint_Dispatch
		proc
			;;Initialize the meta data for any data objects that are used by parameters to the method
		endmethod

		protected override method DispatchInternal, void
			required in name,       string
			required in callFrame,  @JsonObject
			required in serializer, @DispatchSerializer
			required in dispatcher, @RoutineDispatcher
			record
				requestId,			int
				arguments,			@JsonArray
				argumentDefinition, @ArgumentDataDefinition

				;;Argument 1 (REQUIRED OUT myuint I4)
				arg1,				i4
			endrecord


		proc

			;;------------------------------------------------------------
			;;Process inbound arguments

			;;There are no inbound arguments to process

			;;------------------------------------------------------------
			;; Call the underlying routine

			xcall getuint(arg1)

			;;--------------------------------------------------------------------------------
			;;Argument 1 (REQUIRED OUT myuint I4)
			
			serializer.ArgumentData(1, arg1, FieldDataType.IntegerField, 4, 0, false)
			
			
		endmethod

	endclass

	;;-------------------------------------------------------------------------
	;;; <summary>
	;;; Dispatcher for method BinaryTransfer.getuinta
	;;; </summary>
	public class getuinta_Dispatch extends RoutineStub


		public method getuinta_Dispatch
		proc
			;;Initialize the meta data for any data objects that are used by parameters to the method
		endmethod

		protected override method DispatchInternal, void
			required in name,       string
			required in callFrame,  @JsonObject
			required in serializer, @DispatchSerializer
			required in dispatcher, @RoutineDispatcher
			record
				requestId,			int
				arguments,			@JsonArray
				argumentDefinition, @ArgumentDataDefinition

				;;Argument 1 (REQUIRED OUT amyuint [*]I4)
				arg1Handle,			D_HANDLE
				arg1HandlePos,		int
			endrecord

			;;Temp structure tempstr1
			structure tempstr1
				arry, [1]I4
			endstructure


		proc

			;;------------------------------------------------------------
			;;Process inbound arguments

			;;There are no inbound arguments to process

			;;------------------------------------------------------------
			;; Call the underlying routine

			xcall getuinta(^m(tempstr1.arry,arg1Handle))

			;;--------------------------------------------------------------------------------
			;;Argument 1 (REQUIRED OUT amyuint [*]I4)
			
			;serializer.ArgumentHandleData(1, arg1Handle, FieldDataType.IntegerArrayField, 4, 0, arg1Array.arrayValues.Count, false)
		endmethod

	endclass

	;;-------------------------------------------------------------------------
	;;; <summary>
	;;; Dispatcher for method BinaryTransfer.getushort
	;;; </summary>
	public class getushort_Dispatch extends RoutineStub


		public method getushort_Dispatch
		proc
			;;Initialize the meta data for any data objects that are used by parameters to the method
		endmethod

		protected override method DispatchInternal, void
			required in name,       string
			required in callFrame,  @JsonObject
			required in serializer, @DispatchSerializer
			required in dispatcher, @RoutineDispatcher
			record
				requestId,			int
				arguments,			@JsonArray
				argumentDefinition, @ArgumentDataDefinition

				;;Argument 1 (REQUIRED OUT myushort I2)
				arg1,				i2
			endrecord


		proc

			;;------------------------------------------------------------
			;;Process inbound arguments

			;;There are no inbound arguments to process

			;;------------------------------------------------------------
			;; Call the underlying routine

			xcall getushort(arg1)

			;;--------------------------------------------------------------------------------
			;;Argument 1 (REQUIRED OUT myushort I2)
			
			serializer.ArgumentData(1, arg1, FieldDataType.IntegerField, 2, 0, false)
			
			
		endmethod

	endclass

	;;-------------------------------------------------------------------------
	;;; <summary>
	;;; Dispatcher for method BinaryTransfer.getushorta
	;;; </summary>
	public class getushorta_Dispatch extends RoutineStub


		public method getushorta_Dispatch
		proc
			;;Initialize the meta data for any data objects that are used by parameters to the method
		endmethod

		protected override method DispatchInternal, void
			required in name,       string
			required in callFrame,  @JsonObject
			required in serializer, @DispatchSerializer
			required in dispatcher, @RoutineDispatcher
			record
				requestId,			int
				arguments,			@JsonArray
				argumentDefinition, @ArgumentDataDefinition

				;;Argument 1 (REQUIRED OUT amyushort [*]I2)
				arg1Handle,			D_HANDLE
				arg1HandlePos,		int
			endrecord

			;;Temp structure tempstr1
			structure tempstr1
				arry, [1]I2
			endstructure


		proc

			;;------------------------------------------------------------
			;;Process inbound arguments

			;;There are no inbound arguments to process

			;;------------------------------------------------------------
			;; Call the underlying routine

			xcall getushorta(^m(tempstr1.arry,arg1Handle))

			;;--------------------------------------------------------------------------------
			;;Argument 1 (REQUIRED OUT amyushort [*]I2)
			
			;serializer.ArgumentHandleData(1, arg1Handle, FieldDataType.IntegerArrayField, 2, 0, arg1Array.arrayValues.Count, false)
		endmethod

	endclass

	;;-------------------------------------------------------------------------
	;;; <summary>
	;;; Dispatcher for method BinaryTransfer.setbytea
	;;; </summary>
	public class setbytea_Dispatch extends RoutineStub


		public method setbytea_Dispatch
		proc
			;;Initialize the meta data for any data objects that are used by parameters to the method
		endmethod

		protected override method DispatchInternal, void
			required in name,       string
			required in callFrame,  @JsonObject
			required in serializer, @DispatchSerializer
			required in dispatcher, @RoutineDispatcher
			record
				requestId,			int
				arguments,			@JsonArray
				argumentDefinition, @ArgumentDataDefinition

				;;Argument 1 (REQUIRED IN amybyte [*]I1)
				arg1Array,			@JsonArray
				arg1Handle,			D_HANDLE
				arg1HandlePos,		int
			endrecord

			;;Temp structure tempstr1
			structure tempstr1
				arry, [1]I1
			endstructure


		proc

			;;------------------------------------------------------------
			;;Process inbound arguments

			arguments = (@JsonArray)callFrame.GetProperty("params")

			;;Argument 1 (REQUIRED IN amybyte [*]I1)
			argumentDefinition = dispatcher.GetArgumentDataDefForCollection((@JsonObject)arguments.arrayValues[1])
			arg1Array = (@JsonArray)((@JsonObject)arguments.arrayValues[1]).GetProperty("PassedValue")
			arg1Handle = %mem_proc(DM_ALLOC,argumentDefinition.ElementSize*arg1Array.arrayValues.Count)
			arg1HandlePos = 1
			dispatcher.UnwrapObjectCollection(^m(arg1Handle),argumentDefinition,arg1HandlePos,arg1Array)

			;;------------------------------------------------------------
			;; Call the underlying routine

			xcall setbytea(^m(tempstr1.arry,arg1Handle))
		endmethod

	endclass

	;;-------------------------------------------------------------------------
	;;; <summary>
	;;; Dispatcher for method BinaryTransfer.setushorta
	;;; </summary>
	public class setushorta_Dispatch extends RoutineStub


		public method setushorta_Dispatch
		proc
			;;Initialize the meta data for any data objects that are used by parameters to the method
		endmethod

		protected override method DispatchInternal, void
			required in name,       string
			required in callFrame,  @JsonObject
			required in serializer, @DispatchSerializer
			required in dispatcher, @RoutineDispatcher
			record
				requestId,			int
				arguments,			@JsonArray
				argumentDefinition, @ArgumentDataDefinition

				;;Argument 1 (REQUIRED IN amyushort [*]I2)
				arg1Array,			@JsonArray
				arg1Handle,			D_HANDLE
				arg1HandlePos,		int
			endrecord

			;;Temp structure tempstr1
			structure tempstr1
				arry, [1]I2
			endstructure


		proc

			;;------------------------------------------------------------
			;;Process inbound arguments

			arguments = (@JsonArray)callFrame.GetProperty("params")

			;;Argument 1 (REQUIRED IN amyushort [*]I2)
			argumentDefinition = dispatcher.GetArgumentDataDefForCollection((@JsonObject)arguments.arrayValues[1])
			arg1Array = (@JsonArray)((@JsonObject)arguments.arrayValues[1]).GetProperty("PassedValue")
			arg1Handle = %mem_proc(DM_ALLOC,argumentDefinition.ElementSize*arg1Array.arrayValues.Count)
			arg1HandlePos = 1
			dispatcher.UnwrapObjectCollection(^m(arg1Handle),argumentDefinition,arg1HandlePos,arg1Array)

			;;------------------------------------------------------------
			;; Call the underlying routine

			xcall setushorta(^m(tempstr1.arry,arg1Handle))
		endmethod

	endclass

	;;-------------------------------------------------------------------------
	;;; <summary>
	;;; Dispatcher for method BinaryTransfer.xfReadWithGrfa
	;;; </summary>
	public class xfReadWithGrfa_Dispatch extends RoutineStub

		private mGrfatestMetadata, @DataObjectMetadataBase

		public method xfReadWithGrfa_Dispatch
		proc
			;;Initialize the meta data for any data objects that are used by parameters to the method
			mGrfatestMetadata = DataObjectMetadataBase.LookupType("Grfatest")
		endmethod

		protected override method DispatchInternal, void
			required in name,       string
			required in callFrame,  @JsonObject
			required in serializer, @DispatchSerializer
			required in dispatcher, @RoutineDispatcher
			record
				requestId,			int
				arguments,			@JsonArray
				argumentDefinition, @ArgumentDataDefinition

				;;Argument 1 (REQUIRED IN grfa structure @Grfatest)
				arg1DataObject, @DataObjectBase
				arg1, strGrfatest
			endrecord


		proc

			;;------------------------------------------------------------
			;;Process inbound arguments

			arguments = (@JsonArray)callFrame.GetProperty("params")

			;;Argument 1 (REQUIRED IN grfa structure @Grfatest)
			;;Structure argument. Get the data object then get the record from it
			arg1DataObject = dispatcher.DeserializeObject((@JsonObject)arguments.arrayValues[3],mGrfatestMetadata)
			arg1 = arg1DataObject.SynergyRecord

			;;------------------------------------------------------------
			;; Call the underlying routine

			xcall xfReadWithGrfa(arg1)
		endmethod

	endclass

endnamespace