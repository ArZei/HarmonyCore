;;*****************************************************************************
;;
;; Title:       Pool5MethodDispachers.dbl
;;
;; Description: Dispatcher classes for exposed methods
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Json
import Harmony.TraditionalBridge
import System.Collections
import TraditionalBridge.Test.Models

namespace TraditionalBridge.Test.Pool5


    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method Pool5.CanBePooled
    ;;; </summary>
    public class CanBePooled_Dispatcher extends RoutineStub


        public method CanBePooled_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  @JsonObject
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          @JsonArray
                argumentDefinition, @ArgumentDataDefinition

                returnValue,         I4
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            ;;There are no inbound arguments to process

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            returnValue = %CanBePooled()

            ;;Function return value
            serializer.ArgumentData(0, returnValue)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method Pool5.getGreeting
    ;;; </summary>
    public class getGreeting_Dispatcher extends RoutineStub


        public method getGreeting_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  @JsonObject
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          @JsonArray
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED OUT message A30)
                arg1,               a30
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            ;;There are no inbound arguments to process

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall getGreeting(arg1)

            ;;--------------------------------------------------------------------------------
            ;;Argument 1 (REQUIRED OUT message A30)
            
            serializer.ArgumentData(1, %atrim(arg1), FieldDataType.AlphaField, 30, 0, false)
        endmethod

    endclass

    ;;-------------------------------------------------------------------------
    ;;; <summary>
    ;;; Dispatcher for method Pool5.setGreeting
    ;;; </summary>
    public class setGreeting_Dispatcher extends RoutineStub


        public method setGreeting_Dispatcher
        proc
            ;;Initialize the meta data for any data objects that are used by parameters to the method
        endmethod

        protected override method DispatchInternal, void
            required in name,       string
            required in callFrame,  @JsonObject
            required in serializer, @DispatchSerializer
            required in dispatcher, @RoutineDispatcher
            record
                requestId,          int
                arguments,          @JsonArray
                argumentDefinition, @ArgumentDataDefinition

                ;;Argument 1 (REQUIRED IN message A30)
                arg1,               a30
            endrecord


        proc

            ;;------------------------------------------------------------
            ;;Process inbound arguments

            arguments = (@JsonArray)callFrame.GetProperty("params")

            ;;Argument 1 (REQUIRED IN message A30)
            arg1 = dispatcher.GetText((@JsonObject)arguments.arrayValues[1])

            ;;------------------------------------------------------------
            ;; Call the underlying routine

            xcall setGreeting(arg1)
        endmethod

    endclass

endnamespace