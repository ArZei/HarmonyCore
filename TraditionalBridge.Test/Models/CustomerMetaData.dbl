;;*****************************************************************************
;;
;; Title:       CustomerMetaData.dbl
;;
;; Description: Defines meta data associated with a data object Customer.
;;
;;*****************************************************************************
;; WARNING: GENERATED CODE!
;; This file was generated by CodeGen. Avoid editing the file if possible.
;; Any changes you make will be lost of the file is re-generated.
;;*****************************************************************************

import Harmony.TraditionalBridge

subroutine MetaCustomer
	required out metadata, @DataObjectMetadataBase
proc
	if(Customer.sMetadata == ^null)
		Customer.sMetadata = new CustomerMetadata()
	metadata = Customer.sMetadata
	xreturn
endsubroutine

namespace TraditionalBridge.Test.Models

	.include "CUSTOMER" repository  , structure="strCustomer", end

	public partial class CustomerMetadata extends DataObjectMetadataBase
		
		public method CustomerMetadata
		proc
			RPSStructureName = "CUSTOMER"
			RPSStructureSize = ^size(strCustomer)
			;AddFieldInfo("Fakefield", "ALPHA", 100, 1, 0, false)
			;AddFieldInfo("Tmpal5", "ALPHA", 5, 101, 0, false)
			;AddFieldInfo("Tmpal5a", "ALPHA", 5, 106, 0, false)
			;AddFieldInfo("Tmpd10", "DECIMAL", 10, 111, 0, false)
		endmethod

		public override method GetFieldByName, @FieldDataDefinition
			fieldName, @string
		proc
			mreturn ^null
		endmethod

		public override method MakeNew, @DataObjectBase
			required in dataArea, a
			required in grfa, a
			record
				newCustomer, @Customer
		proc
			newCustomer = new Customer(dataArea) 
			newCustomer.GlobalRFA = grfa
			mreturn newCustomer
		endmethod

	endclass

endnamespace