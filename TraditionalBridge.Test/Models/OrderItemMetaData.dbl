;;*****************************************************************************
;;
;; Title:       OrderItemMetaData.dbl
;;
;; Type:        Class
;;
;; Description: Defines meta data associated with a data object OrderItem.
;;
;;*****************************************************************************
;; WARNING
;;
;; This file was code generated. Avoid editing this file, as any changes that
;; you make will be lost of the file is re-generated.
;;
;;*****************************************************************************
;;
;; Copyright (c) 2018, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

import Harmony.TraditionalBridge

subroutine MetaOrderItem
	required out metadata, @DataObjectMetadataBase
proc
	if(OrderItem.sMetadata == ^null)
		OrderItem.sMetadata = new OrderItemMetadata()
	metadata = OrderItem.sMetadata
	xreturn
endsubroutine

namespace TraditionalBridge.Test.Models

	.include "ORDER_ITEMS" repository  , structure="strOrderItem", end

	public partial class OrderItemMetadata extends DataObjectMetadataBase
		
		public method OrderItemMetadata
		proc
			RPSStructureName = "ORDER_ITEMS"
			RPSStructureSize = ^size(strOrderItem)
			;AddFieldInfo("OiNumber", "DECIMAL", 6, 1, 0, false)
			;AddFieldInfo("OiLineItem", "DECIMAL", 2, 7, 0, false)
			;AddFieldInfo("OiItemOrdered", "DECIMAL", 6, 9, 0, false)
			;AddFieldInfo("OiQty", "DECIMAL", 6, 15, 0, false)
			;AddFieldInfo("OiUnitPrice", "IMPLIED", 7, 21, 02, false)
			;AddFieldInfo("OiShipped", "DATE", 8, 28, 0, false)
			;AddFieldInfo("OiInvoice", "DECIMAL", 7, 36, 0, false)
		endmethod

		public override method GetFieldByName, @FieldDataDefinition
			fieldName, @string
		proc
			mreturn ^null
		endmethod

		public override method MakeNew, @DataObjectBase
			required in dataArea, a
			required in grfa, a
			record
				newOrderItem, @OrderItem
		proc
			newOrderItem = new OrderItem(dataArea) 
			newOrderItem.GlobalRFA = grfa
			mreturn newOrderItem
		endmethod

	endclass

endnamespace