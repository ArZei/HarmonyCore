
;;; <summary>
;;; The main entry point for the application.
;;; </summary>
main

	.include "ORDERS_OLD" repository, record="order_old"
	.include "ORDERS" repository, record="order"
	.include "ORDER_ITEMS" repository, record="order_item"
	.include "CUSTOMERS" repository, record="customer"
	.include "PLANTS" repository, record="plant"

	record
		chCustomer, i4, 1
		chPlant, i4, 2
		chOrderOld, i4, 3
		chOrder, i4, 4
		chOrderItem, i4, 5
	endrecord

proc

	open(chCustomer,i:i,"ICSTUT:customer.ism")
	open(chPlant,i:i,"ICSTUT:plants.ism")
	open(chOrderOld,i:i,"ICSTUT:orders_old.ism")
	open(chOrder,u:i,"ICSTUT:orders.ism")
	open(chOrderItem,u:i,"ICSTUT:order_items.ism")
	
	repeat
	begin
		;;Read the old order
		reads(chOrderOld,order_old,eofOrderOld)

		;;Read the associated customer
		read(chCustomer,customer,order_old.or_customer)

		;;Read the associated plant
		read(chPlant,plant,order_old.or_item)
		
		;;Fill the new order record
		init order
		order.or_number = order_old.or_number
		order.or_customer = order_old.or_customer
		order.or_placed_by = customer.cust_contact
		order.or_customer_ref = %GetRandomCustomerReference
		order.or_terms = order_old.or_terms
		order.or_ordered = order_old.or_odate
		;order.or_completed = ???

		;;Fill in the new order item
		order_item.oi_number = order.or_number
		order_item.oi_line_item = 1
		order_item.oi_item_ordered = order_old.or_item
		order_item.oi_qty = order_old.or_qty
		order_item.oi_unit_price = order_old.or_price
		order_item.oi_shipped = order_old.or_sdate
		order_item.oi_invoice = order_old.or_invoice

		;;Save the new order
		store(chOrder,order)
		store(chOrderItem,order_item)

	end
eofOrderOld,

	close chCustomer
	close chPlant
	close chOrderOld
	close chOrder
	close chOrderItem

	stop

endmain

function GetRandomCustomerReference, string
proc
	freturn ""
endfunction
