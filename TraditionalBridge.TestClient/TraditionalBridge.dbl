import System
import System.Collections.Generic
import System.Text
import Harmony.Core.Context
import System.IO
import System.Linq
import Microsoft.Extensions.DependencyInjection
import Microsoft.VisualStudio.TestTools.UnitTesting
import System.Threading.Tasks
import Newtonsoft.Json.Linq
import StreamJsonRpc
import Harmony.Core.Utility


namespace TraditionalBridge.TestClient

	{TestClass}
	public class TraditionalBridge

		private method GetContextPool<T(IContextBase, class)>, @ExternalContextPool<T>
		proc
			data currentDirectory = Path.GetDirectoryName(^typeof(TraditionalBridge).Assembly.Location)
			data contextPool = new ExternalContextPool<T>(Environment.GetEnvironmentVariable("SYNERGYDE64") + "dbl\bin\dbs.exe", 'TraditionalBridge.Test.dbr', Path.GetFullPath(Path.Combine(Environment.GetEnvironmentVariable("SolutionDir") ?? "..\..\..\..\", "TestDir")), ^null, 4) 
			mreturn contextPool
		endmethod

		{TestMethod}
		public async method LocalTest, @Task
		proc
			disposable data contextPool = GetContextPool<ExternalCallContext>()
			data sp = new ServiceCollection().BuildServiceProvider()
			
			data context = contextPool.MakeContext(sp)
		endmethod

	endclass
endnamespace
